---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: l7portals.security.brcmlabs.com
spec:
  group: security.brcmlabs.com
  names:
    kind: L7Portal
    listKind: L7PortalList
    plural: l7portals
    singular: l7portal
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: L7Portal is the Schema for the l7portals API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: L7PortalSpec defines the desired state of L7Portal
            properties:
              auth:
                description: Auth - Portal credentials
                properties:
                  clientId:
                    type: string
                  clientSecret:
                    type: string
                  endpoint:
                    type: string
                  existingSecretName:
                    type: string
                type: object
              bootstrap:
                description: Bootstrap configures an initContainer that is injected
                  into the Gateway Deployment. It contains Portal specific L7Apis
                  that are bulk loaded via bootstrap. this does not currently include
                  the Portal enrollment bundle which is currently loaded via a different
                  initContainer
                properties:
                  initContainerImage:
                    description: InitContainerImage for the initContainer
                    type: string
                  initContainerImagePullPolicy:
                    description: InitContainerImagePullPolicy
                    type: string
                  initContainerSecurityContext:
                    description: InitContainerSecurityContext
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN Note that this field cannot be set
                          when spec.os.name is windows.'
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the
                          container runtime. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false. Note that this field cannot
                          be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled. Note that this field cannot be set when spec.os.name
                          is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false. Note that this field cannot be set when
                          spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence. Note
                          that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by this container.
                          If seccomp options are provided at both the pod & container
                          level, the container options override the pod options. Note
                          that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must be set if type is "Localhost". Must NOT
                              be set for any other type.
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options from the PodSecurityContext
                          will be used. If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is
                          linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. All of a Pod's
                              containers must have the same effective HostProcess
                              value (it is not allowed to have a mix of HostProcess
                              containers and non-HostProcess containers). In addition,
                              if HostProcess is true then HostNetwork must also be
                              set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                type: object
              deploymentTags:
                description: Deployment Tags - determines which Gateway deployments
                  these APIs will be applied to
                items:
                  type: string
                type: array
              enabled:
                description: Enabled - if enabled this Portal and its APIs will be
                  synced
                type: boolean
              endpoint:
                description: Endoint - Portal endpoint
                type: string
              enrollmentBundle:
                description: EnrollmentBundle - allows a custom enrollment bundle
                  to be set in the Portal CR
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels - Custom Labels
                type: object
              mode:
                description: Mode determines how or if the Portal is contacted defaults
                  to auto, options are auto, local. Local requires enrollmentBundle
                  to be set.
                type: string
              portalManaged:
                description: PortalManaged if PortalManaged is true the portal controller
                  will not manage APIs and will be only be responsible for maintaining
                  a list of L7Api Portal published Metadata.
                type: boolean
              portalTenant:
                description: PortalTenant is the tenantId of the API Developer Portal
                type: string
              syncIntervalSeconds:
                description: SyncIntervalSeconds how often the Portal CR is reconciled.
                  Default is 10 seconds
                type: integer
            type: object
          status:
            description: L7PortalStatus defines the observed state of L7Portal
            properties:
              apiCount:
                type: integer
              apiSummaryConfigMap:
                type: string
              checksum:
                type: string
              enrollmentBundle:
                description: EnrollmentBundle
                properties:
                  lastUpdated:
                    type: string
                  secretName:
                    type: string
                type: object
              lastUpdated:
                format: int64
                type: integer
              proxies:
                items:
                  description: GatewayProxy
                  properties:
                    gateways:
                      items:
                        properties:
                          lastUpdated:
                            type: string
                          name:
                            type: string
                          synchronised:
                            type: boolean
                        type: object
                      type: array
                    name:
                      type: string
                    type:
                      description: Type - Ephemeral or DbBacked
                      type: string
                  type: object
                type: array
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
