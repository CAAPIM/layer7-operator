apiVersion: v1
kind: ConfigMap
metadata:
  name: test-system-override
data:
  test.properties: |-
    com.l7tech.server.extension.sharedKeyValueStoreProvider=embeddedhazelcast
---
apiVersion: v1
kind: Secret
metadata:
  name: config-override-secret
data:
  sample.properties: ICBjb20ubDd0ZWNoLmxldmVsID0gSU5GTwogICAgY29tLmw3dGVjaC5zZXJ2ZXIucG9saWN5LnZhcmlhYmxlLlNlcnZlclZhcmlhYmxlcy5sZXZlbCA9IFNFVkVSRQ==
---
apiVersion: security.brcmlabs.com/v1
kind: Gateway
metadata:
  name: ssg
spec:
  version: "11.0.00_CR2"
  license:
    accept: true
    secretName: gateway-license
  app:
    replicas: 1
    image: docker.io/caapim/gateway:11.0.00_CR2
    imagePullPolicy: IfNotPresent
    #serviceAccountName: ssg-serviceaccount
    lifecycleHooks:
      postStart:
        exec:
          command: [ "/bin/sh", "-c", "echo Hello" ]
      preStop:
        exec:
          command: [ "/bin/sh", "-c", "echo Hello" ]
    management:
      restman:
        enabled: true
      graphman:
        enabled: true
    podAnnotations:
      testAnnotation: test1
    updateStrategy:
      type: rollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 2
    topologySpreadConstraints:
      - maxSkew: 2
        topologyKey: testTopology
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: ssg
    tolerations:
      - key: "key1"
        operator: "Equal"
        value: "value1"
        effect: "NoSchedule"
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: disktype
                  operator: In
                  values:
                    - ssd
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 3000
      fsGroup: 2000
    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 3000
    bootstrap:
      script:
        enabled: true
    customHosts:
      enabled: true
      hostAliases:
       - hostnames:
         - "dev.ca.com"
         - "dev1.ca.com"
         ip: "0.0.0.0"
       - hostnames:
         - "example.ca.com"
         ip: "127.0.0.1"
    resources:
      requests: {}
      limits: {}
    livenessProbe:
      exec:
        command:
          - /opt/docker/rc.d/diagnostic/health_check.sh
      initialDelaySeconds: 40
      timeoutSeconds: 1
      periodSeconds: 15
      successThreshold: 1
      failureThreshold: 25
    readinessProbe:
      exec:
        command:
          - /opt/docker/rc.d/diagnostic/health_check.sh
      initialDelaySeconds: 40
      timeoutSeconds: 1
      periodSeconds: 15
      successThreshold: 1
      failureThreshold: 25
    autoscaling:
      enabled: false
    customConfig:
      enabled: true
      mounts:
       - name: sample-override
         mountPath: /opt/SecureSpan/Gateway/node/default/etc/conf/sample.properties
         subPath: sample.properties
         ref:
           type: secret
           name: config-override-secret
           item:
             key: sample.properties
             path: sample.properties
       - name: system-override
         mountPath: /opt/docker/test.properties
         subPath: test.properties
         ref:
           type: configmap
           name: test-system-override
           item:
             key: test.properties
             path: test.properties
    java:
      jvmHeap:
        calculate: true
        percentage: 50
        default: 2g
      extraArgs:
        - -Dcom.l7tech.bootstrap.autoTrustSslKey=trustAnchor,TrustedFor.SSL,TrustedFor.SAML_ISSUER
        - -Dcom.l7tech.server.audit.message.saveToInternal=false
        - -Dcom.l7tech.server.audit.admin.saveToInternal=false
        - -Dcom.l7tech.server.audit.system.saveToInternal=false
        - -Dcom.l7tech.server.audit.log.format=json
        - -Djava.util.logging.config.file=/opt/SecureSpan/Gateway/node/default/etc/conf/log-override.properties
        - -Dcom.l7tech.server.pkix.useDefaultTrustAnchors=true
        - -Dcom.l7tech.security.ssl.hostAllowWildcard=true
    listenPorts:
      harden: true
      custom:
        enabled: false
      ports: [ ]
    service:
      # annotations:
      type: LoadBalancer
      ports:
        - name: https
          port: 8443
          targetPort: 8443
          protocol: TCP
        - name: management
          port: 9443
          targetPort: 9443
          protocol: TCP