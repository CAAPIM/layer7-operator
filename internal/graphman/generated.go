// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphman

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

type ActiveConnectorInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The active connector name
	Name string `json:"name"`
	// Whether this active connector is enabled
	Enabled bool `json:"enabled"`
	// The active connector type - KAFKA, SFTP_POLLING_LISTENER, MQ_NATIVE
	ConnectorType ActiveConnectorType `json:"connectorType"`
	// The name of the published service hardwired to the active connector
	HardwiredServiceName string `json:"hardwiredServiceName"`
	// The active connector properties
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// The advanced properties for active connector
	AdvancedProperties []*EntityPropertyInput `json:"advancedProperties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns ActiveConnectorInput.Goid, and is useful for accessing the field via an interface.
func (v *ActiveConnectorInput) GetGoid() string { return v.Goid }

// GetName returns ActiveConnectorInput.Name, and is useful for accessing the field via an interface.
func (v *ActiveConnectorInput) GetName() string { return v.Name }

// GetEnabled returns ActiveConnectorInput.Enabled, and is useful for accessing the field via an interface.
func (v *ActiveConnectorInput) GetEnabled() bool { return v.Enabled }

// GetConnectorType returns ActiveConnectorInput.ConnectorType, and is useful for accessing the field via an interface.
func (v *ActiveConnectorInput) GetConnectorType() ActiveConnectorType { return v.ConnectorType }

// GetHardwiredServiceName returns ActiveConnectorInput.HardwiredServiceName, and is useful for accessing the field via an interface.
func (v *ActiveConnectorInput) GetHardwiredServiceName() string { return v.HardwiredServiceName }

// GetProperties returns ActiveConnectorInput.Properties, and is useful for accessing the field via an interface.
func (v *ActiveConnectorInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetAdvancedProperties returns ActiveConnectorInput.AdvancedProperties, and is useful for accessing the field via an interface.
func (v *ActiveConnectorInput) GetAdvancedProperties() []*EntityPropertyInput {
	return v.AdvancedProperties
}

// GetChecksum returns ActiveConnectorInput.Checksum, and is useful for accessing the field via an interface.
func (v *ActiveConnectorInput) GetChecksum() string { return v.Checksum }

type ActiveConnectorType string

const (
	ActiveConnectorTypeKafka               ActiveConnectorType = "KAFKA"
	ActiveConnectorTypeSftpPollingListener ActiveConnectorType = "SFTP_POLLING_LISTENER"
	ActiveConnectorTypeMqNative            ActiveConnectorType = "MQ_NATIVE"
)

// The inputs sent with the setClusterProperty Mutation
type AdministrativeUserAccountPropertyInput struct {
	// The administrative user account minimum property unique identifier
	Goid string `json:"goid"`
	// The name of administrative user account minimum property
	Name string `json:"name"`
	// The value of the administrative user account minimum property
	Value string `json:"value"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns AdministrativeUserAccountPropertyInput.Goid, and is useful for accessing the field via an interface.
func (v *AdministrativeUserAccountPropertyInput) GetGoid() string { return v.Goid }

// GetName returns AdministrativeUserAccountPropertyInput.Name, and is useful for accessing the field via an interface.
func (v *AdministrativeUserAccountPropertyInput) GetName() string { return v.Name }

// GetValue returns AdministrativeUserAccountPropertyInput.Value, and is useful for accessing the field via an interface.
func (v *AdministrativeUserAccountPropertyInput) GetValue() string { return v.Value }

// GetChecksum returns AdministrativeUserAccountPropertyInput.Checksum, and is useful for accessing the field via an interface.
func (v *AdministrativeUserAccountPropertyInput) GetChecksum() string { return v.Checksum }

type BackgroundTaskPolicyInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The name of the background task policy
	Name string `json:"name"`
	// The internal entity unique identifier
	Guid string `json:"guid"`
	// The folder path background task policy
	FolderPath string `json:"folderPath"`
	// The background task policy
	Policy *PolicyInput `json:"policy,omitempty"`
	Soap   bool         `json:"soap"`
	// The configuration checksum
	Checksum string `json:"checksum"`
}

// GetGoid returns BackgroundTaskPolicyInput.Goid, and is useful for accessing the field via an interface.
func (v *BackgroundTaskPolicyInput) GetGoid() string { return v.Goid }

// GetName returns BackgroundTaskPolicyInput.Name, and is useful for accessing the field via an interface.
func (v *BackgroundTaskPolicyInput) GetName() string { return v.Name }

// GetGuid returns BackgroundTaskPolicyInput.Guid, and is useful for accessing the field via an interface.
func (v *BackgroundTaskPolicyInput) GetGuid() string { return v.Guid }

// GetFolderPath returns BackgroundTaskPolicyInput.FolderPath, and is useful for accessing the field via an interface.
func (v *BackgroundTaskPolicyInput) GetFolderPath() string { return v.FolderPath }

// GetPolicy returns BackgroundTaskPolicyInput.Policy, and is useful for accessing the field via an interface.
func (v *BackgroundTaskPolicyInput) GetPolicy() *PolicyInput { return v.Policy }

// GetSoap returns BackgroundTaskPolicyInput.Soap, and is useful for accessing the field via an interface.
func (v *BackgroundTaskPolicyInput) GetSoap() bool { return v.Soap }

// GetChecksum returns BackgroundTaskPolicyInput.Checksum, and is useful for accessing the field via an interface.
func (v *BackgroundTaskPolicyInput) GetChecksum() string { return v.Checksum }

type CassandraCompression string

const (
	CassandraCompressionNone CassandraCompression = "NONE"
	CassandraCompressionLz4  CassandraCompression = "LZ4"
)

type CassandraConnectionInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The Cassandra Connection name
	Name string `json:"name"`
	// The Cassandra keyspace name
	Keyspace string `json:"keyspace"`
	// The Cassandra connection points
	ContactPoints []string `json:"contactPoints"`
	// The Cassandra server port
	Port int `json:"port"`
	// The username
	Username string `json:"username"`
	// The secure password reference.
	SecurePasswordName string `json:"securePasswordName"`
	// The Cassandra connection compression type
	Compression CassandraCompression `json:"compression"`
	// Whether this Cassandra connection is SSL enabled
	SslEnabled bool `json:"sslEnabled"`
	// Cipher suites used for SSL connection
	CipherSuites []string `json:"cipherSuites"`
	// Whether this Cassandra connection is enabled
	Enabled bool `json:"enabled"`
	// The Cassandra connection properties
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns CassandraConnectionInput.Goid, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetGoid() string { return v.Goid }

// GetName returns CassandraConnectionInput.Name, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetName() string { return v.Name }

// GetKeyspace returns CassandraConnectionInput.Keyspace, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetKeyspace() string { return v.Keyspace }

// GetContactPoints returns CassandraConnectionInput.ContactPoints, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetContactPoints() []string { return v.ContactPoints }

// GetPort returns CassandraConnectionInput.Port, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetPort() int { return v.Port }

// GetUsername returns CassandraConnectionInput.Username, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetUsername() string { return v.Username }

// GetSecurePasswordName returns CassandraConnectionInput.SecurePasswordName, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetSecurePasswordName() string { return v.SecurePasswordName }

// GetCompression returns CassandraConnectionInput.Compression, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetCompression() CassandraCompression { return v.Compression }

// GetSslEnabled returns CassandraConnectionInput.SslEnabled, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetSslEnabled() bool { return v.SslEnabled }

// GetCipherSuites returns CassandraConnectionInput.CipherSuites, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetCipherSuites() []string { return v.CipherSuites }

// GetEnabled returns CassandraConnectionInput.Enabled, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetEnabled() bool { return v.Enabled }

// GetProperties returns CassandraConnectionInput.Properties, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns CassandraConnectionInput.Checksum, and is useful for accessing the field via an interface.
func (v *CassandraConnectionInput) GetChecksum() string { return v.Checksum }

type CertRevocationCheckPropertyType string

const (
	// Type for checking against a CRL from a URL contained in an X.509 Certificate
	CertRevocationCheckPropertyTypeCrlFromCertificate CertRevocationCheckPropertyType = "CRL_FROM_CERTIFICATE"
	// Type for checking against a CRL from a specified URL
	CertRevocationCheckPropertyTypeCrlFromUrl CertRevocationCheckPropertyType = "CRL_FROM_URL"
	// Type for OCSP check against a responder URL contained in an X.509 Certificate
	CertRevocationCheckPropertyTypeOcspFromCertificate CertRevocationCheckPropertyType = "OCSP_FROM_CERTIFICATE"
	// Type for OCSP check against a specified responder URL
	CertRevocationCheckPropertyTypeOcspFromUrl CertRevocationCheckPropertyType = "OCSP_FROM_URL"
)

type CertificateValidationType string

const (
	CertificateValidationTypeCertificateOnly CertificateValidationType = "CERTIFICATE_ONLY"
	CertificateValidationTypePathValidation  CertificateValidationType = "PATH_VALIDATION"
	CertificateValidationTypeRevocation      CertificateValidationType = "REVOCATION"
)

// The inputs sent with the setClusterProperty Mutation
type ClusterPropertyInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The name of the cluster property
	Name string `json:"name"`
	// The value of the cluster property to set
	Value string `json:"value"`
	// The cluster property description
	Description string `json:"description"`
	// Whether this is a hidden property. (Note that, this field has no effect on the mutation)
	HiddenProperty bool `json:"hiddenProperty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns ClusterPropertyInput.Goid, and is useful for accessing the field via an interface.
func (v *ClusterPropertyInput) GetGoid() string { return v.Goid }

// GetName returns ClusterPropertyInput.Name, and is useful for accessing the field via an interface.
func (v *ClusterPropertyInput) GetName() string { return v.Name }

// GetValue returns ClusterPropertyInput.Value, and is useful for accessing the field via an interface.
func (v *ClusterPropertyInput) GetValue() string { return v.Value }

// GetDescription returns ClusterPropertyInput.Description, and is useful for accessing the field via an interface.
func (v *ClusterPropertyInput) GetDescription() string { return v.Description }

// GetHiddenProperty returns ClusterPropertyInput.HiddenProperty, and is useful for accessing the field via an interface.
func (v *ClusterPropertyInput) GetHiddenProperty() bool { return v.HiddenProperty }

// GetChecksum returns ClusterPropertyInput.Checksum, and is useful for accessing the field via an interface.
func (v *ClusterPropertyInput) GetChecksum() string { return v.Checksum }

// The inputs sent with the setCustomKeyValue Mutation
type CustomKeyValueInput struct {
	// The goid for the custom key value
	Goid string `json:"goid"`
	// The custom key
	Key string `json:"key"`
	// The custom value in Base64 encoded format
	Value string `json:"value"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns CustomKeyValueInput.Goid, and is useful for accessing the field via an interface.
func (v *CustomKeyValueInput) GetGoid() string { return v.Goid }

// GetKey returns CustomKeyValueInput.Key, and is useful for accessing the field via an interface.
func (v *CustomKeyValueInput) GetKey() string { return v.Key }

// GetValue returns CustomKeyValueInput.Value, and is useful for accessing the field via an interface.
func (v *CustomKeyValueInput) GetValue() string { return v.Value }

// GetChecksum returns CustomKeyValueInput.Checksum, and is useful for accessing the field via an interface.
func (v *CustomKeyValueInput) GetChecksum() string { return v.Checksum }

type DataType string

const (
	DataTypeString      DataType = "STRING"
	DataTypeCertificate DataType = "CERTIFICATE"
	DataTypeInteger     DataType = "INTEGER"
	DataTypeDecimal     DataType = "DECIMAL"
	DataTypeFloat       DataType = "FLOAT"
	DataTypeElement     DataType = "ELEMENT"
	DataTypeBoolean     DataType = "BOOLEAN"
	DataTypeBinary      DataType = "BINARY"
	DataTypeDateTime    DataType = "DATE_TIME"
	DataTypeMessage     DataType = "MESSAGE"
	DataTypeBlob        DataType = "BLOB"
	DataTypeClob        DataType = "CLOB"
	DataTypeUnknown     DataType = "UNKNOWN"
)

type DtdInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// A reference to the dtd. This id is what is referred to in policy and is often mirror of the target namespace
	SystemId string `json:"systemId"`
	// The public id for the dtd
	PublicId string `json:"publicId"`
	// An optional description
	Description string `json:"description"`
	// The actual dtd itself
	Content string `json:"content"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns DtdInput.Goid, and is useful for accessing the field via an interface.
func (v *DtdInput) GetGoid() string { return v.Goid }

// GetSystemId returns DtdInput.SystemId, and is useful for accessing the field via an interface.
func (v *DtdInput) GetSystemId() string { return v.SystemId }

// GetPublicId returns DtdInput.PublicId, and is useful for accessing the field via an interface.
func (v *DtdInput) GetPublicId() string { return v.PublicId }

// GetDescription returns DtdInput.Description, and is useful for accessing the field via an interface.
func (v *DtdInput) GetDescription() string { return v.Description }

// GetContent returns DtdInput.Content, and is useful for accessing the field via an interface.
func (v *DtdInput) GetContent() string { return v.Content }

// GetChecksum returns DtdInput.Checksum, and is useful for accessing the field via an interface.
func (v *DtdInput) GetChecksum() string { return v.Checksum }

type EmailListenerInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The name of the email listener. If you are creating several listeners, make sure the name is descriptive
	Name string `json:"name"`
	// Whether this email listener is enabled(active)
	Enabled bool `json:"enabled"`
	// The hostname of the email server. This name is verified against the X.509 certificate
	Hostname string `json:"hostname"`
	// The port number to monitor
	Port int `json:"port"`
	// The type of email server (IMAP or POP3)
	ServerType EmailServerType `json:"serverType"`
	// Whether email server connection (POP3S or IMAPS) is SSL enabled
	SslEnabled bool `json:"sslEnabled"`
	// Whether delete the messages on the mail server after retrieving
	DeleteOnReceive bool `json:"deleteOnReceive"`
	// The folder name to check for emails (Only for IMAP)
	Folder string `json:"folder"`
	// The listener will check for email after the specified number of seconds
	PollInterval int `json:"pollInterval"`
	// Email account name
	Username string `json:"username"`
	// Email account password. The password could be in plain text or secure password reference
	Password string `json:"password"`
	// The name of the published service hardwired to the email listener
	HardwiredServiceName string `json:"hardwiredServiceName"`
	// Permitted maximum size of the message
	SizeLimit int `json:"sizeLimit"`
	// [Optional] The Email listener Properties excluding sizeLimit and
	// HardwiredServiceName. When specified, will replace existing properties
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns EmailListenerInput.Goid, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetGoid() string { return v.Goid }

// GetName returns EmailListenerInput.Name, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetName() string { return v.Name }

// GetEnabled returns EmailListenerInput.Enabled, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetEnabled() bool { return v.Enabled }

// GetHostname returns EmailListenerInput.Hostname, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetHostname() string { return v.Hostname }

// GetPort returns EmailListenerInput.Port, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetPort() int { return v.Port }

// GetServerType returns EmailListenerInput.ServerType, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetServerType() EmailServerType { return v.ServerType }

// GetSslEnabled returns EmailListenerInput.SslEnabled, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetSslEnabled() bool { return v.SslEnabled }

// GetDeleteOnReceive returns EmailListenerInput.DeleteOnReceive, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetDeleteOnReceive() bool { return v.DeleteOnReceive }

// GetFolder returns EmailListenerInput.Folder, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetFolder() string { return v.Folder }

// GetPollInterval returns EmailListenerInput.PollInterval, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetPollInterval() int { return v.PollInterval }

// GetUsername returns EmailListenerInput.Username, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetUsername() string { return v.Username }

// GetPassword returns EmailListenerInput.Password, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetPassword() string { return v.Password }

// GetHardwiredServiceName returns EmailListenerInput.HardwiredServiceName, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetHardwiredServiceName() string { return v.HardwiredServiceName }

// GetSizeLimit returns EmailListenerInput.SizeLimit, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetSizeLimit() int { return v.SizeLimit }

// GetProperties returns EmailListenerInput.Properties, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns EmailListenerInput.Checksum, and is useful for accessing the field via an interface.
func (v *EmailListenerInput) GetChecksum() string { return v.Checksum }

type EmailServerType string

const (
	EmailServerTypeImap EmailServerType = "IMAP"
	EmailServerTypePop3 EmailServerType = "POP3"
)

// The description of an input argument for an encapsulated assertion for use when
// creating or updating an existing encass config
type EncassArgInput struct {
	// The name of the input
	Name string `json:"name"`
	// The type of input
	Type DataType `json:"type"`
	// The order of the argument in the admin gui
	Ordinal int `json:"ordinal"`
	// The prompt in the admin gui for this encass argument
	GuiPrompt bool `json:"guiPrompt"`
	// The label in the admin gui associated with this encass argument
	GuiLabel string `json:"guiLabel"`
}

// GetName returns EncassArgInput.Name, and is useful for accessing the field via an interface.
func (v *EncassArgInput) GetName() string { return v.Name }

// GetType returns EncassArgInput.Type, and is useful for accessing the field via an interface.
func (v *EncassArgInput) GetType() DataType { return v.Type }

// GetOrdinal returns EncassArgInput.Ordinal, and is useful for accessing the field via an interface.
func (v *EncassArgInput) GetOrdinal() int { return v.Ordinal }

// GetGuiPrompt returns EncassArgInput.GuiPrompt, and is useful for accessing the field via an interface.
func (v *EncassArgInput) GetGuiPrompt() bool { return v.GuiPrompt }

// GetGuiLabel returns EncassArgInput.GuiLabel, and is useful for accessing the field via an interface.
func (v *EncassArgInput) GetGuiLabel() string { return v.GuiLabel }

// The description of a new encapsulated assertion configuration being created
type EncassConfigInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The guid for this encass config, can be omitted and a new one is assigned
	Guid string `json:"guid"`
	// The name of the encass config
	Name        string `json:"name"`
	Description string `json:"description"`
	// The policy it points to and its dependencies
	PolicyName string `json:"policyName"`
	// the input argument descriptions for this encass
	EncassArgs []*EncassArgInput `json:"encassArgs,omitempty"`
	// the output descriptions
	EncassResults []*EncassResultInput   `json:"encassResults,omitempty"`
	Properties    []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns EncassConfigInput.Goid, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetGoid() string { return v.Goid }

// GetGuid returns EncassConfigInput.Guid, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetGuid() string { return v.Guid }

// GetName returns EncassConfigInput.Name, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetName() string { return v.Name }

// GetDescription returns EncassConfigInput.Description, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetDescription() string { return v.Description }

// GetPolicyName returns EncassConfigInput.PolicyName, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetPolicyName() string { return v.PolicyName }

// GetEncassArgs returns EncassConfigInput.EncassArgs, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetEncassArgs() []*EncassArgInput { return v.EncassArgs }

// GetEncassResults returns EncassConfigInput.EncassResults, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetEncassResults() []*EncassResultInput { return v.EncassResults }

// GetProperties returns EncassConfigInput.Properties, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns EncassConfigInput.Checksum, and is useful for accessing the field via an interface.
func (v *EncassConfigInput) GetChecksum() string { return v.Checksum }

// The description of an output from the encapsulated assertion for use when creating or updating an existing encass config
type EncassResultInput struct {
	// The name of the output
	Name string `json:"name"`
	// The type of the output
	Type DataType `json:"type"`
}

// GetName returns EncassResultInput.Name, and is useful for accessing the field via an interface.
func (v *EncassResultInput) GetName() string { return v.Name }

// GetType returns EncassResultInput.Type, and is useful for accessing the field via an interface.
func (v *EncassResultInput) GetType() DataType { return v.Type }

type EntityFieldOption string

const (
	EntityFieldOptionDefault EntityFieldOption = "DEFAULT"
	EntityFieldOptionNone    EntityFieldOption = "NONE"
	EntityFieldOptionCustom  EntityFieldOption = "CUSTOM"
)

type EntityMutationAction string

const (
	EntityMutationActionNewOrUpdate     EntityMutationAction = "NEW_OR_UPDATE"
	EntityMutationActionNewOrExisting   EntityMutationAction = "NEW_OR_EXISTING"
	EntityMutationActionAlwaysCreateNew EntityMutationAction = "ALWAYS_CREATE_NEW"
	EntityMutationActionIgnore          EntityMutationAction = "IGNORE"
	EntityMutationActionDelete          EntityMutationAction = "DELETE"
)

type EntityMutationStatus string

const (
	EntityMutationStatusNone         EntityMutationStatus = "NONE"
	EntityMutationStatusCreated      EntityMutationStatus = "CREATED"
	EntityMutationStatusUpdated      EntityMutationStatus = "UPDATED"
	EntityMutationStatusDeleted      EntityMutationStatus = "DELETED"
	EntityMutationStatusUsedExisting EntityMutationStatus = "USED_EXISTING"
	EntityMutationStatusIgnored      EntityMutationStatus = "IGNORED"
	EntityMutationStatusError        EntityMutationStatus = "ERROR"
)

type EntityPropertyInput struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns EntityPropertyInput.Name, and is useful for accessing the field via an interface.
func (v *EntityPropertyInput) GetName() string { return v.Name }

// GetValue returns EntityPropertyInput.Value, and is useful for accessing the field via an interface.
func (v *EntityPropertyInput) GetValue() string { return v.Value }

type FipCertInput struct {
	// The thumbprint of the cert to use as trust for a federated identity provider
	ThumbprintSha1 string `json:"thumbprintSha1"`
	// The internal entity unique identifier. (Note that, this field has no effect on the mutation)
	Goid string `json:"goid"`
	// The name of the trusted certificate. (Note that, this field has no effect on the mutation)
	Name string `json:"name"`
	// The base 64 encoded string of the certificate. (Note that, this field has no effect on the mutation)
	CertBase64 string `json:"certBase64"`
	// Whether to perform hostname verification with this certificate. (Note that, this field has no effect on the mutation)
	VerifyHostname bool `json:"verifyHostname"`
	// Whether this certificate is a trust anchor. (Note that, this field has no effect on the mutation)
	TrustAnchor bool `json:"trustAnchor"`
	// What the certificate is trusted for. (Note that, this field has no effect on the mutation)
	TrustedFor []TrustedForType `json:"trustedFor"`
	// The revocation check policy type. (Note that, this field has no effect on the mutation)
	RevocationCheckPolicyType PolicyUsageType `json:"revocationCheckPolicyType"`
	// The name of revocation policy. (Note that, this field has no effect on the mutation)
	RevocationCheckPolicyName string `json:"revocationCheckPolicyName"`
	// The Subject DN of this certificate. (Note that, this field has no effect on the mutation)
	SubjectDn string `json:"subjectDn"`
	// The start date of the validity period. (Note that, this field has no effect on the mutation)
	NotBefore string `json:"notBefore"`
	// the end date of the validity period. (Note that, this field has no effect on the mutation)
	NotAfter string `json:"notAfter"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetThumbprintSha1 returns FipCertInput.ThumbprintSha1, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetThumbprintSha1() string { return v.ThumbprintSha1 }

// GetGoid returns FipCertInput.Goid, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetGoid() string { return v.Goid }

// GetName returns FipCertInput.Name, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetName() string { return v.Name }

// GetCertBase64 returns FipCertInput.CertBase64, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetCertBase64() string { return v.CertBase64 }

// GetVerifyHostname returns FipCertInput.VerifyHostname, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetVerifyHostname() bool { return v.VerifyHostname }

// GetTrustAnchor returns FipCertInput.TrustAnchor, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetTrustAnchor() bool { return v.TrustAnchor }

// GetTrustedFor returns FipCertInput.TrustedFor, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetTrustedFor() []TrustedForType { return v.TrustedFor }

// GetRevocationCheckPolicyType returns FipCertInput.RevocationCheckPolicyType, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetRevocationCheckPolicyType() PolicyUsageType {
	return v.RevocationCheckPolicyType
}

// GetRevocationCheckPolicyName returns FipCertInput.RevocationCheckPolicyName, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetRevocationCheckPolicyName() string { return v.RevocationCheckPolicyName }

// GetSubjectDn returns FipCertInput.SubjectDn, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetSubjectDn() string { return v.SubjectDn }

// GetNotBefore returns FipCertInput.NotBefore, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetNotBefore() string { return v.NotBefore }

// GetNotAfter returns FipCertInput.NotAfter, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetNotAfter() string { return v.NotAfter }

// GetChecksum returns FipCertInput.Checksum, and is useful for accessing the field via an interface.
func (v *FipCertInput) GetChecksum() string { return v.Checksum }

type FipGroupInput struct {
	Name string `json:"name"`
	// If provided, will try to honour at creation time
	Goid string `json:"goid"`
	// The name of the FiP this group is defined in
	ProviderName string `json:"providerName"`
	Description  string `json:"description"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetName returns FipGroupInput.Name, and is useful for accessing the field via an interface.
func (v *FipGroupInput) GetName() string { return v.Name }

// GetGoid returns FipGroupInput.Goid, and is useful for accessing the field via an interface.
func (v *FipGroupInput) GetGoid() string { return v.Goid }

// GetProviderName returns FipGroupInput.ProviderName, and is useful for accessing the field via an interface.
func (v *FipGroupInput) GetProviderName() string { return v.ProviderName }

// GetDescription returns FipGroupInput.Description, and is useful for accessing the field via an interface.
func (v *FipGroupInput) GetDescription() string { return v.Description }

// GetChecksum returns FipGroupInput.Checksum, and is useful for accessing the field via an interface.
func (v *FipGroupInput) GetChecksum() string { return v.Checksum }

type FipInput struct {
	Name string `json:"name"`
	// Will try to match goid if provided
	Goid                     string                    `json:"goid"`
	EnableCredentialTypeSaml bool                      `json:"enableCredentialTypeSaml"`
	EnableCredentialTypeX509 bool                      `json:"enableCredentialTypeX509"`
	CertificateValidation    CertificateValidationType `json:"certificateValidation"`
	// The certificates in the trusted certificate table that establish the trust for this FIP
	CertificateReferences []*FipCertInput `json:"certificateReferences,omitempty"`
	// The optional checksum is ignored during the mutation but can be used to compare bundle content
	Checksum string `json:"checksum"`
}

// GetName returns FipInput.Name, and is useful for accessing the field via an interface.
func (v *FipInput) GetName() string { return v.Name }

// GetGoid returns FipInput.Goid, and is useful for accessing the field via an interface.
func (v *FipInput) GetGoid() string { return v.Goid }

// GetEnableCredentialTypeSaml returns FipInput.EnableCredentialTypeSaml, and is useful for accessing the field via an interface.
func (v *FipInput) GetEnableCredentialTypeSaml() bool { return v.EnableCredentialTypeSaml }

// GetEnableCredentialTypeX509 returns FipInput.EnableCredentialTypeX509, and is useful for accessing the field via an interface.
func (v *FipInput) GetEnableCredentialTypeX509() bool { return v.EnableCredentialTypeX509 }

// GetCertificateValidation returns FipInput.CertificateValidation, and is useful for accessing the field via an interface.
func (v *FipInput) GetCertificateValidation() CertificateValidationType {
	return v.CertificateValidation
}

// GetCertificateReferences returns FipInput.CertificateReferences, and is useful for accessing the field via an interface.
func (v *FipInput) GetCertificateReferences() []*FipCertInput { return v.CertificateReferences }

// GetChecksum returns FipInput.Checksum, and is useful for accessing the field via an interface.
func (v *FipInput) GetChecksum() string { return v.Checksum }

type FipUserInput struct {
	Name string `json:"name"`
	// If provided, will try to honour at creation time
	Goid string `json:"goid"`
	// The name of the FiP this user is defined as part of
	ProviderName string `json:"providerName"`
	// The list of fip group details (names) that this user is member of. If you pass
	// empty array, will reset memberships. If absent, does not affect memberships
	// for current user.
	MemberOf  []*MembershipInput `json:"memberOf,omitempty"`
	Login     string             `json:"login"`
	SubjectDn string             `json:"subjectDn"`
	// A client-side certificate associated with this user to use for pki type authentication
	CertBase64 string `json:"certBase64"`
	FirstName  string `json:"firstName"`
	LastName   string `json:"lastName"`
	Email      string `json:"email"`
	Checksum   string `json:"checksum"`
}

// GetName returns FipUserInput.Name, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetName() string { return v.Name }

// GetGoid returns FipUserInput.Goid, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetGoid() string { return v.Goid }

// GetProviderName returns FipUserInput.ProviderName, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetProviderName() string { return v.ProviderName }

// GetMemberOf returns FipUserInput.MemberOf, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetMemberOf() []*MembershipInput { return v.MemberOf }

// GetLogin returns FipUserInput.Login, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetLogin() string { return v.Login }

// GetSubjectDn returns FipUserInput.SubjectDn, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetSubjectDn() string { return v.SubjectDn }

// GetCertBase64 returns FipUserInput.CertBase64, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetCertBase64() string { return v.CertBase64 }

// GetFirstName returns FipUserInput.FirstName, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetFirstName() string { return v.FirstName }

// GetLastName returns FipUserInput.LastName, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetLastName() string { return v.LastName }

// GetEmail returns FipUserInput.Email, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetEmail() string { return v.Email }

// GetChecksum returns FipUserInput.Checksum, and is useful for accessing the field via an interface.
func (v *FipUserInput) GetChecksum() string { return v.Checksum }

type FolderInput struct {
	// The goid for the folder
	Goid string `json:"goid"`
	// The folder name
	Name string `json:"name"`
	// The folder Path
	Path string `json:"path"`
	// The configuration checksum of this folder
	Checksum string `json:"checksum"`
}

// GetGoid returns FolderInput.Goid, and is useful for accessing the field via an interface.
func (v *FolderInput) GetGoid() string { return v.Goid }

// GetName returns FolderInput.Name, and is useful for accessing the field via an interface.
func (v *FolderInput) GetName() string { return v.Name }

// GetPath returns FolderInput.Path, and is useful for accessing the field via an interface.
func (v *FolderInput) GetPath() string { return v.Path }

// GetChecksum returns FolderInput.Checksum, and is useful for accessing the field via an interface.
func (v *FolderInput) GetChecksum() string { return v.Checksum }

type GlobalPolicyInput struct {
	// The name of the policy. Policies are unique by name.
	Name string `json:"name"`
	// The folder path where to create this policy.  If the path does not exist, it will be created
	FolderPath string `json:"folderPath"`
	// The goid for this policy
	Goid string `json:"goid"`
	// The guid for this service, if none provided, assigned at creation
	Guid string `json:"guid"`
	// Global policy tag. Possible values are :
	// message-completed
	// message-received
	// post-security
	// post-service
	// pre-security
	// pre-service
	Tag string `json:"tag"`
	// The policy
	Policy *PolicyInput `json:"policy,omitempty"`
	Soap   bool         `json:"soap"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetName returns GlobalPolicyInput.Name, and is useful for accessing the field via an interface.
func (v *GlobalPolicyInput) GetName() string { return v.Name }

// GetFolderPath returns GlobalPolicyInput.FolderPath, and is useful for accessing the field via an interface.
func (v *GlobalPolicyInput) GetFolderPath() string { return v.FolderPath }

// GetGoid returns GlobalPolicyInput.Goid, and is useful for accessing the field via an interface.
func (v *GlobalPolicyInput) GetGoid() string { return v.Goid }

// GetGuid returns GlobalPolicyInput.Guid, and is useful for accessing the field via an interface.
func (v *GlobalPolicyInput) GetGuid() string { return v.Guid }

// GetTag returns GlobalPolicyInput.Tag, and is useful for accessing the field via an interface.
func (v *GlobalPolicyInput) GetTag() string { return v.Tag }

// GetPolicy returns GlobalPolicyInput.Policy, and is useful for accessing the field via an interface.
func (v *GlobalPolicyInput) GetPolicy() *PolicyInput { return v.Policy }

// GetSoap returns GlobalPolicyInput.Soap, and is useful for accessing the field via an interface.
func (v *GlobalPolicyInput) GetSoap() bool { return v.Soap }

// GetChecksum returns GlobalPolicyInput.Checksum, and is useful for accessing the field via an interface.
func (v *GlobalPolicyInput) GetChecksum() string { return v.Checksum }

type GroupMappingInput struct {
	ObjClass       string               `json:"objClass"`
	NameAttrName   string               `json:"nameAttrName"`
	MemberAttrName string               `json:"memberAttrName"`
	MemberStrategy *MemberStrategyInput `json:"memberStrategy,omitempty"`
}

// GetObjClass returns GroupMappingInput.ObjClass, and is useful for accessing the field via an interface.
func (v *GroupMappingInput) GetObjClass() string { return v.ObjClass }

// GetNameAttrName returns GroupMappingInput.NameAttrName, and is useful for accessing the field via an interface.
func (v *GroupMappingInput) GetNameAttrName() string { return v.NameAttrName }

// GetMemberAttrName returns GroupMappingInput.MemberAttrName, and is useful for accessing the field via an interface.
func (v *GroupMappingInput) GetMemberAttrName() string { return v.MemberAttrName }

// GetMemberStrategy returns GroupMappingInput.MemberStrategy, and is useful for accessing the field via an interface.
func (v *GroupMappingInput) GetMemberStrategy() *MemberStrategyInput { return v.MemberStrategy }

type HttpConfigurationInput struct {
	// The goid for the http configuration
	Goid string `json:"goid"`
	// The host of the http configuration
	Host string `json:"host"`
	// The port of the http configuration
	Port int `json:"port"`
	// The protocol of the http configuration
	Protocol HttpScheme `json:"protocol"`
	// The path of the http configuration
	Path string `json:"path"`
	// The username of the http configuration
	Username string `json:"username"`
	// The securePasswordName of the http configuration
	SecurePasswordName string `json:"securePasswordName"`
	// The ntlmHost of the http configuration
	NtlmHost string `json:"ntlmHost"`
	// The ntlmDomain of the http configuration
	NtlmDomain string `json:"ntlmDomain"`
	// The tlsVersion of the http configuration
	TlsVersion string `json:"tlsVersion"`
	// The tlsKeyUse of the http configuration
	TlsKeyUse EntityFieldOption `json:"tlsKeyUse"`
	// The tlsKeystoreId of the http configuration
	TlsKeystoreId string `json:"tlsKeystoreId"`
	// The tlsKeyAlias of the http configuration
	TlsKeyAlias string `json:"tlsKeyAlias"`
	// The tlsCipherSuites of the http configuration
	TlsCipherSuites []string `json:"tlsCipherSuites"`
	// The connectTimeout of the http configuration
	ConnectTimeout int `json:"connectTimeout"`
	// The readTimeout of the http configuration
	ReadTimeout int `json:"readTimeout"`
	// The followRedirects of the http configuration
	FollowRedirects bool `json:"followRedirects"`
	// The proxyUse of the http configuration
	ProxyUse EntityFieldOption `json:"proxyUse"`
	// The HttpProxyConfiguration of the http configuration
	ProxyConfiguration *HttpProxyConfigurationInput `json:"proxyConfiguration,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns HttpConfigurationInput.Goid, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetGoid() string { return v.Goid }

// GetHost returns HttpConfigurationInput.Host, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetHost() string { return v.Host }

// GetPort returns HttpConfigurationInput.Port, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetPort() int { return v.Port }

// GetProtocol returns HttpConfigurationInput.Protocol, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetProtocol() HttpScheme { return v.Protocol }

// GetPath returns HttpConfigurationInput.Path, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetPath() string { return v.Path }

// GetUsername returns HttpConfigurationInput.Username, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetUsername() string { return v.Username }

// GetSecurePasswordName returns HttpConfigurationInput.SecurePasswordName, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetSecurePasswordName() string { return v.SecurePasswordName }

// GetNtlmHost returns HttpConfigurationInput.NtlmHost, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetNtlmHost() string { return v.NtlmHost }

// GetNtlmDomain returns HttpConfigurationInput.NtlmDomain, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetNtlmDomain() string { return v.NtlmDomain }

// GetTlsVersion returns HttpConfigurationInput.TlsVersion, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetTlsVersion() string { return v.TlsVersion }

// GetTlsKeyUse returns HttpConfigurationInput.TlsKeyUse, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetTlsKeyUse() EntityFieldOption { return v.TlsKeyUse }

// GetTlsKeystoreId returns HttpConfigurationInput.TlsKeystoreId, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetTlsKeystoreId() string { return v.TlsKeystoreId }

// GetTlsKeyAlias returns HttpConfigurationInput.TlsKeyAlias, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetTlsKeyAlias() string { return v.TlsKeyAlias }

// GetTlsCipherSuites returns HttpConfigurationInput.TlsCipherSuites, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetTlsCipherSuites() []string { return v.TlsCipherSuites }

// GetConnectTimeout returns HttpConfigurationInput.ConnectTimeout, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetConnectTimeout() int { return v.ConnectTimeout }

// GetReadTimeout returns HttpConfigurationInput.ReadTimeout, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetReadTimeout() int { return v.ReadTimeout }

// GetFollowRedirects returns HttpConfigurationInput.FollowRedirects, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetFollowRedirects() bool { return v.FollowRedirects }

// GetProxyUse returns HttpConfigurationInput.ProxyUse, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetProxyUse() EntityFieldOption { return v.ProxyUse }

// GetProxyConfiguration returns HttpConfigurationInput.ProxyConfiguration, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetProxyConfiguration() *HttpProxyConfigurationInput {
	return v.ProxyConfiguration
}

// GetChecksum returns HttpConfigurationInput.Checksum, and is useful for accessing the field via an interface.
func (v *HttpConfigurationInput) GetChecksum() string { return v.Checksum }

// Support Http methods for Web API Service
type HttpMethod string

const (
	HttpMethodDelete  HttpMethod = "DELETE"
	HttpMethodHead    HttpMethod = "HEAD"
	HttpMethodGet     HttpMethod = "GET"
	HttpMethodPost    HttpMethod = "POST"
	HttpMethodPut     HttpMethod = "PUT"
	HttpMethodOptions HttpMethod = "OPTIONS"
	HttpMethodPatch   HttpMethod = "PATCH"
	HttpMethodOther   HttpMethod = "OTHER"
)

type HttpProxyConfigurationInput struct {
	// The proxyHost of the http proxy configuration
	Host string `json:"host"`
	// The proxyPort of the http proxy configuration
	Port int `json:"port"`
	// The proxyUsername of the http proxy configuration
	Username string `json:"username"`
	// The securePasswordName of the http proxy configuration
	SecurePasswordName string `json:"securePasswordName"`
}

// GetHost returns HttpProxyConfigurationInput.Host, and is useful for accessing the field via an interface.
func (v *HttpProxyConfigurationInput) GetHost() string { return v.Host }

// GetPort returns HttpProxyConfigurationInput.Port, and is useful for accessing the field via an interface.
func (v *HttpProxyConfigurationInput) GetPort() int { return v.Port }

// GetUsername returns HttpProxyConfigurationInput.Username, and is useful for accessing the field via an interface.
func (v *HttpProxyConfigurationInput) GetUsername() string { return v.Username }

// GetSecurePasswordName returns HttpProxyConfigurationInput.SecurePasswordName, and is useful for accessing the field via an interface.
func (v *HttpProxyConfigurationInput) GetSecurePasswordName() string { return v.SecurePasswordName }

type HttpScheme string

const (
	HttpSchemeHttp  HttpScheme = "HTTP"
	HttpSchemeHttps HttpScheme = "HTTPS"
	HttpSchemeAny   HttpScheme = "ANY"
)

type InternalGroupInput struct {
	Name string `json:"name"`
	// If provided, will try to honour at creation time
	Goid        string `json:"goid"`
	Description string `json:"description"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetName returns InternalGroupInput.Name, and is useful for accessing the field via an interface.
func (v *InternalGroupInput) GetName() string { return v.Name }

// GetGoid returns InternalGroupInput.Goid, and is useful for accessing the field via an interface.
func (v *InternalGroupInput) GetGoid() string { return v.Goid }

// GetDescription returns InternalGroupInput.Description, and is useful for accessing the field via an interface.
func (v *InternalGroupInput) GetDescription() string { return v.Description }

// GetChecksum returns InternalGroupInput.Checksum, and is useful for accessing the field via an interface.
func (v *InternalGroupInput) GetChecksum() string { return v.Checksum }

type InternalUserInput struct {
	Name string `json:"name"`
	// If provided, will try to honour at creation time
	Goid string `json:"goid"`
	// The list of internal group details (names) that this user is member of. If you
	// pass empty array, will reset memberships. If absent, does not affect
	// memberships for current users.
	MemberOf []*MembershipInput `json:"memberOf,omitempty"`
	Login    string             `json:"login"`
	// You can either pass in the hashed password which comes back in queries or the raw passwd directly
	Password string `json:"password"`
	// A client-side certificate associated with this user to use for pki type authentication
	CertBase64 string `json:"certBase64"`
	FirstName  string `json:"firstName"`
	LastName   string `json:"lastName"`
	Email      string `json:"email"`
	// Is user enabled or not!
	Enabled bool `json:"enabled"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetName returns InternalUserInput.Name, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetName() string { return v.Name }

// GetGoid returns InternalUserInput.Goid, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetGoid() string { return v.Goid }

// GetMemberOf returns InternalUserInput.MemberOf, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetMemberOf() []*MembershipInput { return v.MemberOf }

// GetLogin returns InternalUserInput.Login, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetLogin() string { return v.Login }

// GetPassword returns InternalUserInput.Password, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetPassword() string { return v.Password }

// GetCertBase64 returns InternalUserInput.CertBase64, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetCertBase64() string { return v.CertBase64 }

// GetFirstName returns InternalUserInput.FirstName, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetFirstName() string { return v.FirstName }

// GetLastName returns InternalUserInput.LastName, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetLastName() string { return v.LastName }

// GetEmail returns InternalUserInput.Email, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetEmail() string { return v.Email }

// GetEnabled returns InternalUserInput.Enabled, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetEnabled() bool { return v.Enabled }

// GetChecksum returns InternalUserInput.Checksum, and is useful for accessing the field via an interface.
func (v *InternalUserInput) GetChecksum() string { return v.Checksum }

type JdbcConnectionInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The JDBC Connection name
	Name string `json:"name"`
	// The JDBC driver class name
	DriverClass string `json:"driverClass"`
	// The JDBC url
	JdbcUrl string `json:"jdbcUrl"`
	// Whether this JDBC connection is enabled
	Enabled bool `json:"enabled"`
	// The username
	Username string `json:"username"`
	// The password or the secured password reference
	Password string `json:"password"`
	// The minimum connection pool size
	MinPoolSize int `json:"minPoolSize"`
	// The maximum connection pool size
	MaxPoolSize int `json:"maxPoolSize"`
	// The JDBC connection properties excluding 'user' and 'password'
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns JdbcConnectionInput.Goid, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetGoid() string { return v.Goid }

// GetName returns JdbcConnectionInput.Name, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetName() string { return v.Name }

// GetDriverClass returns JdbcConnectionInput.DriverClass, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetDriverClass() string { return v.DriverClass }

// GetJdbcUrl returns JdbcConnectionInput.JdbcUrl, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetJdbcUrl() string { return v.JdbcUrl }

// GetEnabled returns JdbcConnectionInput.Enabled, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetEnabled() bool { return v.Enabled }

// GetUsername returns JdbcConnectionInput.Username, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetUsername() string { return v.Username }

// GetPassword returns JdbcConnectionInput.Password, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetPassword() string { return v.Password }

// GetMinPoolSize returns JdbcConnectionInput.MinPoolSize, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetMinPoolSize() int { return v.MinPoolSize }

// GetMaxPoolSize returns JdbcConnectionInput.MaxPoolSize, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetMaxPoolSize() int { return v.MaxPoolSize }

// GetProperties returns JdbcConnectionInput.Properties, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns JdbcConnectionInput.Checksum, and is useful for accessing the field via an interface.
func (v *JdbcConnectionInput) GetChecksum() string { return v.Checksum }

type JmsDestinationInput struct {
	// The internal entity unique identifier
	Goid           string `json:"goid"`
	ConnectionGoid string `json:"connectionGoid"`
	// The JMS Destination name
	Name string `json:"name"`
	// The JMS Destination direction (inbound or outbound)
	Direction string `json:"direction"`
	// The JMS provider type
	ProviderType string `json:"providerType"`
	// The initial context factory class name
	InitialContextFactoryClassname string `json:"initialContextFactoryClassname"`
	// The connection factory name
	ConnectionFactoryName string `json:"connectionFactoryName"`
	// The JNDI URL
	JndiUrl string `json:"jndiUrl"`
	// The JNDI username
	JndiUsername string `json:"jndiUsername"`
	// The JNDI password
	JndiPassword string `json:"jndiPassword"`
	// The JNDI SSL details
	JndiSslDetails *JmsSslDetailsInput `json:"jndiSslDetails,omitempty"`
	// The destination type
	DestinationType string `json:"destinationType"`
	// The destination name
	DestinationName string `json:"destinationName"`
	// The username for destination connection
	DestinationUsername string `json:"destinationUsername"`
	// The password for destination connection
	DestinationPassword string `json:"destinationPassword"`
	// The destination SSL details
	DestinationSslDetails *JmsSslDetailsInput `json:"destinationSslDetails,omitempty"`
	// Whether this JMS destination is template
	Template bool `json:"template"`
	// Whether this JMS destination is enabled
	Enabled bool `json:"enabled"`
	// The remaining JMS Destination properties that include inbound options or outbound options or additional properties
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns JmsDestinationInput.Goid, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetGoid() string { return v.Goid }

// GetConnectionGoid returns JmsDestinationInput.ConnectionGoid, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetConnectionGoid() string { return v.ConnectionGoid }

// GetName returns JmsDestinationInput.Name, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetName() string { return v.Name }

// GetDirection returns JmsDestinationInput.Direction, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetDirection() string { return v.Direction }

// GetProviderType returns JmsDestinationInput.ProviderType, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetProviderType() string { return v.ProviderType }

// GetInitialContextFactoryClassname returns JmsDestinationInput.InitialContextFactoryClassname, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetInitialContextFactoryClassname() string {
	return v.InitialContextFactoryClassname
}

// GetConnectionFactoryName returns JmsDestinationInput.ConnectionFactoryName, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetConnectionFactoryName() string { return v.ConnectionFactoryName }

// GetJndiUrl returns JmsDestinationInput.JndiUrl, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetJndiUrl() string { return v.JndiUrl }

// GetJndiUsername returns JmsDestinationInput.JndiUsername, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetJndiUsername() string { return v.JndiUsername }

// GetJndiPassword returns JmsDestinationInput.JndiPassword, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetJndiPassword() string { return v.JndiPassword }

// GetJndiSslDetails returns JmsDestinationInput.JndiSslDetails, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetJndiSslDetails() *JmsSslDetailsInput { return v.JndiSslDetails }

// GetDestinationType returns JmsDestinationInput.DestinationType, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetDestinationType() string { return v.DestinationType }

// GetDestinationName returns JmsDestinationInput.DestinationName, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetDestinationName() string { return v.DestinationName }

// GetDestinationUsername returns JmsDestinationInput.DestinationUsername, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetDestinationUsername() string { return v.DestinationUsername }

// GetDestinationPassword returns JmsDestinationInput.DestinationPassword, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetDestinationPassword() string { return v.DestinationPassword }

// GetDestinationSslDetails returns JmsDestinationInput.DestinationSslDetails, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetDestinationSslDetails() *JmsSslDetailsInput {
	return v.DestinationSslDetails
}

// GetTemplate returns JmsDestinationInput.Template, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetTemplate() bool { return v.Template }

// GetEnabled returns JmsDestinationInput.Enabled, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetEnabled() bool { return v.Enabled }

// GetProperties returns JmsDestinationInput.Properties, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns JmsDestinationInput.Checksum, and is useful for accessing the field via an interface.
func (v *JmsDestinationInput) GetChecksum() string { return v.Checksum }

type JmsSslDetailsInput struct {
	// Whether SSL is enabled
	SslEnabled bool `json:"sslEnabled"`
	// Whether SSL is used for Authentication only
	SslForAuthenticationOnly bool `json:"sslForAuthenticationOnly"`
	// Whether SSL Server Certificate is to be verified
	SslVerifyServerCertificate bool `json:"sslVerifyServerCertificate"`
	// Whether SSL Server Hostname is to be verified
	SslVerifyServerHostname bool `json:"sslVerifyServerHostname"`
	// Private Key Alias for SSL Client Authentication
	SslClientKeyAlias string `json:"sslClientKeyAlias"`
}

// GetSslEnabled returns JmsSslDetailsInput.SslEnabled, and is useful for accessing the field via an interface.
func (v *JmsSslDetailsInput) GetSslEnabled() bool { return v.SslEnabled }

// GetSslForAuthenticationOnly returns JmsSslDetailsInput.SslForAuthenticationOnly, and is useful for accessing the field via an interface.
func (v *JmsSslDetailsInput) GetSslForAuthenticationOnly() bool { return v.SslForAuthenticationOnly }

// GetSslVerifyServerCertificate returns JmsSslDetailsInput.SslVerifyServerCertificate, and is useful for accessing the field via an interface.
func (v *JmsSslDetailsInput) GetSslVerifyServerCertificate() bool {
	return v.SslVerifyServerCertificate
}

// GetSslVerifyServerHostname returns JmsSslDetailsInput.SslVerifyServerHostname, and is useful for accessing the field via an interface.
func (v *JmsSslDetailsInput) GetSslVerifyServerHostname() bool { return v.SslVerifyServerHostname }

// GetSslClientKeyAlias returns JmsSslDetailsInput.SslClientKeyAlias, and is useful for accessing the field via an interface.
func (v *JmsSslDetailsInput) GetSslClientKeyAlias() string { return v.SslClientKeyAlias }

// Defines a current status of a given scheduled task
type JobStatus string

const (
	JobStatusScheduled JobStatus = "SCHEDULED"
	JobStatusCompleted JobStatus = "COMPLETED"
	JobStatusDisabled  JobStatus = "DISABLED"
)

// Defines a scheduled task type
type JobType string

const (
	JobTypeOneTime   JobType = "ONE_TIME"
	JobTypeRecurring JobType = "RECURRING"
)

type KeyInput struct {
	KeystoreId string `json:"keystoreId"`
	Alias      string `json:"alias"`
	// Base64 encoded PKCS12 keystore containing the private key and cert chain for the key entry.
	// The keystore is password-protected using the transaction encryption passphrase provided.
	P12 string `json:"p12"`
	// The private key data in PEM format
	Pem string `json:"pem"`
	// Will try to match at creation time is specified
	Goid string `json:"goid"`
	// SubjectDn of the certificate associated with the key. (Note that, this field has no effect on the mutation)
	SubjectDn string `json:"subjectDn"`
	// Key type. (Note that, this field has no effect on the mutation)
	KeyType string `json:"keyType"`
	// The Key usage types. (Note that, the key usage will not be reset when this field is not specified)
	UsageTypes []KeyUsageType `json:"usageTypes"`
	// The certificate chain in PEM format. (Note that, this field has no effect on the mutation)
	CertChain []string `json:"certChain"`
	// Ignored at entity creation time but declared here so you can embed checksums in graphman bundles
	Checksum string `json:"checksum"`
}

// GetKeystoreId returns KeyInput.KeystoreId, and is useful for accessing the field via an interface.
func (v *KeyInput) GetKeystoreId() string { return v.KeystoreId }

// GetAlias returns KeyInput.Alias, and is useful for accessing the field via an interface.
func (v *KeyInput) GetAlias() string { return v.Alias }

// GetP12 returns KeyInput.P12, and is useful for accessing the field via an interface.
func (v *KeyInput) GetP12() string { return v.P12 }

// GetPem returns KeyInput.Pem, and is useful for accessing the field via an interface.
func (v *KeyInput) GetPem() string { return v.Pem }

// GetGoid returns KeyInput.Goid, and is useful for accessing the field via an interface.
func (v *KeyInput) GetGoid() string { return v.Goid }

// GetSubjectDn returns KeyInput.SubjectDn, and is useful for accessing the field via an interface.
func (v *KeyInput) GetSubjectDn() string { return v.SubjectDn }

// GetKeyType returns KeyInput.KeyType, and is useful for accessing the field via an interface.
func (v *KeyInput) GetKeyType() string { return v.KeyType }

// GetUsageTypes returns KeyInput.UsageTypes, and is useful for accessing the field via an interface.
func (v *KeyInput) GetUsageTypes() []KeyUsageType { return v.UsageTypes }

// GetCertChain returns KeyInput.CertChain, and is useful for accessing the field via an interface.
func (v *KeyInput) GetCertChain() []string { return v.CertChain }

// GetChecksum returns KeyInput.Checksum, and is useful for accessing the field via an interface.
func (v *KeyInput) GetChecksum() string { return v.Checksum }

type KeyUsageType string

const (
	// Represents a key marked as the default SSL key
	KeyUsageTypeSsl KeyUsageType = "SSL"
	// Represents a key marked as the default CA key
	KeyUsageTypeCa KeyUsageType = "CA"
	// Represents a key marked as the default audit viewer/decryption key
	KeyUsageTypeAuditViewer KeyUsageType = "AUDIT_VIEWER"
	// Represents a key marked as the default audit signing key
	KeyUsageTypeAuditSigning KeyUsageType = "AUDIT_SIGNING"
)

type LdapInput struct {
	Name string `json:"name"`
	// Will try to match goid if provided
	Goid     string   `json:"goid"`
	LdapUrls []string `json:"ldapUrls"`
	// Whether or not the gateway presents a client cert when connecting at those ldap urls (only relevant when ldaps url)
	LdapsClientAuthEnabled bool `json:"ldapsClientAuthEnabled"`
	// The ID of the gateway keystore where the key is located
	LdapsClientKeystoreId string `json:"ldapsClientKeystoreId"`
	// The alias of the key in the gateway keystore that is used when doing ldaps client cert authentication
	LdapsClientKeyAlias string               `json:"ldapsClientKeyAlias"`
	SearchBase          string               `json:"searchBase"`
	Writable            bool                 `json:"writable"`
	BindDn              string               `json:"bindDn"`
	BindPassword        string               `json:"bindPassword"`
	UserMappings        []*UserMappingInput  `json:"userMappings,omitempty"`
	GroupMappings       []*GroupMappingInput `json:"groupMappings,omitempty"`
	// The optional checksum is ignored during the mutation but can be used to compare bundle content
	Checksum string `json:"checksum"`
}

// GetName returns LdapInput.Name, and is useful for accessing the field via an interface.
func (v *LdapInput) GetName() string { return v.Name }

// GetGoid returns LdapInput.Goid, and is useful for accessing the field via an interface.
func (v *LdapInput) GetGoid() string { return v.Goid }

// GetLdapUrls returns LdapInput.LdapUrls, and is useful for accessing the field via an interface.
func (v *LdapInput) GetLdapUrls() []string { return v.LdapUrls }

// GetLdapsClientAuthEnabled returns LdapInput.LdapsClientAuthEnabled, and is useful for accessing the field via an interface.
func (v *LdapInput) GetLdapsClientAuthEnabled() bool { return v.LdapsClientAuthEnabled }

// GetLdapsClientKeystoreId returns LdapInput.LdapsClientKeystoreId, and is useful for accessing the field via an interface.
func (v *LdapInput) GetLdapsClientKeystoreId() string { return v.LdapsClientKeystoreId }

// GetLdapsClientKeyAlias returns LdapInput.LdapsClientKeyAlias, and is useful for accessing the field via an interface.
func (v *LdapInput) GetLdapsClientKeyAlias() string { return v.LdapsClientKeyAlias }

// GetSearchBase returns LdapInput.SearchBase, and is useful for accessing the field via an interface.
func (v *LdapInput) GetSearchBase() string { return v.SearchBase }

// GetWritable returns LdapInput.Writable, and is useful for accessing the field via an interface.
func (v *LdapInput) GetWritable() bool { return v.Writable }

// GetBindDn returns LdapInput.BindDn, and is useful for accessing the field via an interface.
func (v *LdapInput) GetBindDn() string { return v.BindDn }

// GetBindPassword returns LdapInput.BindPassword, and is useful for accessing the field via an interface.
func (v *LdapInput) GetBindPassword() string { return v.BindPassword }

// GetUserMappings returns LdapInput.UserMappings, and is useful for accessing the field via an interface.
func (v *LdapInput) GetUserMappings() []*UserMappingInput { return v.UserMappings }

// GetGroupMappings returns LdapInput.GroupMappings, and is useful for accessing the field via an interface.
func (v *LdapInput) GetGroupMappings() []*GroupMappingInput { return v.GroupMappings }

// GetChecksum returns LdapInput.Checksum, and is useful for accessing the field via an interface.
func (v *LdapInput) GetChecksum() string { return v.Checksum }

type ListenPortClientAuth string

const (
	ListenPortClientAuthNone     ListenPortClientAuth = "NONE"
	ListenPortClientAuthOptional ListenPortClientAuth = "OPTIONAL"
	ListenPortClientAuthRequired ListenPortClientAuth = "REQUIRED"
)

type ListenPortFeature string

const (
	ListenPortFeaturePublishedServiceMessageInput ListenPortFeature = "PUBLISHED_SERVICE_MESSAGE_INPUT"
	ListenPortFeaturePolicyManagerAccess          ListenPortFeature = "POLICY_MANAGER_ACCESS"
	ListenPortFeatureEnterpriseManagerAccess      ListenPortFeature = "ENTERPRISE_MANAGER_ACCESS"
	ListenPortFeatureAdministrativeAccess         ListenPortFeature = "ADMINISTRATIVE_ACCESS"
	ListenPortFeatureBrowserBasedAdministration   ListenPortFeature = "BROWSER_BASED_ADMINISTRATION"
	ListenPortFeaturePolicyDownloadService        ListenPortFeature = "POLICY_DOWNLOAD_SERVICE"
	ListenPortFeaturePingService                  ListenPortFeature = "PING_SERVICE"
	ListenPortFeatureWsTrustSecurityTokenService  ListenPortFeature = "WS_TRUST_SECURITY_TOKEN_SERVICE"
	ListenPortFeatureCertificateSigningService    ListenPortFeature = "CERTIFICATE_SIGNING_SERVICE"
	ListenPortFeaturePasswordChangingService      ListenPortFeature = "PASSWORD_CHANGING_SERVICE"
	ListenPortFeatureWsdlDownloadService          ListenPortFeature = "WSDL_DOWNLOAD_SERVICE"
	ListenPortFeatureSnmpQueryService             ListenPortFeature = "SNMP_QUERY_SERVICE"
	ListenPortFeatureBuiltInServices              ListenPortFeature = "BUILT_IN_SERVICES"
	ListenPortFeatureNodeControl                  ListenPortFeature = "NODE_CONTROL"
	ListenPortFeatureInterNodeCommunication       ListenPortFeature = "INTER_NODE_COMMUNICATION"
)

type ListenPortInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The listen port configuration name
	Name string `json:"name"`
	// Whether this listen port configuration is enabled to listen for traffic on the specified port
	Enabled bool `json:"enabled"`
	// Protocol (scheme). Possible values are:
	// HTTP
	// HTTPS
	// HTTP2
	// HTTP2 (Secure)
	// FTP
	// FTPS
	// l7.raw.tcp
	// SSH2
	Protocol string `json:"protocol"`
	// The ListenPort's port number
	// Note: If the listen port is using the SSH2 protocol, avoid using port 22, as
	// it may conflict with the default SSH port 22 on Linux or Unix systems.
	Port int `json:"port"`
	// The name of the published service hardwired to the listen port
	HardwiredServiceName string `json:"hardwiredServiceName"`
	// Which Gateway services can be accessed through this listen port
	EnabledFeatures []ListenPortFeature `json:"enabledFeatures"`
	// The listen port tls settings
	TlsSettings *ListenPortTlsSettingsInput `json:"tlsSettings,omitempty"`
	// The listen port properties
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns ListenPortInput.Goid, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetGoid() string { return v.Goid }

// GetName returns ListenPortInput.Name, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetName() string { return v.Name }

// GetEnabled returns ListenPortInput.Enabled, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetEnabled() bool { return v.Enabled }

// GetProtocol returns ListenPortInput.Protocol, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetProtocol() string { return v.Protocol }

// GetPort returns ListenPortInput.Port, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetPort() int { return v.Port }

// GetHardwiredServiceName returns ListenPortInput.HardwiredServiceName, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetHardwiredServiceName() string { return v.HardwiredServiceName }

// GetEnabledFeatures returns ListenPortInput.EnabledFeatures, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetEnabledFeatures() []ListenPortFeature { return v.EnabledFeatures }

// GetTlsSettings returns ListenPortInput.TlsSettings, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetTlsSettings() *ListenPortTlsSettingsInput { return v.TlsSettings }

// GetProperties returns ListenPortInput.Properties, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns ListenPortInput.Checksum, and is useful for accessing the field via an interface.
func (v *ListenPortInput) GetChecksum() string { return v.Checksum }

type ListenPortTlsSettingsInput struct {
	// Specify whether the client must present a certificate to authenticate: NONE/OPTIONAL/REQUIRED
	ClientAuthentication ListenPortClientAuth `json:"clientAuthentication"`
	// Keystore ID
	KeystoreId string `json:"keystoreId"`
	// Key alias configured for listen port
	KeyAlias string `json:"keyAlias"`
	// TLS versions to be enabled for the listen port
	TlsVersions []string `json:"tlsVersions"`
	// Cipher suites that will be enabled on the SSL listen port
	CipherSuites []string `json:"cipherSuites"`
	// Enforces cipher suites usage in the order of preference
	UseCipherSuitesOrder bool `json:"useCipherSuitesOrder"`
}

// GetClientAuthentication returns ListenPortTlsSettingsInput.ClientAuthentication, and is useful for accessing the field via an interface.
func (v *ListenPortTlsSettingsInput) GetClientAuthentication() ListenPortClientAuth {
	return v.ClientAuthentication
}

// GetKeystoreId returns ListenPortTlsSettingsInput.KeystoreId, and is useful for accessing the field via an interface.
func (v *ListenPortTlsSettingsInput) GetKeystoreId() string { return v.KeystoreId }

// GetKeyAlias returns ListenPortTlsSettingsInput.KeyAlias, and is useful for accessing the field via an interface.
func (v *ListenPortTlsSettingsInput) GetKeyAlias() string { return v.KeyAlias }

// GetTlsVersions returns ListenPortTlsSettingsInput.TlsVersions, and is useful for accessing the field via an interface.
func (v *ListenPortTlsSettingsInput) GetTlsVersions() []string { return v.TlsVersions }

// GetCipherSuites returns ListenPortTlsSettingsInput.CipherSuites, and is useful for accessing the field via an interface.
func (v *ListenPortTlsSettingsInput) GetCipherSuites() []string { return v.CipherSuites }

// GetUseCipherSuitesOrder returns ListenPortTlsSettingsInput.UseCipherSuitesOrder, and is useful for accessing the field via an interface.
func (v *ListenPortTlsSettingsInput) GetUseCipherSuitesOrder() bool { return v.UseCipherSuitesOrder }

// Indicates severity threshold of the log sink
type LogSeverityThreshold string

const (
	LogSeverityThresholdAll     LogSeverityThreshold = "ALL"
	LogSeverityThresholdFinest  LogSeverityThreshold = "FINEST"
	LogSeverityThresholdFiner   LogSeverityThreshold = "FINER"
	LogSeverityThresholdFine    LogSeverityThreshold = "FINE"
	LogSeverityThresholdConfig  LogSeverityThreshold = "CONFIG"
	LogSeverityThresholdInfo    LogSeverityThreshold = "INFO"
	LogSeverityThresholdWarning LogSeverityThreshold = "WARNING"
	LogSeverityThresholdSevere  LogSeverityThreshold = "SEVERE"
)

// Indicates the Sink Category
type LogSinkCategory string

const (
	LogSinkCategoryLog     LogSinkCategory = "LOG"
	LogSinkCategoryTraffic LogSinkCategory = "TRAFFIC"
	LogSinkCategoryAudit   LogSinkCategory = "AUDIT"
	LogSinkCategorySspc    LogSinkCategory = "SSPC"
)

// Indicate the long sink filter, consist of a type and list of values
type LogSinkFilterInput struct {
	// defines the type of log sink
	Type string `json:"type"`
	// defines the list of values
	Values []string `json:"values"`
}

// GetType returns LogSinkFilterInput.Type, and is useful for accessing the field via an interface.
func (v *LogSinkFilterInput) GetType() string { return v.Type }

// GetValues returns LogSinkFilterInput.Values, and is useful for accessing the field via an interface.
func (v *LogSinkFilterInput) GetValues() []string { return v.Values }

type LogSinkInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// log sink unique name
	Name string `json:"name"`
	// description of log sink
	Description string `json:"description"`
	// defines whether its a file based log or sysLog
	Type LogSinkType `json:"type"`
	// Whether this log sink is enabled
	Enabled bool `json:"enabled"`
	// defines the severity threshold of log Sink
	Severity LogSeverityThreshold `json:"severity"`
	// defines list of categories
	Categories []LogSinkCategory `json:"categories"`
	// defines syslog host list
	SyslogHosts []string `json:"syslogHosts"`
	// defines list of Log sink filters
	Filters []*LogSinkFilterInput `json:"filters,omitempty"`
	// defines list of log Sink properties
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns LogSinkInput.Goid, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetGoid() string { return v.Goid }

// GetName returns LogSinkInput.Name, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetName() string { return v.Name }

// GetDescription returns LogSinkInput.Description, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetDescription() string { return v.Description }

// GetType returns LogSinkInput.Type, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetType() LogSinkType { return v.Type }

// GetEnabled returns LogSinkInput.Enabled, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetEnabled() bool { return v.Enabled }

// GetSeverity returns LogSinkInput.Severity, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetSeverity() LogSeverityThreshold { return v.Severity }

// GetCategories returns LogSinkInput.Categories, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetCategories() []LogSinkCategory { return v.Categories }

// GetSyslogHosts returns LogSinkInput.SyslogHosts, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetSyslogHosts() []string { return v.SyslogHosts }

// GetFilters returns LogSinkInput.Filters, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetFilters() []*LogSinkFilterInput { return v.Filters }

// GetProperties returns LogSinkInput.Properties, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns LogSinkInput.Checksum, and is useful for accessing the field via an interface.
func (v *LogSinkInput) GetChecksum() string { return v.Checksum }

// Indicates the type of sink . File Based Or SYSLOG based
type LogSinkType string

const (
	LogSinkTypeFile   LogSinkType = "FILE"
	LogSinkTypeSyslog LogSinkType = "SYSLOG"
)

type MemberStrategyInput struct {
	// Possible values are 0 for MEMBERS_ARE_DN, 1 MEMBERS_ARE_LOGIN, 2 MEMBERS_ARE_NVPAIR, 3 MEMBERS_BY_OU
	Val int `json:"val"`
}

// GetVal returns MemberStrategyInput.Val, and is useful for accessing the field via an interface.
func (v *MemberStrategyInput) GetVal() int { return v.Val }

type MembershipInput struct {
	// The name of group to which the membership is defined
	Name         string `json:"name"`
	Goid         string `json:"goid"`
	Description  string `json:"description"`
	ProviderName string `json:"providerName"`
	Checksum     string `json:"checksum"`
}

// GetName returns MembershipInput.Name, and is useful for accessing the field via an interface.
func (v *MembershipInput) GetName() string { return v.Name }

// GetGoid returns MembershipInput.Goid, and is useful for accessing the field via an interface.
func (v *MembershipInput) GetGoid() string { return v.Goid }

// GetDescription returns MembershipInput.Description, and is useful for accessing the field via an interface.
func (v *MembershipInput) GetDescription() string { return v.Description }

// GetProviderName returns MembershipInput.ProviderName, and is useful for accessing the field via an interface.
func (v *MembershipInput) GetProviderName() string { return v.ProviderName }

// GetChecksum returns MembershipInput.Checksum, and is useful for accessing the field via an interface.
func (v *MembershipInput) GetChecksum() string { return v.Checksum }

type ModuleType string

const (
	ModuleTypeModularAssertion ModuleType = "MODULAR_ASSERTION"
	ModuleTypeCustomAssertion  ModuleType = "CUSTOM_ASSERTION"
)

type OcspNonceUsage string

const (
	// To include nonce in OCSP requests
	OcspNonceUsageIncludeNonce OcspNonceUsage = "INCLUDE_NONCE"
	// Do not include nonce in OCSP requests
	OcspNonceUsageExcludeNonce OcspNonceUsage = "EXCLUDE_NONCE"
	// Let pkix.ocsp.useNonce cluster wide property decide
	OcspNonceUsageUseNonceConditionally OcspNonceUsage = "USE_NONCE_CONDITIONALLY"
)

type PasswdStrategyInput struct {
	// Possible values are 0 for CLEAR, 1 for HASHED
	Val int `json:"val"`
}

// GetVal returns PasswdStrategyInput.Val, and is useful for accessing the field via an interface.
func (v *PasswdStrategyInput) GetVal() int { return v.Val }

type PasswordPolicyInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
	// Force password change for new user and reset
	ForcePasswordChangeNewUser bool `json:"forcePasswordChangeNewUser"`
	// To enable/disable no repeating characters
	NoRepeatingCharacters bool `json:"noRepeatingCharacters"`
	// Minimum Password Length - Enter the minimum number of characters ranging from 3 to 128 required for the password.
	MinPasswordLength int `json:"minPasswordLength"`
	// Maximum Password Length - Enter the maximum number of characters ranging from 3 to 128 required for the password.
	MaxPasswordLength int `json:"maxPasswordLength"`
	// Set the number of uppercase letters that are required for the password. ranging from 1 to 128
	UpperMinimum int `json:"upperMinimum"`
	// Set the number of lowercase letters that are required for the password. ranging from 1 to 128
	LowerMinimum int `json:"lowerMinimum"`
	// Sets how many numbers (0-9) are required for the password. ranging from 1 to 128
	NumberMinimum int `json:"numberMinimum"`
	// Sets how many symbol characters are required for the password. ranging from 1 to 128
	SymbolMinimum int `json:"symbolMinimum"`
	// Sets how many non numeric characters are required for the password. ranging from 1 to 128
	NonNumericMinimum int `json:"nonNumericMinimum"`
	// Sets how many characters are required for the password. ranging from 1 to 128
	CharDiffMinimum int `json:"charDiffMinimum"`
	// Enter the number of times, between 1 and 50, that a new password must be different from the current password
	RepeatFrequency int `json:"repeatFrequency"`
	// Days required for the password to be expired. ranging from 1 to 1825
	PasswordExpiry int `json:"passwordExpiry"`
	// Allow One Password Change Per 24 Hours
	AllowableChangesPerDay bool `json:"allowableChangesPerDay"`
}

// GetGoid returns PasswordPolicyInput.Goid, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetGoid() string { return v.Goid }

// GetChecksum returns PasswordPolicyInput.Checksum, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetChecksum() string { return v.Checksum }

// GetForcePasswordChangeNewUser returns PasswordPolicyInput.ForcePasswordChangeNewUser, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetForcePasswordChangeNewUser() bool {
	return v.ForcePasswordChangeNewUser
}

// GetNoRepeatingCharacters returns PasswordPolicyInput.NoRepeatingCharacters, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetNoRepeatingCharacters() bool { return v.NoRepeatingCharacters }

// GetMinPasswordLength returns PasswordPolicyInput.MinPasswordLength, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetMinPasswordLength() int { return v.MinPasswordLength }

// GetMaxPasswordLength returns PasswordPolicyInput.MaxPasswordLength, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetMaxPasswordLength() int { return v.MaxPasswordLength }

// GetUpperMinimum returns PasswordPolicyInput.UpperMinimum, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetUpperMinimum() int { return v.UpperMinimum }

// GetLowerMinimum returns PasswordPolicyInput.LowerMinimum, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetLowerMinimum() int { return v.LowerMinimum }

// GetNumberMinimum returns PasswordPolicyInput.NumberMinimum, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetNumberMinimum() int { return v.NumberMinimum }

// GetSymbolMinimum returns PasswordPolicyInput.SymbolMinimum, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetSymbolMinimum() int { return v.SymbolMinimum }

// GetNonNumericMinimum returns PasswordPolicyInput.NonNumericMinimum, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetNonNumericMinimum() int { return v.NonNumericMinimum }

// GetCharDiffMinimum returns PasswordPolicyInput.CharDiffMinimum, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetCharDiffMinimum() int { return v.CharDiffMinimum }

// GetRepeatFrequency returns PasswordPolicyInput.RepeatFrequency, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetRepeatFrequency() int { return v.RepeatFrequency }

// GetPasswordExpiry returns PasswordPolicyInput.PasswordExpiry, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetPasswordExpiry() int { return v.PasswordExpiry }

// GetAllowableChangesPerDay returns PasswordPolicyInput.AllowableChangesPerDay, and is useful for accessing the field via an interface.
func (v *PasswordPolicyInput) GetAllowableChangesPerDay() bool { return v.AllowableChangesPerDay }

type PolicyFragmentInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The folder path where to create this policy.  If the path does not exist, it will be created
	FolderPath string `json:"folderPath"`
	// The name of the policy. Policies are unique by name.
	Name string `json:"name"`
	// The guid for this policy, if none provided, assigned at creation
	Guid string `json:"guid"`
	// The policy
	Policy *PolicyInput `json:"policy,omitempty"`
	Soap   bool         `json:"soap"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns PolicyFragmentInput.Goid, and is useful for accessing the field via an interface.
func (v *PolicyFragmentInput) GetGoid() string { return v.Goid }

// GetFolderPath returns PolicyFragmentInput.FolderPath, and is useful for accessing the field via an interface.
func (v *PolicyFragmentInput) GetFolderPath() string { return v.FolderPath }

// GetName returns PolicyFragmentInput.Name, and is useful for accessing the field via an interface.
func (v *PolicyFragmentInput) GetName() string { return v.Name }

// GetGuid returns PolicyFragmentInput.Guid, and is useful for accessing the field via an interface.
func (v *PolicyFragmentInput) GetGuid() string { return v.Guid }

// GetPolicy returns PolicyFragmentInput.Policy, and is useful for accessing the field via an interface.
func (v *PolicyFragmentInput) GetPolicy() *PolicyInput { return v.Policy }

// GetSoap returns PolicyFragmentInput.Soap, and is useful for accessing the field via an interface.
func (v *PolicyFragmentInput) GetSoap() bool { return v.Soap }

// GetChecksum returns PolicyFragmentInput.Checksum, and is useful for accessing the field via an interface.
func (v *PolicyFragmentInput) GetChecksum() string { return v.Checksum }

type PolicyInput struct {
	// The policy xml
	Xml string `json:"xml"`
}

// GetXml returns PolicyInput.Xml, and is useful for accessing the field via an interface.
func (v *PolicyInput) GetXml() string { return v.Xml }

type PolicyUsageType string

const (
	// Do not perform revocation check
	PolicyUsageTypeNone PolicyUsageType = "NONE"
	// Use the default revocation check policy
	PolicyUsageTypeUseDefault PolicyUsageType = "USE_DEFAULT"
	// Use the specified revocation check policy
	PolicyUsageTypeSpecified PolicyUsageType = "SPECIFIED"
)

type RevocationCheckPolicyInput struct {
	// The goid for this revocation check policy
	Goid string `json:"goid"`
	// Name that describes the revocation checking policy
	Name string `json:"name"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
	// Use as default revocation check policy
	DefaultPolicy bool `json:"defaultPolicy"`
	// Succeed if revocation status is unknown
	DefaultSuccess bool `json:"defaultSuccess"`
	// Continue processing if server is unavailable
	ContinueOnServerUnavailable bool `json:"continueOnServerUnavailable"`
	// Certificate revocation check properties
	RevocationCheckPolicyItems []*RevocationCheckPolicyItemInput `json:"revocationCheckPolicyItems,omitempty"`
}

// GetGoid returns RevocationCheckPolicyInput.Goid, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyInput) GetGoid() string { return v.Goid }

// GetName returns RevocationCheckPolicyInput.Name, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyInput) GetName() string { return v.Name }

// GetChecksum returns RevocationCheckPolicyInput.Checksum, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyInput) GetChecksum() string { return v.Checksum }

// GetDefaultPolicy returns RevocationCheckPolicyInput.DefaultPolicy, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyInput) GetDefaultPolicy() bool { return v.DefaultPolicy }

// GetDefaultSuccess returns RevocationCheckPolicyInput.DefaultSuccess, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyInput) GetDefaultSuccess() bool { return v.DefaultSuccess }

// GetContinueOnServerUnavailable returns RevocationCheckPolicyInput.ContinueOnServerUnavailable, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyInput) GetContinueOnServerUnavailable() bool {
	return v.ContinueOnServerUnavailable
}

// GetRevocationCheckPolicyItems returns RevocationCheckPolicyInput.RevocationCheckPolicyItems, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyInput) GetRevocationCheckPolicyItems() []*RevocationCheckPolicyItemInput {
	return v.RevocationCheckPolicyItems
}

type RevocationCheckPolicyItemInput struct {
	// Type for Checking OCSP or CRL
	Type CertRevocationCheckPropertyType `json:"type"`
	// If the CRL from URL or OCSP from URL option was selected, enter the URL Otherwise provide regex.
	// CRL_FROM_CERTIFICATE &  OCSP_FROM_CERTIFICATE options uses URL Regex &
	// CRL_FROM_URL & OCSP_FROM_URL options uses URLs.
	// This is caller's responsibility to provide valid URL or Regex, Graphman won't validate it.
	Url string `json:"url"`
	// If user permitting the entity that issued the certificate
	AllowIssuerSignature bool `json:"allowIssuerSignature"`
	// Whether to include a nonce in OCSP request, default is to set INCLUDE_NONCE
	NonceUsage OcspNonceUsage `json:"nonceUsage"`
	// The sha1 thumbprint of the certificate
	SignerThumbprintSha1s []string `json:"signerThumbprintSha1s"`
}

// GetType returns RevocationCheckPolicyItemInput.Type, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyItemInput) GetType() CertRevocationCheckPropertyType { return v.Type }

// GetUrl returns RevocationCheckPolicyItemInput.Url, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyItemInput) GetUrl() string { return v.Url }

// GetAllowIssuerSignature returns RevocationCheckPolicyItemInput.AllowIssuerSignature, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyItemInput) GetAllowIssuerSignature() bool {
	return v.AllowIssuerSignature
}

// GetNonceUsage returns RevocationCheckPolicyItemInput.NonceUsage, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyItemInput) GetNonceUsage() OcspNonceUsage { return v.NonceUsage }

// GetSignerThumbprintSha1s returns RevocationCheckPolicyItemInput.SignerThumbprintSha1s, and is useful for accessing the field via an interface.
func (v *RevocationCheckPolicyItemInput) GetSignerThumbprintSha1s() []string {
	return v.SignerThumbprintSha1s
}

type SMConfigInput struct {
	// The goid for the CA SSO connection
	Goid string `json:"goid"`
	// Name of the CA SSO configuration
	Name string `json:"name"`
	// Indicates whether the specified configuration is currently enabled or disabled
	Enabled bool `json:"enabled"`
	// Name of the host registered with the CA SSO Policy Server
	AgentHost string `json:"agentHost"`
	// The IP address of the CA SSO agent. This field is required if the Check IP check box is selected
	AgentIP string `json:"agentIP"`
	// CA SSO Policy Server host configuration used by the agent
	AgentHostConfig string `json:"agentHostConfig"`
	// CA SSO shared secret used by the agent to establish communication with the Policy Server
	AgentSecret string `json:"agentSecret"`
	// Choose the FIPS mode supported by the CA SSO Policy Server. The available values are: COMPAT(default)/MIGRATE/ONLY
	CryptoMode SMCryptoMode `json:"cryptoMode"`
	// The CA SSO Policy Server compare the client IP against the address stored in the SSO Token
	IpCheckEnabled bool `json:"ipCheckEnabled"`
	// Whether to update the SSO Token after successful authentication/authorization
	UpdateSSOToken bool `json:"updateSSOToken"`
	// The percentage of servers within a cluster that must be available for Policy Server requests
	ClusterFailoverThreshold int  `json:"clusterFailoverThreshold"`
	NonClusterFailover       bool `json:"nonClusterFailover"`
	// User name of the CA SSO administrator
	Username string `json:"username"`
	// The secure password reference
	SecurePasswordName string `json:"securePasswordName"`
	// The Siteminder configuration properties
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// The configuration checksum
	Checksum string `json:"checksum"`
}

// GetGoid returns SMConfigInput.Goid, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetGoid() string { return v.Goid }

// GetName returns SMConfigInput.Name, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetName() string { return v.Name }

// GetEnabled returns SMConfigInput.Enabled, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetEnabled() bool { return v.Enabled }

// GetAgentHost returns SMConfigInput.AgentHost, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetAgentHost() string { return v.AgentHost }

// GetAgentIP returns SMConfigInput.AgentIP, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetAgentIP() string { return v.AgentIP }

// GetAgentHostConfig returns SMConfigInput.AgentHostConfig, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetAgentHostConfig() string { return v.AgentHostConfig }

// GetAgentSecret returns SMConfigInput.AgentSecret, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetAgentSecret() string { return v.AgentSecret }

// GetCryptoMode returns SMConfigInput.CryptoMode, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetCryptoMode() SMCryptoMode { return v.CryptoMode }

// GetIpCheckEnabled returns SMConfigInput.IpCheckEnabled, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetIpCheckEnabled() bool { return v.IpCheckEnabled }

// GetUpdateSSOToken returns SMConfigInput.UpdateSSOToken, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetUpdateSSOToken() bool { return v.UpdateSSOToken }

// GetClusterFailoverThreshold returns SMConfigInput.ClusterFailoverThreshold, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetClusterFailoverThreshold() int { return v.ClusterFailoverThreshold }

// GetNonClusterFailover returns SMConfigInput.NonClusterFailover, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetNonClusterFailover() bool { return v.NonClusterFailover }

// GetUsername returns SMConfigInput.Username, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetUsername() string { return v.Username }

// GetSecurePasswordName returns SMConfigInput.SecurePasswordName, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetSecurePasswordName() string { return v.SecurePasswordName }

// GetProperties returns SMConfigInput.Properties, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns SMConfigInput.Checksum, and is useful for accessing the field via an interface.
func (v *SMConfigInput) GetChecksum() string { return v.Checksum }

type SMCryptoMode string

const (
	SMCryptoModeCompat  SMCryptoMode = "COMPAT"
	SMCryptoModeMigrate SMCryptoMode = "MIGRATE"
	SMCryptoModeFips    SMCryptoMode = "FIPS"
)

type ScheduledTaskInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The name of the scheduled task
	Name string `json:"name"`
	// The name of the policy for scheduled task
	PolicyName string  `json:"policyName"`
	JobType    JobType `json:"jobType"`
	// The cron job expression
	CronExpression string `json:"cronExpression"`
	// Whether to execute on single node
	ExecuteOnSingleNode bool `json:"executeOnSingleNode"`
	// Whether to execute the RECURRING task now?
	ExecuteOnCreation bool `json:"executeOnCreation"`
	// Specify a future execution date for a ONE_TIME task
	ExecutionDate time.Time `json:"executionDate"`
	// The scheduled task status
	Status                JobStatus `json:"status"`
	RunAsUser             string    `json:"runAsUser"`
	RunAsUserProviderName string    `json:"runAsUserProviderName"`
	// The configuration checksum
	Checksum string `json:"checksum"`
}

// GetGoid returns ScheduledTaskInput.Goid, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetGoid() string { return v.Goid }

// GetName returns ScheduledTaskInput.Name, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetName() string { return v.Name }

// GetPolicyName returns ScheduledTaskInput.PolicyName, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetPolicyName() string { return v.PolicyName }

// GetJobType returns ScheduledTaskInput.JobType, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetJobType() JobType { return v.JobType }

// GetCronExpression returns ScheduledTaskInput.CronExpression, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetCronExpression() string { return v.CronExpression }

// GetExecuteOnSingleNode returns ScheduledTaskInput.ExecuteOnSingleNode, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetExecuteOnSingleNode() bool { return v.ExecuteOnSingleNode }

// GetExecuteOnCreation returns ScheduledTaskInput.ExecuteOnCreation, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetExecuteOnCreation() bool { return v.ExecuteOnCreation }

// GetExecutionDate returns ScheduledTaskInput.ExecutionDate, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetExecutionDate() time.Time { return v.ExecutionDate }

// GetStatus returns ScheduledTaskInput.Status, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetStatus() JobStatus { return v.Status }

// GetRunAsUser returns ScheduledTaskInput.RunAsUser, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetRunAsUser() string { return v.RunAsUser }

// GetRunAsUserProviderName returns ScheduledTaskInput.RunAsUserProviderName, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetRunAsUserProviderName() string { return v.RunAsUserProviderName }

// GetChecksum returns ScheduledTaskInput.Checksum, and is useful for accessing the field via an interface.
func (v *ScheduledTaskInput) GetChecksum() string { return v.Checksum }

type SchemaInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// A reference to the schema. This id is what is referred to in policy and is often mirror of the target namespace
	SystemId string `json:"systemId"`
	// The target namespace in the XML schema
	TargetNs string `json:"targetNs"`
	// An optional description for the schema
	Description string `json:"description"`
	// The content of XML schema
	Content string `json:"content"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns SchemaInput.Goid, and is useful for accessing the field via an interface.
func (v *SchemaInput) GetGoid() string { return v.Goid }

// GetSystemId returns SchemaInput.SystemId, and is useful for accessing the field via an interface.
func (v *SchemaInput) GetSystemId() string { return v.SystemId }

// GetTargetNs returns SchemaInput.TargetNs, and is useful for accessing the field via an interface.
func (v *SchemaInput) GetTargetNs() string { return v.TargetNs }

// GetDescription returns SchemaInput.Description, and is useful for accessing the field via an interface.
func (v *SchemaInput) GetDescription() string { return v.Description }

// GetContent returns SchemaInput.Content, and is useful for accessing the field via an interface.
func (v *SchemaInput) GetContent() string { return v.Content }

// GetChecksum returns SchemaInput.Checksum, and is useful for accessing the field via an interface.
func (v *SchemaInput) GetChecksum() string { return v.Checksum }

type SecretInput struct {
	// Identify the password being stored. You may use letters, numbers, dashes, and underscores.
	// Names that contain spaces or periods are valid, but the resulting stored
	// password cannot be referenced via context variable.
	// Names that contain @ or $ are valid, but the resulting stored password cannot be referenced via context variable.
	Name string `json:"name"`
	// Password or PEM Private Key
	SecretType SecretType `json:"secretType"`
	// The goid for the Secret
	Goid string `json:"goid"`
	// Ignored at entity creation time but declared here so you can embed checksums in graphman bundles
	Checksum string `json:"checksum"`
	// Whether this secret can be referred to in policy via context variable ${secpass...
	VariableReferencable bool `json:"variableReferencable"`
	// Base64 encrypted secret. The encryption is compatible with openssl secret encryption
	// using cypher AES/CBC/PKCS5Padding. You can create this value at command line:
	// > echo -n "<clear text secret>" | openssl enc -aes-256-cbc -md sha256 -pass pass:<password> -a
	Secret string `json:"secret"`
	// Description of the password. This is optional
	Description string `json:"description"`
}

// GetName returns SecretInput.Name, and is useful for accessing the field via an interface.
func (v *SecretInput) GetName() string { return v.Name }

// GetSecretType returns SecretInput.SecretType, and is useful for accessing the field via an interface.
func (v *SecretInput) GetSecretType() SecretType { return v.SecretType }

// GetGoid returns SecretInput.Goid, and is useful for accessing the field via an interface.
func (v *SecretInput) GetGoid() string { return v.Goid }

// GetChecksum returns SecretInput.Checksum, and is useful for accessing the field via an interface.
func (v *SecretInput) GetChecksum() string { return v.Checksum }

// GetVariableReferencable returns SecretInput.VariableReferencable, and is useful for accessing the field via an interface.
func (v *SecretInput) GetVariableReferencable() bool { return v.VariableReferencable }

// GetSecret returns SecretInput.Secret, and is useful for accessing the field via an interface.
func (v *SecretInput) GetSecret() string { return v.Secret }

// GetDescription returns SecretInput.Description, and is useful for accessing the field via an interface.
func (v *SecretInput) GetDescription() string { return v.Description }

type SecretType string

const (
	// Stored password for example used in the jdbc connection
	SecretTypePassword SecretType = "PASSWORD"
	// Secure pem key for example used in the route via ssh assertion
	SecretTypePemPrivateKey SecretType = "PEM_PRIVATE_KEY"
)

type ServerModuleFileInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The Server module name
	Name string `json:"name"`
	// The Server module type
	ModuleType ModuleType `json:"moduleType"`
	// The Server module SHA256 digest value
	ModuleSha256 string `json:"moduleSha256"`
	// The Server module signature
	Signature string `json:"signature"`
	// The base64 encoded signer certificate
	SignerCertBase64 string `json:"signerCertBase64"`
	// The Server module file properties
	Properties []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns ServerModuleFileInput.Goid, and is useful for accessing the field via an interface.
func (v *ServerModuleFileInput) GetGoid() string { return v.Goid }

// GetName returns ServerModuleFileInput.Name, and is useful for accessing the field via an interface.
func (v *ServerModuleFileInput) GetName() string { return v.Name }

// GetModuleType returns ServerModuleFileInput.ModuleType, and is useful for accessing the field via an interface.
func (v *ServerModuleFileInput) GetModuleType() ModuleType { return v.ModuleType }

// GetModuleSha256 returns ServerModuleFileInput.ModuleSha256, and is useful for accessing the field via an interface.
func (v *ServerModuleFileInput) GetModuleSha256() string { return v.ModuleSha256 }

// GetSignature returns ServerModuleFileInput.Signature, and is useful for accessing the field via an interface.
func (v *ServerModuleFileInput) GetSignature() string { return v.Signature }

// GetSignerCertBase64 returns ServerModuleFileInput.SignerCertBase64, and is useful for accessing the field via an interface.
func (v *ServerModuleFileInput) GetSignerCertBase64() string { return v.SignerCertBase64 }

// GetProperties returns ServerModuleFileInput.Properties, and is useful for accessing the field via an interface.
func (v *ServerModuleFileInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns ServerModuleFileInput.Checksum, and is useful for accessing the field via an interface.
func (v *ServerModuleFileInput) GetChecksum() string { return v.Checksum }

type ServiceResolutionConfigInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
	// Only Services with a resolution path are accessible
	ResolutionPathRequired bool `json:"resolutionPathRequired"`
	// Resolution paths are case sensitive
	ResolutionPathCaseSensitive bool `json:"resolutionPathCaseSensitive"`
	// Allow resolution by L7-Original-URL header
	UseL7OriginalUrl bool `json:"useL7OriginalUrl"`
	// Allow resolution by Service GOID/OID in URLs
	UseServiceGoid bool `json:"useServiceGoid"`
	// Use SOAP action
	UseSoapAction bool `json:"useSoapAction"`
	// Use SOAP body child namespace
	UseSoapBodyChildNamespace bool `json:"useSoapBodyChildNamespace"`
}

// GetGoid returns ServiceResolutionConfigInput.Goid, and is useful for accessing the field via an interface.
func (v *ServiceResolutionConfigInput) GetGoid() string { return v.Goid }

// GetChecksum returns ServiceResolutionConfigInput.Checksum, and is useful for accessing the field via an interface.
func (v *ServiceResolutionConfigInput) GetChecksum() string { return v.Checksum }

// GetResolutionPathRequired returns ServiceResolutionConfigInput.ResolutionPathRequired, and is useful for accessing the field via an interface.
func (v *ServiceResolutionConfigInput) GetResolutionPathRequired() bool {
	return v.ResolutionPathRequired
}

// GetResolutionPathCaseSensitive returns ServiceResolutionConfigInput.ResolutionPathCaseSensitive, and is useful for accessing the field via an interface.
func (v *ServiceResolutionConfigInput) GetResolutionPathCaseSensitive() bool {
	return v.ResolutionPathCaseSensitive
}

// GetUseL7OriginalUrl returns ServiceResolutionConfigInput.UseL7OriginalUrl, and is useful for accessing the field via an interface.
func (v *ServiceResolutionConfigInput) GetUseL7OriginalUrl() bool { return v.UseL7OriginalUrl }

// GetUseServiceGoid returns ServiceResolutionConfigInput.UseServiceGoid, and is useful for accessing the field via an interface.
func (v *ServiceResolutionConfigInput) GetUseServiceGoid() bool { return v.UseServiceGoid }

// GetUseSoapAction returns ServiceResolutionConfigInput.UseSoapAction, and is useful for accessing the field via an interface.
func (v *ServiceResolutionConfigInput) GetUseSoapAction() bool { return v.UseSoapAction }

// GetUseSoapBodyChildNamespace returns ServiceResolutionConfigInput.UseSoapBodyChildNamespace, and is useful for accessing the field via an interface.
func (v *ServiceResolutionConfigInput) GetUseSoapBodyChildNamespace() bool {
	return v.UseSoapBodyChildNamespace
}

type SoapServiceInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The guid for this service, if none provided, assigned at creation
	Guid string `json:"guid"`
	// The folder path where to create this service.  If the path does not exist, it will be created
	FolderPath string `json:"folderPath"`
	// The name of the service
	Name string `json:"name"`
	// The WSDL of the soap service
	Wsdl string `json:"wsdl"`
	// The resolution path of the service
	ResolutionPath string `json:"resolutionPath"`
	// Soap service resolvers
	Resolvers *SoapServiceResolverInput `json:"resolvers,omitempty"`
	// The policy
	Policy *PolicyInput `json:"policy,omitempty"`
	// Whether the service is enabled (optional, default true)
	Enabled bool `json:"enabled"`
	// The http methods allowed for this service
	MethodsAllowed []HttpMethod `json:"methodsAllowed"`
	// Which SOAP version
	SoapVersion SoapVersion `json:"soapVersion"`
	// Whether or not the gateway should process incoming ws-security soap headers
	WssProcessingEnabled bool `json:"wssProcessingEnabled"`
	TracingEnabled       bool `json:"tracingEnabled"`
	// Allow requests intended for operations not supported by the WSDL
	LaxResolution bool                   `json:"laxResolution"`
	Properties    []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns SoapServiceInput.Goid, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetGoid() string { return v.Goid }

// GetGuid returns SoapServiceInput.Guid, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetGuid() string { return v.Guid }

// GetFolderPath returns SoapServiceInput.FolderPath, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetFolderPath() string { return v.FolderPath }

// GetName returns SoapServiceInput.Name, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetName() string { return v.Name }

// GetWsdl returns SoapServiceInput.Wsdl, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetWsdl() string { return v.Wsdl }

// GetResolutionPath returns SoapServiceInput.ResolutionPath, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetResolutionPath() string { return v.ResolutionPath }

// GetResolvers returns SoapServiceInput.Resolvers, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetResolvers() *SoapServiceResolverInput { return v.Resolvers }

// GetPolicy returns SoapServiceInput.Policy, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetPolicy() *PolicyInput { return v.Policy }

// GetEnabled returns SoapServiceInput.Enabled, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetEnabled() bool { return v.Enabled }

// GetMethodsAllowed returns SoapServiceInput.MethodsAllowed, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetMethodsAllowed() []HttpMethod { return v.MethodsAllowed }

// GetSoapVersion returns SoapServiceInput.SoapVersion, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetSoapVersion() SoapVersion { return v.SoapVersion }

// GetWssProcessingEnabled returns SoapServiceInput.WssProcessingEnabled, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetWssProcessingEnabled() bool { return v.WssProcessingEnabled }

// GetTracingEnabled returns SoapServiceInput.TracingEnabled, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetTracingEnabled() bool { return v.TracingEnabled }

// GetLaxResolution returns SoapServiceInput.LaxResolution, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetLaxResolution() bool { return v.LaxResolution }

// GetProperties returns SoapServiceInput.Properties, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns SoapServiceInput.Checksum, and is useful for accessing the field via an interface.
func (v *SoapServiceInput) GetChecksum() string { return v.Checksum }

// Must have minimum (1 soapAction + baseUri) OR resolutionPath. You can have both too.
type SoapServiceResolverInput struct {
	// One of the SoapAction of the service to resolved. This must be specified along with a base ns from the WSDL
	SoapAction string `json:"soapAction"`
	// One or more soap actions of the service to resolved. This must be specified in the absence of soapAction field.
	SoapActions []string `json:"soapActions"`
	// Base uri from the wsdl of the service. Use this alongside the soapaction
	// property to resolve a soap service without resolutionUri
	BaseUri string `json:"baseUri"`
	// The resolution path of the service if that is how the soap service is resolved
	ResolutionPath string `json:"resolutionPath"`
}

// GetSoapAction returns SoapServiceResolverInput.SoapAction, and is useful for accessing the field via an interface.
func (v *SoapServiceResolverInput) GetSoapAction() string { return v.SoapAction }

// GetSoapActions returns SoapServiceResolverInput.SoapActions, and is useful for accessing the field via an interface.
func (v *SoapServiceResolverInput) GetSoapActions() []string { return v.SoapActions }

// GetBaseUri returns SoapServiceResolverInput.BaseUri, and is useful for accessing the field via an interface.
func (v *SoapServiceResolverInput) GetBaseUri() string { return v.BaseUri }

// GetResolutionPath returns SoapServiceResolverInput.ResolutionPath, and is useful for accessing the field via an interface.
func (v *SoapServiceResolverInput) GetResolutionPath() string { return v.ResolutionPath }

type SoapVersion string

const (
	SoapVersionSoap11  SoapVersion = "SOAP_1_1"
	SoapVersionSoap12  SoapVersion = "SOAP_1_2"
	SoapVersionUnknown SoapVersion = "UNKNOWN"
)

// Input sent with createTrustedCert mutation
type TrustedCertInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The name of the trusted certificate
	Name string `json:"name"`
	// The base 64 encoded string of the certificate
	CertBase64 string `json:"certBase64"`
	// Whether to perform hostname verification with this certificate
	VerifyHostname bool `json:"verifyHostname"`
	// Whether this certificate is a trust anchor
	TrustAnchor bool `json:"trustAnchor"`
	// What the certificate is trusted for
	TrustedFor []TrustedForType `json:"trustedFor"`
	// The revocation check policy type
	RevocationCheckPolicyType PolicyUsageType `json:"revocationCheckPolicyType"`
	// The name of revocation policy.  Required if revocationCheckPolicyType is PolicyUsageType.SPECIFIED
	RevocationCheckPolicyName string `json:"revocationCheckPolicyName"`
	// The Subject DN of this certificate. (Note that, this field has no effect on the mutation)
	SubjectDn string `json:"subjectDn"`
	// The start date of the validity period. (Note that, this field has no effect on the mutation)
	NotBefore string `json:"notBefore"`
	// the end date of the validity period. (Note that, this field has no effect on the mutation)
	NotAfter string `json:"notAfter"`
	// The sha1 thumbprint of the certificate. (Note that, this field has no effect on the mutation)
	ThumbprintSha1 string `json:"thumbprintSha1"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns TrustedCertInput.Goid, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetGoid() string { return v.Goid }

// GetName returns TrustedCertInput.Name, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetName() string { return v.Name }

// GetCertBase64 returns TrustedCertInput.CertBase64, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetCertBase64() string { return v.CertBase64 }

// GetVerifyHostname returns TrustedCertInput.VerifyHostname, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetVerifyHostname() bool { return v.VerifyHostname }

// GetTrustAnchor returns TrustedCertInput.TrustAnchor, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetTrustAnchor() bool { return v.TrustAnchor }

// GetTrustedFor returns TrustedCertInput.TrustedFor, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetTrustedFor() []TrustedForType { return v.TrustedFor }

// GetRevocationCheckPolicyType returns TrustedCertInput.RevocationCheckPolicyType, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetRevocationCheckPolicyType() PolicyUsageType {
	return v.RevocationCheckPolicyType
}

// GetRevocationCheckPolicyName returns TrustedCertInput.RevocationCheckPolicyName, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetRevocationCheckPolicyName() string { return v.RevocationCheckPolicyName }

// GetSubjectDn returns TrustedCertInput.SubjectDn, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetSubjectDn() string { return v.SubjectDn }

// GetNotBefore returns TrustedCertInput.NotBefore, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetNotBefore() string { return v.NotBefore }

// GetNotAfter returns TrustedCertInput.NotAfter, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetNotAfter() string { return v.NotAfter }

// GetThumbprintSha1 returns TrustedCertInput.ThumbprintSha1, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetThumbprintSha1() string { return v.ThumbprintSha1 }

// GetChecksum returns TrustedCertInput.Checksum, and is useful for accessing the field via an interface.
func (v *TrustedCertInput) GetChecksum() string { return v.Checksum }

// Defines what a certificate is trusted for
type TrustedForType string

const (
	// Is trusted as an SSL server cert
	TrustedForTypeSsl TrustedForType = "SSL"
	// Is trusted as a CA that signs SSL server certs
	TrustedForTypeSigningServerCerts TrustedForType = "SIGNING_SERVER_CERTS"
	// Is trusted as a CA that signs SSL client certs
	TrustedForTypeSigningClientCerts TrustedForType = "SIGNING_CLIENT_CERTS"
	// Is trusted to sign SAML tokens
	TrustedForTypeSamlIssuer TrustedForType = "SAML_ISSUER"
	// Is trusted as a SAML attesting entity
	TrustedForTypeSamlAttestingEntity TrustedForType = "SAML_ATTESTING_ENTITY"
)

type UserMappingInput struct {
	ObjClass                   string               `json:"objClass"`
	NameAttrName               string               `json:"nameAttrName"`
	LoginAttrName              string               `json:"loginAttrName"`
	PasswdAttrName             string               `json:"passwdAttrName"`
	FirstNameAttrName          string               `json:"firstNameAttrName"`
	LastNameAttrName           string               `json:"lastNameAttrName"`
	EmailNameAttrName          string               `json:"emailNameAttrName"`
	KerberosAttrName           string               `json:"kerberosAttrName"`
	KerberosEnterpriseAttrName string               `json:"kerberosEnterpriseAttrName"`
	UserCertAttrName           string               `json:"userCertAttrName"`
	PasswdType                 *PasswdStrategyInput `json:"passwdType,omitempty"`
}

// GetObjClass returns UserMappingInput.ObjClass, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetObjClass() string { return v.ObjClass }

// GetNameAttrName returns UserMappingInput.NameAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetNameAttrName() string { return v.NameAttrName }

// GetLoginAttrName returns UserMappingInput.LoginAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetLoginAttrName() string { return v.LoginAttrName }

// GetPasswdAttrName returns UserMappingInput.PasswdAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetPasswdAttrName() string { return v.PasswdAttrName }

// GetFirstNameAttrName returns UserMappingInput.FirstNameAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetFirstNameAttrName() string { return v.FirstNameAttrName }

// GetLastNameAttrName returns UserMappingInput.LastNameAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetLastNameAttrName() string { return v.LastNameAttrName }

// GetEmailNameAttrName returns UserMappingInput.EmailNameAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetEmailNameAttrName() string { return v.EmailNameAttrName }

// GetKerberosAttrName returns UserMappingInput.KerberosAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetKerberosAttrName() string { return v.KerberosAttrName }

// GetKerberosEnterpriseAttrName returns UserMappingInput.KerberosEnterpriseAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetKerberosEnterpriseAttrName() string {
	return v.KerberosEnterpriseAttrName
}

// GetUserCertAttrName returns UserMappingInput.UserCertAttrName, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetUserCertAttrName() string { return v.UserCertAttrName }

// GetPasswdType returns UserMappingInput.PasswdType, and is useful for accessing the field via an interface.
func (v *UserMappingInput) GetPasswdType() *PasswdStrategyInput { return v.PasswdType }

type WebApiServiceInput struct {
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// The guid for this service, if none provided, assigned at creation
	Guid string `json:"guid"`
	// The folder path where to create this service.  If the path does not exist, it will be created
	FolderPath string `json:"folderPath"`
	// The name of the service
	Name string `json:"name"`
	// The resolution path of the service
	ResolutionPath string `json:"resolutionPath"`
	// The policy
	Policy *PolicyInput `json:"policy,omitempty"`
	// Whether the service is enabled (optional, default to true)
	Enabled bool `json:"enabled"`
	// The http methods allowed for this service
	MethodsAllowed       []HttpMethod           `json:"methodsAllowed"`
	TracingEnabled       bool                   `json:"tracingEnabled"`
	WssProcessingEnabled bool                   `json:"wssProcessingEnabled"`
	Properties           []*EntityPropertyInput `json:"properties,omitempty"`
	// Ignored at creation time but can be used to compare bundle with gw state
	Checksum string `json:"checksum"`
}

// GetGoid returns WebApiServiceInput.Goid, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetGoid() string { return v.Goid }

// GetGuid returns WebApiServiceInput.Guid, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetGuid() string { return v.Guid }

// GetFolderPath returns WebApiServiceInput.FolderPath, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetFolderPath() string { return v.FolderPath }

// GetName returns WebApiServiceInput.Name, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetName() string { return v.Name }

// GetResolutionPath returns WebApiServiceInput.ResolutionPath, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetResolutionPath() string { return v.ResolutionPath }

// GetPolicy returns WebApiServiceInput.Policy, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetPolicy() *PolicyInput { return v.Policy }

// GetEnabled returns WebApiServiceInput.Enabled, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetEnabled() bool { return v.Enabled }

// GetMethodsAllowed returns WebApiServiceInput.MethodsAllowed, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetMethodsAllowed() []HttpMethod { return v.MethodsAllowed }

// GetTracingEnabled returns WebApiServiceInput.TracingEnabled, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetTracingEnabled() bool { return v.TracingEnabled }

// GetWssProcessingEnabled returns WebApiServiceInput.WssProcessingEnabled, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetWssProcessingEnabled() bool { return v.WssProcessingEnabled }

// GetProperties returns WebApiServiceInput.Properties, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetProperties() []*EntityPropertyInput { return v.Properties }

// GetChecksum returns WebApiServiceInput.Checksum, and is useful for accessing the field via an interface.
func (v *WebApiServiceInput) GetChecksum() string { return v.Checksum }

// __applyBundleInput is used internally by genqlient
type __applyBundleInput struct {
	ActiveConnectors                    []*ActiveConnectorInput                   `json:"activeConnectors,omitempty"`
	AdministrativeUserAccountProperties []*AdministrativeUserAccountPropertyInput `json:"administrativeUserAccountProperties,omitempty"`
	BackgroundTaskPolicies              []*BackgroundTaskPolicyInput              `json:"backgroundTaskPolicies,omitempty"`
	CassandraConnections                []*CassandraConnectionInput               `json:"cassandraConnections,omitempty"`
	ClusterProperties                   []*ClusterPropertyInput                   `json:"clusterProperties,omitempty"`
	Dtds                                []*DtdInput                               `json:"dtds,omitempty"`
	EmailListeners                      []*EmailListenerInput                     `json:"emailListeners,omitempty"`
	EncassConfigs                       []*EncassConfigInput                      `json:"encassConfigs,omitempty"`
	FipGroups                           []*FipGroupInput                          `json:"fipGroups,omitempty"`
	FipUsers                            []*FipUserInput                           `json:"fipUsers,omitempty"`
	Fips                                []*FipInput                               `json:"fips,omitempty"`
	GlobalPolicies                      []*GlobalPolicyInput                      `json:"globalPolicies,omitempty"`
	InternalGroups                      []*InternalGroupInput                     `json:"internalGroups,omitempty"`
	InternalSoapServices                []*SoapServiceInput                       `json:"internalSoapServices,omitempty"`
	InternalUsers                       []*InternalUserInput                      `json:"internalUsers,omitempty"`
	InternalWebApiServices              []*WebApiServiceInput                     `json:"internalWebApiServices,omitempty"`
	JdbcConnections                     []*JdbcConnectionInput                    `json:"jdbcConnections,omitempty"`
	JmsDestinations                     []*JmsDestinationInput                    `json:"jmsDestinations,omitempty"`
	Keys                                []*KeyInput                               `json:"keys,omitempty"`
	Ldaps                               []*LdapInput                              `json:"ldaps,omitempty"`
	ListenPorts                         []*ListenPortInput                        `json:"listenPorts,omitempty"`
	PasswordPolicies                    []*PasswordPolicyInput                    `json:"passwordPolicies,omitempty"`
	PolicyFragments                     []*PolicyFragmentInput                    `json:"policyFragments,omitempty"`
	RevocationCheckPolicies             []*RevocationCheckPolicyInput             `json:"revocationCheckPolicies,omitempty"`
	ScheduledTasks                      []*ScheduledTaskInput                     `json:"scheduledTasks,omitempty"`
	LogSinks                            []*LogSinkInput                           `json:"logSinks,omitempty"`
	Schemas                             []*SchemaInput                            `json:"schemas,omitempty"`
	Secrets                             []*SecretInput                            `json:"secrets,omitempty"`
	HttpConfigurations                  []*HttpConfigurationInput                 `json:"httpConfigurations,omitempty"`
	CustomKeyValues                     []*CustomKeyValueInput                    `json:"customKeyValues,omitempty"`
	ServerModuleFiles                   []*ServerModuleFileInput                  `json:"serverModuleFiles,omitempty"`
	ServiceResolutionConfigs            []*ServiceResolutionConfigInput           `json:"serviceResolutionConfigs,omitempty"`
	Folders                             []*FolderInput                            `json:"folders,omitempty"`
	SmConfigs                           []*SMConfigInput                          `json:"smConfigs,omitempty"`
	SoapServices                        []*SoapServiceInput                       `json:"soapServices,omitempty"`
	TrustedCerts                        []*TrustedCertInput                       `json:"trustedCerts,omitempty"`
	WebApiServices                      []*WebApiServiceInput                     `json:"webApiServices,omitempty"`
}

// GetActiveConnectors returns __applyBundleInput.ActiveConnectors, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetActiveConnectors() []*ActiveConnectorInput { return v.ActiveConnectors }

// GetAdministrativeUserAccountProperties returns __applyBundleInput.AdministrativeUserAccountProperties, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetAdministrativeUserAccountProperties() []*AdministrativeUserAccountPropertyInput {
	return v.AdministrativeUserAccountProperties
}

// GetBackgroundTaskPolicies returns __applyBundleInput.BackgroundTaskPolicies, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetBackgroundTaskPolicies() []*BackgroundTaskPolicyInput {
	return v.BackgroundTaskPolicies
}

// GetCassandraConnections returns __applyBundleInput.CassandraConnections, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetCassandraConnections() []*CassandraConnectionInput {
	return v.CassandraConnections
}

// GetClusterProperties returns __applyBundleInput.ClusterProperties, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetClusterProperties() []*ClusterPropertyInput {
	return v.ClusterProperties
}

// GetDtds returns __applyBundleInput.Dtds, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetDtds() []*DtdInput { return v.Dtds }

// GetEmailListeners returns __applyBundleInput.EmailListeners, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetEmailListeners() []*EmailListenerInput { return v.EmailListeners }

// GetEncassConfigs returns __applyBundleInput.EncassConfigs, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetEncassConfigs() []*EncassConfigInput { return v.EncassConfigs }

// GetFipGroups returns __applyBundleInput.FipGroups, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetFipGroups() []*FipGroupInput { return v.FipGroups }

// GetFipUsers returns __applyBundleInput.FipUsers, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetFipUsers() []*FipUserInput { return v.FipUsers }

// GetFips returns __applyBundleInput.Fips, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetFips() []*FipInput { return v.Fips }

// GetGlobalPolicies returns __applyBundleInput.GlobalPolicies, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetGlobalPolicies() []*GlobalPolicyInput { return v.GlobalPolicies }

// GetInternalGroups returns __applyBundleInput.InternalGroups, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetInternalGroups() []*InternalGroupInput { return v.InternalGroups }

// GetInternalSoapServices returns __applyBundleInput.InternalSoapServices, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetInternalSoapServices() []*SoapServiceInput {
	return v.InternalSoapServices
}

// GetInternalUsers returns __applyBundleInput.InternalUsers, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetInternalUsers() []*InternalUserInput { return v.InternalUsers }

// GetInternalWebApiServices returns __applyBundleInput.InternalWebApiServices, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetInternalWebApiServices() []*WebApiServiceInput {
	return v.InternalWebApiServices
}

// GetJdbcConnections returns __applyBundleInput.JdbcConnections, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetJdbcConnections() []*JdbcConnectionInput { return v.JdbcConnections }

// GetJmsDestinations returns __applyBundleInput.JmsDestinations, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetJmsDestinations() []*JmsDestinationInput { return v.JmsDestinations }

// GetKeys returns __applyBundleInput.Keys, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetKeys() []*KeyInput { return v.Keys }

// GetLdaps returns __applyBundleInput.Ldaps, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetLdaps() []*LdapInput { return v.Ldaps }

// GetListenPorts returns __applyBundleInput.ListenPorts, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetListenPorts() []*ListenPortInput { return v.ListenPorts }

// GetPasswordPolicies returns __applyBundleInput.PasswordPolicies, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetPasswordPolicies() []*PasswordPolicyInput { return v.PasswordPolicies }

// GetPolicyFragments returns __applyBundleInput.PolicyFragments, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetPolicyFragments() []*PolicyFragmentInput { return v.PolicyFragments }

// GetRevocationCheckPolicies returns __applyBundleInput.RevocationCheckPolicies, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetRevocationCheckPolicies() []*RevocationCheckPolicyInput {
	return v.RevocationCheckPolicies
}

// GetScheduledTasks returns __applyBundleInput.ScheduledTasks, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetScheduledTasks() []*ScheduledTaskInput { return v.ScheduledTasks }

// GetLogSinks returns __applyBundleInput.LogSinks, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetLogSinks() []*LogSinkInput { return v.LogSinks }

// GetSchemas returns __applyBundleInput.Schemas, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetSchemas() []*SchemaInput { return v.Schemas }

// GetSecrets returns __applyBundleInput.Secrets, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetSecrets() []*SecretInput { return v.Secrets }

// GetHttpConfigurations returns __applyBundleInput.HttpConfigurations, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetHttpConfigurations() []*HttpConfigurationInput {
	return v.HttpConfigurations
}

// GetCustomKeyValues returns __applyBundleInput.CustomKeyValues, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetCustomKeyValues() []*CustomKeyValueInput { return v.CustomKeyValues }

// GetServerModuleFiles returns __applyBundleInput.ServerModuleFiles, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetServerModuleFiles() []*ServerModuleFileInput {
	return v.ServerModuleFiles
}

// GetServiceResolutionConfigs returns __applyBundleInput.ServiceResolutionConfigs, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetServiceResolutionConfigs() []*ServiceResolutionConfigInput {
	return v.ServiceResolutionConfigs
}

// GetFolders returns __applyBundleInput.Folders, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetFolders() []*FolderInput { return v.Folders }

// GetSmConfigs returns __applyBundleInput.SmConfigs, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetSmConfigs() []*SMConfigInput { return v.SmConfigs }

// GetSoapServices returns __applyBundleInput.SoapServices, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetSoapServices() []*SoapServiceInput { return v.SoapServices }

// GetTrustedCerts returns __applyBundleInput.TrustedCerts, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetTrustedCerts() []*TrustedCertInput { return v.TrustedCerts }

// GetWebApiServices returns __applyBundleInput.WebApiServices, and is useful for accessing the field via an interface.
func (v *__applyBundleInput) GetWebApiServices() []*WebApiServiceInput { return v.WebApiServices }

// __deleteL7PortalApiInput is used internally by genqlient
type __deleteL7PortalApiInput struct {
	WebApiServiceResolutionPaths []string `json:"webApiServiceResolutionPaths"`
	PolicyFragmentNames          []string `json:"policyFragmentNames"`
}

// GetWebApiServiceResolutionPaths returns __deleteL7PortalApiInput.WebApiServiceResolutionPaths, and is useful for accessing the field via an interface.
func (v *__deleteL7PortalApiInput) GetWebApiServiceResolutionPaths() []string {
	return v.WebApiServiceResolutionPaths
}

// GetPolicyFragmentNames returns __deleteL7PortalApiInput.PolicyFragmentNames, and is useful for accessing the field via an interface.
func (v *__deleteL7PortalApiInput) GetPolicyFragmentNames() []string { return v.PolicyFragmentNames }

// applyBundleResponse is returned by applyBundle on success.
type applyBundleResponse struct {
	// Sets Server module files. Updating the existing server module file is unsupported.
	SetServerModuleFiles *applyBundleSetServerModuleFilesServerModuleFilesPayload `json:"setServerModuleFiles"`
	// Create or update existing cluster properties.  If a cluster property with the given name does not
	// exist, one will be created, otherwise the existing one will be updated. This returns the list of
	// entities created and/or updated
	SetClusterProperties *applyBundleSetClusterPropertiesClusterPropertiesPayload `json:"setClusterProperties"`
	// Update Service Resolution Configs
	SetServiceResolutionConfigs *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoad `json:"setServiceResolutionConfigs"`
	// Set/Update the Password Policies
	SetPasswordPolicies *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoad `json:"setPasswordPolicies"`
	// Create or update existing Administrative User Account Minimum cluster properties.
	// If Administrative User Account Minimum cluster property with the given name
	// does not exist, one will be created, otherwise the existing one will be updated.
	// This returns the list of entities created and/or updated.
	// Below are the allowed Administrative User Account Minimum properties
	// logonMaxAllowableAttempts : Logon attempts must be between 1 and 20
	// logonLockoutTime : Lockout period must be between 1 and 86400 seconds
	// logonSessionExpiry : Expiry period must be between 1 and 86400 seconds
	// logonInactivityPeriod : Inactivity period must be between 1 and 365 days
	SetAdministrativeUserAccountProperties *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayload `json:"setAdministrativeUserAccountProperties"`
	// Set the Folders
	SetFolders *applyBundleSetFoldersFoldersPayload `json:"setFolders"`
	// Create or update existing revocation check policies.
	// Match is carried by name. If match is found, it will be updated. Otherwise, it will be created.
	SetRevocationCheckPolicies *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayload `json:"setRevocationCheckPolicies"`
	// Create or update trusted certificates.
	// If a certificate with the same sha1 thumbprint already exist, it will be updated.
	SetTrustedCerts *applyBundleSetTrustedCertsTrustedCertsPayload `json:"setTrustedCerts"`
	// Creates or updates one or more secrets
	SetSecrets *applyBundleSetSecretsSecretsPayload `json:"setSecrets"`
	// Create or update existing http configuration.
	SetHttpConfigurations *applyBundleSetHttpConfigurationsHttpConfigurationsPayload `json:"setHttpConfigurations"`
	// Create or update existing custom key values data.  If a custom key value with the given key does not
	// exist, one will be created, otherwise the existing one will be updated. This returns the list of
	// entities created and/or updated
	SetCustomKeyValues *applyBundleSetCustomKeyValuesCustomKeyValuePayload `json:"setCustomKeyValues"`
	// Create or Update multiple XML schemas
	SetSchemas *applyBundleSetSchemasSchemasPayload `json:"setSchemas"`
	// Create or Update multiple DTD resources
	SetDtds *applyBundleSetDtdsDtdsPayload `json:"setDtds"`
	// Create or update JDBC connections.
	// If JDBC connection with the same name exist, the JDBC connection will be updated.
	// If no JDBC connection with the name exist, a new JDBC connection will be created.
	SetJdbcConnections *applyBundleSetJdbcConnectionsJdbcConnectionsPayload `json:"setJdbcConnections"`
	// Creates or updates one or more fips
	SetFips *applyBundleSetFipsFipsPayload `json:"setFips"`
	// Creates or updates one or more ldaps
	SetLdaps *applyBundleSetLdapsLdapsPayload `json:"setLdaps"`
	// Creates or updates one or more fip groups
	SetFipGroups *applyBundleSetFipGroupsFipGroupsPayload `json:"setFipGroups"`
	// Creates or updates one or more internal groups
	SetInternalGroups *applyBundleSetInternalGroupsInternalGroupsPayload `json:"setInternalGroups"`
	// Creates or updates one or more fip users.
	// NOTE: Existing user will be found by either login or subjectDn or name.
	SetFipUsers *applyBundleSetFipUsersFipUsersPayload `json:"setFipUsers"`
	// Creates or updates one or more internal users
	SetInternalUsers *applyBundleSetInternalUsersInternalUsersPayload `json:"setInternalUsers"`
	// Create or update Cassandra connections.
	// If Cassandra connection with the same name exist, the Cassandra connection will be updated.
	// If no Cassandra connection with the name exist, a new Cassandra connection will be created.
	SetCassandraConnections *applyBundleSetCassandraConnectionsCassandraConnectionsPayload `json:"setCassandraConnections"`
	// Create or update JMS destinations.
	// If JMS destination exists, the JMS destination will be updated.
	// If no JMS destination with given name, direction, providerType exist, a new JMS destination will be created.
	SetJmsDestinations *applyBundleSetJmsDestinationsJmsDestinationsPayload `json:"setJmsDestinations"`
	// Create or update existing siteminder configurations.
	// Match is carried by name. If match is found, it will be updated. Otherwise, it will be created
	SetSMConfigs *applyBundleSetSMConfigsSMConfigsPayload `json:"setSMConfigs"`
	// Create or update policy fragments
	SetPolicyFragments *applyBundleSetPolicyFragmentsPolicyFragmentsPayload `json:"setPolicyFragments"`
	// Create or update Encapsulated Assertion Configurations
	SetEncassConfigs *applyBundleSetEncassConfigsEncassConfigsPayload `json:"setEncassConfigs"`
	// Create or update global policies
	SetGlobalPolicies *applyBundleSetGlobalPoliciesGlobalPoliciesPayload `json:"setGlobalPolicies"`
	// Creates or updates one or more background task policies
	SetBackgroundTaskPolicies *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayload `json:"setBackgroundTaskPolicies"`
	// Create or update web api services
	SetWebApiServices *applyBundleSetWebApiServicesWebApiServicesPayload `json:"setWebApiServices"`
	// Create or update soap services
	SetSoapServices *applyBundleSetSoapServicesSoapServicesPayload `json:"setSoapServices"`
	// Create or update Internal web api services
	SetInternalWebApiServices *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayload `json:"setInternalWebApiServices"`
	// Create or update Internal soap services
	SetInternalSoapServices *applyBundleSetInternalSoapServicesInternalSoapServicesPayload `json:"setInternalSoapServices"`
	// Create or update existing email listeners.
	// Match is carried by name. If match is found, it will be updated. Otherwise, it will be created.
	SetEmailListeners *applyBundleSetEmailListenersEmailListenersPayload `json:"setEmailListeners"`
	// Create or update Listen Ports.
	// If Listen Port with the same name exist, the Listen Port will be updated.
	// If no Listen Port with the name exist, a new Listen Port will be created.
	SetListenPorts *applyBundleSetListenPortsListenPortsPayload `json:"setListenPorts"`
	// Create or update existing active connector.
	// Match is carried by name. If match is found, it will be updated. Otherwise, it will be created.
	SetActiveConnectors *applyBundleSetActiveConnectorsActiveConnectorsPayload `json:"setActiveConnectors"`
	// Creates or updates one or more scheduled tasks
	SetScheduledTasks *applyBundleSetScheduledTasksScheduledTasksPayload `json:"setScheduledTasks"`
	// Create or update Log Sinks.
	// If Log Sink with the same name exist, the Log Sink will be updated.
	// If no Log Sink with the name exist, a new Log Sink will be created.
	SetLogSinks *applyBundleSetLogSinksLogSinksPayload `json:"setLogSinks"`
	// Creates or updates one or more keys
	SetKeys *applyBundleSetKeysKeysPayload `json:"setKeys"`
}

// GetSetServerModuleFiles returns applyBundleResponse.SetServerModuleFiles, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetServerModuleFiles() *applyBundleSetServerModuleFilesServerModuleFilesPayload {
	return v.SetServerModuleFiles
}

// GetSetClusterProperties returns applyBundleResponse.SetClusterProperties, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetClusterProperties() *applyBundleSetClusterPropertiesClusterPropertiesPayload {
	return v.SetClusterProperties
}

// GetSetServiceResolutionConfigs returns applyBundleResponse.SetServiceResolutionConfigs, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetServiceResolutionConfigs() *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoad {
	return v.SetServiceResolutionConfigs
}

// GetSetPasswordPolicies returns applyBundleResponse.SetPasswordPolicies, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetPasswordPolicies() *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoad {
	return v.SetPasswordPolicies
}

// GetSetAdministrativeUserAccountProperties returns applyBundleResponse.SetAdministrativeUserAccountProperties, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetAdministrativeUserAccountProperties() *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayload {
	return v.SetAdministrativeUserAccountProperties
}

// GetSetFolders returns applyBundleResponse.SetFolders, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetFolders() *applyBundleSetFoldersFoldersPayload {
	return v.SetFolders
}

// GetSetRevocationCheckPolicies returns applyBundleResponse.SetRevocationCheckPolicies, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetRevocationCheckPolicies() *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayload {
	return v.SetRevocationCheckPolicies
}

// GetSetTrustedCerts returns applyBundleResponse.SetTrustedCerts, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetTrustedCerts() *applyBundleSetTrustedCertsTrustedCertsPayload {
	return v.SetTrustedCerts
}

// GetSetSecrets returns applyBundleResponse.SetSecrets, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetSecrets() *applyBundleSetSecretsSecretsPayload {
	return v.SetSecrets
}

// GetSetHttpConfigurations returns applyBundleResponse.SetHttpConfigurations, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetHttpConfigurations() *applyBundleSetHttpConfigurationsHttpConfigurationsPayload {
	return v.SetHttpConfigurations
}

// GetSetCustomKeyValues returns applyBundleResponse.SetCustomKeyValues, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetCustomKeyValues() *applyBundleSetCustomKeyValuesCustomKeyValuePayload {
	return v.SetCustomKeyValues
}

// GetSetSchemas returns applyBundleResponse.SetSchemas, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetSchemas() *applyBundleSetSchemasSchemasPayload {
	return v.SetSchemas
}

// GetSetDtds returns applyBundleResponse.SetDtds, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetDtds() *applyBundleSetDtdsDtdsPayload { return v.SetDtds }

// GetSetJdbcConnections returns applyBundleResponse.SetJdbcConnections, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetJdbcConnections() *applyBundleSetJdbcConnectionsJdbcConnectionsPayload {
	return v.SetJdbcConnections
}

// GetSetFips returns applyBundleResponse.SetFips, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetFips() *applyBundleSetFipsFipsPayload { return v.SetFips }

// GetSetLdaps returns applyBundleResponse.SetLdaps, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetLdaps() *applyBundleSetLdapsLdapsPayload { return v.SetLdaps }

// GetSetFipGroups returns applyBundleResponse.SetFipGroups, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetFipGroups() *applyBundleSetFipGroupsFipGroupsPayload {
	return v.SetFipGroups
}

// GetSetInternalGroups returns applyBundleResponse.SetInternalGroups, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetInternalGroups() *applyBundleSetInternalGroupsInternalGroupsPayload {
	return v.SetInternalGroups
}

// GetSetFipUsers returns applyBundleResponse.SetFipUsers, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetFipUsers() *applyBundleSetFipUsersFipUsersPayload {
	return v.SetFipUsers
}

// GetSetInternalUsers returns applyBundleResponse.SetInternalUsers, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetInternalUsers() *applyBundleSetInternalUsersInternalUsersPayload {
	return v.SetInternalUsers
}

// GetSetCassandraConnections returns applyBundleResponse.SetCassandraConnections, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetCassandraConnections() *applyBundleSetCassandraConnectionsCassandraConnectionsPayload {
	return v.SetCassandraConnections
}

// GetSetJmsDestinations returns applyBundleResponse.SetJmsDestinations, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetJmsDestinations() *applyBundleSetJmsDestinationsJmsDestinationsPayload {
	return v.SetJmsDestinations
}

// GetSetSMConfigs returns applyBundleResponse.SetSMConfigs, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetSMConfigs() *applyBundleSetSMConfigsSMConfigsPayload {
	return v.SetSMConfigs
}

// GetSetPolicyFragments returns applyBundleResponse.SetPolicyFragments, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetPolicyFragments() *applyBundleSetPolicyFragmentsPolicyFragmentsPayload {
	return v.SetPolicyFragments
}

// GetSetEncassConfigs returns applyBundleResponse.SetEncassConfigs, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetEncassConfigs() *applyBundleSetEncassConfigsEncassConfigsPayload {
	return v.SetEncassConfigs
}

// GetSetGlobalPolicies returns applyBundleResponse.SetGlobalPolicies, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetGlobalPolicies() *applyBundleSetGlobalPoliciesGlobalPoliciesPayload {
	return v.SetGlobalPolicies
}

// GetSetBackgroundTaskPolicies returns applyBundleResponse.SetBackgroundTaskPolicies, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetBackgroundTaskPolicies() *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayload {
	return v.SetBackgroundTaskPolicies
}

// GetSetWebApiServices returns applyBundleResponse.SetWebApiServices, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetWebApiServices() *applyBundleSetWebApiServicesWebApiServicesPayload {
	return v.SetWebApiServices
}

// GetSetSoapServices returns applyBundleResponse.SetSoapServices, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetSoapServices() *applyBundleSetSoapServicesSoapServicesPayload {
	return v.SetSoapServices
}

// GetSetInternalWebApiServices returns applyBundleResponse.SetInternalWebApiServices, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetInternalWebApiServices() *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayload {
	return v.SetInternalWebApiServices
}

// GetSetInternalSoapServices returns applyBundleResponse.SetInternalSoapServices, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetInternalSoapServices() *applyBundleSetInternalSoapServicesInternalSoapServicesPayload {
	return v.SetInternalSoapServices
}

// GetSetEmailListeners returns applyBundleResponse.SetEmailListeners, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetEmailListeners() *applyBundleSetEmailListenersEmailListenersPayload {
	return v.SetEmailListeners
}

// GetSetListenPorts returns applyBundleResponse.SetListenPorts, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetListenPorts() *applyBundleSetListenPortsListenPortsPayload {
	return v.SetListenPorts
}

// GetSetActiveConnectors returns applyBundleResponse.SetActiveConnectors, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetActiveConnectors() *applyBundleSetActiveConnectorsActiveConnectorsPayload {
	return v.SetActiveConnectors
}

// GetSetScheduledTasks returns applyBundleResponse.SetScheduledTasks, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetScheduledTasks() *applyBundleSetScheduledTasksScheduledTasksPayload {
	return v.SetScheduledTasks
}

// GetSetLogSinks returns applyBundleResponse.SetLogSinks, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetLogSinks() *applyBundleSetLogSinksLogSinksPayload {
	return v.SetLogSinks
}

// GetSetKeys returns applyBundleResponse.SetKeys, and is useful for accessing the field via an interface.
func (v *applyBundleResponse) GetSetKeys() *applyBundleSetKeysKeysPayload { return v.SetKeys }

// applyBundleSetActiveConnectorsActiveConnectorsPayload includes the requested fields of the GraphQL type ActiveConnectorsPayload.
type applyBundleSetActiveConnectorsActiveConnectorsPayload struct {
	DetailedStatus []*applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetActiveConnectorsActiveConnectorsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayload) GetDetailedStatus() []*applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                `json:"action"`
	Status      EntityMutationStatus                                                                                                `json:"status"`
	Description string                                                                                                              `json:"description"`
	Source      []*applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetActiveConnectorsActiveConnectorsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayload includes the requested fields of the GraphQL type AdministrativeUserAccountPropertiesPayload.
type applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayload struct {
	DetailedStatus []*applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayload) GetDetailedStatus() []*applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                                                      `json:"action"`
	Status      EntityMutationStatus                                                                                                                                      `json:"status"`
	Description string                                                                                                                                                    `json:"description"`
	Source      []*applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetAdministrativeUserAccountPropertiesAdministrativeUserAccountPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayload includes the requested fields of the GraphQL type BackgroundTaskPoliciesPayload.
type applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayload struct {
	DetailedStatus []*applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayload) GetDetailedStatus() []*applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                            `json:"action"`
	Status      EntityMutationStatus                                                                                                            `json:"status"`
	Description string                                                                                                                          `json:"description"`
	Source      []*applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetBackgroundTaskPoliciesBackgroundTaskPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetCassandraConnectionsCassandraConnectionsPayload includes the requested fields of the GraphQL type CassandraConnectionsPayload.
type applyBundleSetCassandraConnectionsCassandraConnectionsPayload struct {
	DetailedStatus []*applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetCassandraConnectionsCassandraConnectionsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayload) GetDetailedStatus() []*applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                        `json:"action"`
	Status      EntityMutationStatus                                                                                                        `json:"status"`
	Description string                                                                                                                      `json:"description"`
	Source      []*applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetCassandraConnectionsCassandraConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetClusterPropertiesClusterPropertiesPayload includes the requested fields of the GraphQL type ClusterPropertiesPayload.
type applyBundleSetClusterPropertiesClusterPropertiesPayload struct {
	DetailedStatus []*applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetClusterPropertiesClusterPropertiesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayload) GetDetailedStatus() []*applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                  `json:"action"`
	Status      EntityMutationStatus                                                                                                  `json:"status"`
	Description string                                                                                                                `json:"description"`
	Source      []*applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetClusterPropertiesClusterPropertiesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetCustomKeyValuesCustomKeyValuePayload includes the requested fields of the GraphQL type CustomKeyValuePayload.
type applyBundleSetCustomKeyValuesCustomKeyValuePayload struct {
	DetailedStatus []*applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetCustomKeyValuesCustomKeyValuePayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayload) GetDetailedStatus() []*applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                             `json:"action"`
	Status      EntityMutationStatus                                                                                             `json:"status"`
	Description string                                                                                                           `json:"description"`
	Source      []*applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetCustomKeyValuesCustomKeyValuePayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetDtdsDtdsPayload includes the requested fields of the GraphQL type DtdsPayload.
type applyBundleSetDtdsDtdsPayload struct {
	DetailedStatus []*applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetDtdsDtdsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayload) GetDetailedStatus() []*applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                        `json:"action"`
	Status      EntityMutationStatus                                                                        `json:"status"`
	Description string                                                                                      `json:"description"`
	Source      []*applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetDtdsDtdsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetEmailListenersEmailListenersPayload includes the requested fields of the GraphQL type EmailListenersPayload.
type applyBundleSetEmailListenersEmailListenersPayload struct {
	DetailedStatus []*applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetEmailListenersEmailListenersPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayload) GetDetailedStatus() []*applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                            `json:"action"`
	Status      EntityMutationStatus                                                                                            `json:"status"`
	Description string                                                                                                          `json:"description"`
	Source      []*applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetEmailListenersEmailListenersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetEncassConfigsEncassConfigsPayload includes the requested fields of the GraphQL type EncassConfigsPayload.
type applyBundleSetEncassConfigsEncassConfigsPayload struct {
	DetailedStatus []*applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetEncassConfigsEncassConfigsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayload) GetDetailedStatus() []*applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                          `json:"action"`
	Status      EntityMutationStatus                                                                                          `json:"status"`
	Description string                                                                                                        `json:"description"`
	Source      []*applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetEncassConfigsEncassConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetFipGroupsFipGroupsPayload includes the requested fields of the GraphQL type FipGroupsPayload.
type applyBundleSetFipGroupsFipGroupsPayload struct {
	DetailedStatus []*applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetFipGroupsFipGroupsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayload) GetDetailedStatus() []*applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                  `json:"action"`
	Status      EntityMutationStatus                                                                                  `json:"status"`
	Description string                                                                                                `json:"description"`
	Source      []*applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipGroupsFipGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetFipUsersFipUsersPayload includes the requested fields of the GraphQL type FipUsersPayload.
type applyBundleSetFipUsersFipUsersPayload struct {
	DetailedStatus []*applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetFipUsersFipUsersPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayload) GetDetailedStatus() []*applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                `json:"action"`
	Status      EntityMutationStatus                                                                                `json:"status"`
	Description string                                                                                              `json:"description"`
	Source      []*applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipUsersFipUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetFipsFipsPayload includes the requested fields of the GraphQL type FipsPayload.
type applyBundleSetFipsFipsPayload struct {
	DetailedStatus []*applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetFipsFipsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayload) GetDetailedStatus() []*applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                        `json:"action"`
	Status      EntityMutationStatus                                                                        `json:"status"`
	Description string                                                                                      `json:"description"`
	Source      []*applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetFipsFipsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetFoldersFoldersPayload includes the requested fields of the GraphQL type FoldersPayload.
type applyBundleSetFoldersFoldersPayload struct {
	DetailedStatus []*applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetFoldersFoldersPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayload) GetDetailedStatus() []*applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                              `json:"action"`
	Status      EntityMutationStatus                                                                              `json:"status"`
	Description string                                                                                            `json:"description"`
	Source      []*applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetFoldersFoldersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetGlobalPoliciesGlobalPoliciesPayload includes the requested fields of the GraphQL type GlobalPoliciesPayload.
type applyBundleSetGlobalPoliciesGlobalPoliciesPayload struct {
	DetailedStatus []*applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetGlobalPoliciesGlobalPoliciesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayload) GetDetailedStatus() []*applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                            `json:"action"`
	Status      EntityMutationStatus                                                                                            `json:"status"`
	Description string                                                                                                          `json:"description"`
	Source      []*applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetGlobalPoliciesGlobalPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetHttpConfigurationsHttpConfigurationsPayload includes the requested fields of the GraphQL type HttpConfigurationsPayload.
type applyBundleSetHttpConfigurationsHttpConfigurationsPayload struct {
	DetailedStatus []*applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetHttpConfigurationsHttpConfigurationsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayload) GetDetailedStatus() []*applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                    `json:"action"`
	Status      EntityMutationStatus                                                                                                    `json:"status"`
	Description string                                                                                                                  `json:"description"`
	Source      []*applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetHttpConfigurationsHttpConfigurationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetInternalGroupsInternalGroupsPayload includes the requested fields of the GraphQL type InternalGroupsPayload.
type applyBundleSetInternalGroupsInternalGroupsPayload struct {
	DetailedStatus []*applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetInternalGroupsInternalGroupsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayload) GetDetailedStatus() []*applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                            `json:"action"`
	Status      EntityMutationStatus                                                                                            `json:"status"`
	Description string                                                                                                          `json:"description"`
	Source      []*applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalGroupsInternalGroupsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetInternalSoapServicesInternalSoapServicesPayload includes the requested fields of the GraphQL type InternalSoapServicesPayload.
type applyBundleSetInternalSoapServicesInternalSoapServicesPayload struct {
	DetailedStatus []*applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetInternalSoapServicesInternalSoapServicesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayload) GetDetailedStatus() []*applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                        `json:"action"`
	Status      EntityMutationStatus                                                                                                        `json:"status"`
	Description string                                                                                                                      `json:"description"`
	Source      []*applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalSoapServicesInternalSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetInternalUsersInternalUsersPayload includes the requested fields of the GraphQL type InternalUsersPayload.
type applyBundleSetInternalUsersInternalUsersPayload struct {
	DetailedStatus []*applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetInternalUsersInternalUsersPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayload) GetDetailedStatus() []*applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                          `json:"action"`
	Status      EntityMutationStatus                                                                                          `json:"status"`
	Description string                                                                                                        `json:"description"`
	Source      []*applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalUsersInternalUsersPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetInternalWebApiServicesInternalWebApiServicesPayload includes the requested fields of the GraphQL type InternalWebApiServicesPayload.
type applyBundleSetInternalWebApiServicesInternalWebApiServicesPayload struct {
	DetailedStatus []*applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayload) GetDetailedStatus() []*applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                            `json:"action"`
	Status      EntityMutationStatus                                                                                                            `json:"status"`
	Description string                                                                                                                          `json:"description"`
	Source      []*applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetInternalWebApiServicesInternalWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetJdbcConnectionsJdbcConnectionsPayload includes the requested fields of the GraphQL type JdbcConnectionsPayload.
type applyBundleSetJdbcConnectionsJdbcConnectionsPayload struct {
	DetailedStatus []*applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetJdbcConnectionsJdbcConnectionsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayload) GetDetailedStatus() []*applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                              `json:"action"`
	Status      EntityMutationStatus                                                                                              `json:"status"`
	Description string                                                                                                            `json:"description"`
	Source      []*applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetJdbcConnectionsJdbcConnectionsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetJmsDestinationsJmsDestinationsPayload includes the requested fields of the GraphQL type JmsDestinationsPayload.
type applyBundleSetJmsDestinationsJmsDestinationsPayload struct {
	DetailedStatus []*applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetJmsDestinationsJmsDestinationsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayload) GetDetailedStatus() []*applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                              `json:"action"`
	Status      EntityMutationStatus                                                                                              `json:"status"`
	Description string                                                                                                            `json:"description"`
	Source      []*applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetJmsDestinationsJmsDestinationsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetKeysKeysPayload includes the requested fields of the GraphQL type KeysPayload.
type applyBundleSetKeysKeysPayload struct {
	DetailedStatus []*applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetKeysKeysPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayload) GetDetailedStatus() []*applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                        `json:"action"`
	Status      EntityMutationStatus                                                                        `json:"status"`
	Description string                                                                                      `json:"description"`
	Source      []*applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetKeysKeysPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetLdapsLdapsPayload includes the requested fields of the GraphQL type LdapsPayload.
type applyBundleSetLdapsLdapsPayload struct {
	DetailedStatus []*applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetLdapsLdapsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayload) GetDetailedStatus() []*applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                          `json:"action"`
	Status      EntityMutationStatus                                                                          `json:"status"`
	Description string                                                                                        `json:"description"`
	Source      []*applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetLdapsLdapsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetListenPortsListenPortsPayload includes the requested fields of the GraphQL type ListenPortsPayload.
type applyBundleSetListenPortsListenPortsPayload struct {
	DetailedStatus []*applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetListenPortsListenPortsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayload) GetDetailedStatus() []*applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                      `json:"action"`
	Status      EntityMutationStatus                                                                                      `json:"status"`
	Description string                                                                                                    `json:"description"`
	Source      []*applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetListenPortsListenPortsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetLogSinksLogSinksPayload includes the requested fields of the GraphQL type LogSinksPayload.
type applyBundleSetLogSinksLogSinksPayload struct {
	DetailedStatus []*applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetLogSinksLogSinksPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayload) GetDetailedStatus() []*applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                `json:"action"`
	Status      EntityMutationStatus                                                                                `json:"status"`
	Description string                                                                                              `json:"description"`
	Source      []*applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetLogSinksLogSinksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetPasswordPoliciesPasswordPoliciesPayLoad includes the requested fields of the GraphQL type PasswordPoliciesPayLoad.
type applyBundleSetPasswordPoliciesPasswordPoliciesPayLoad struct {
	DetailedStatus []*applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoad.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoad) GetDetailedStatus() []*applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                `json:"action"`
	Status      EntityMutationStatus                                                                                                `json:"status"`
	Description string                                                                                                              `json:"description"`
	Source      []*applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetPasswordPoliciesPasswordPoliciesPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetPolicyFragmentsPolicyFragmentsPayload includes the requested fields of the GraphQL type PolicyFragmentsPayload.
type applyBundleSetPolicyFragmentsPolicyFragmentsPayload struct {
	DetailedStatus []*applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetPolicyFragmentsPolicyFragmentsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayload) GetDetailedStatus() []*applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                              `json:"action"`
	Status      EntityMutationStatus                                                                                              `json:"status"`
	Description string                                                                                                            `json:"description"`
	Source      []*applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetPolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayload includes the requested fields of the GraphQL type RevocationCheckPoliciesPayload.
type applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayload struct {
	DetailedStatus []*applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayload) GetDetailedStatus() []*applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                              `json:"action"`
	Status      EntityMutationStatus                                                                                                              `json:"status"`
	Description string                                                                                                                            `json:"description"`
	Source      []*applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetRevocationCheckPoliciesRevocationCheckPoliciesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetSMConfigsSMConfigsPayload includes the requested fields of the GraphQL type SMConfigsPayload.
type applyBundleSetSMConfigsSMConfigsPayload struct {
	DetailedStatus []*applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetSMConfigsSMConfigsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayload) GetDetailedStatus() []*applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                  `json:"action"`
	Status      EntityMutationStatus                                                                                  `json:"status"`
	Description string                                                                                                `json:"description"`
	Source      []*applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetSMConfigsSMConfigsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetScheduledTasksScheduledTasksPayload includes the requested fields of the GraphQL type ScheduledTasksPayload.
type applyBundleSetScheduledTasksScheduledTasksPayload struct {
	DetailedStatus []*applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetScheduledTasksScheduledTasksPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayload) GetDetailedStatus() []*applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                            `json:"action"`
	Status      EntityMutationStatus                                                                                            `json:"status"`
	Description string                                                                                                          `json:"description"`
	Source      []*applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetScheduledTasksScheduledTasksPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetSchemasSchemasPayload includes the requested fields of the GraphQL type SchemasPayload.
type applyBundleSetSchemasSchemasPayload struct {
	DetailedStatus []*applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetSchemasSchemasPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayload) GetDetailedStatus() []*applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                              `json:"action"`
	Status      EntityMutationStatus                                                                              `json:"status"`
	Description string                                                                                            `json:"description"`
	Source      []*applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetSchemasSchemasPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetSecretsSecretsPayload includes the requested fields of the GraphQL type SecretsPayload.
type applyBundleSetSecretsSecretsPayload struct {
	DetailedStatus []*applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetSecretsSecretsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayload) GetDetailedStatus() []*applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                              `json:"action"`
	Status      EntityMutationStatus                                                                              `json:"status"`
	Description string                                                                                            `json:"description"`
	Source      []*applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetSecretsSecretsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetServerModuleFilesServerModuleFilesPayload includes the requested fields of the GraphQL type ServerModuleFilesPayload.
type applyBundleSetServerModuleFilesServerModuleFilesPayload struct {
	DetailedStatus []*applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetServerModuleFilesServerModuleFilesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayload) GetDetailedStatus() []*applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                  `json:"action"`
	Status      EntityMutationStatus                                                                                                  `json:"status"`
	Description string                                                                                                                `json:"description"`
	Source      []*applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetServerModuleFilesServerModuleFilesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoad includes the requested fields of the GraphQL type ServiceResolutionConfigsPayLoad.
type applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoad struct {
	DetailedStatus []*applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoad.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoad) GetDetailedStatus() []*applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                                                `json:"action"`
	Status      EntityMutationStatus                                                                                                                `json:"status"`
	Description string                                                                                                                              `json:"description"`
	Source      []*applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetServiceResolutionConfigsServiceResolutionConfigsPayLoadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetSoapServicesSoapServicesPayload includes the requested fields of the GraphQL type SoapServicesPayload.
type applyBundleSetSoapServicesSoapServicesPayload struct {
	DetailedStatus []*applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetSoapServicesSoapServicesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayload) GetDetailedStatus() []*applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                        `json:"action"`
	Status      EntityMutationStatus                                                                                        `json:"status"`
	Description string                                                                                                      `json:"description"`
	Source      []*applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetSoapServicesSoapServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetTrustedCertsTrustedCertsPayload includes the requested fields of the GraphQL type TrustedCertsPayload.
type applyBundleSetTrustedCertsTrustedCertsPayload struct {
	DetailedStatus []*applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetTrustedCertsTrustedCertsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayload) GetDetailedStatus() []*applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                        `json:"action"`
	Status      EntityMutationStatus                                                                                        `json:"status"`
	Description string                                                                                                      `json:"description"`
	Source      []*applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetTrustedCertsTrustedCertsPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetWebApiServicesWebApiServicesPayload includes the requested fields of the GraphQL type WebApiServicesPayload.
type applyBundleSetWebApiServicesWebApiServicesPayload struct {
	DetailedStatus []*applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns applyBundleSetWebApiServicesWebApiServicesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayload) GetDetailedStatus() []*applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Action      EntityMutationAction                                                                                            `json:"action"`
	Status      EntityMutationStatus                                                                                            `json:"status"`
	Description string                                                                                                          `json:"description"`
	Source      []*applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty `json:"source"`
	Target      []*applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty `json:"target"`
}

// GetAction returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Action, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetAction() EntityMutationAction {
	return v.Action
}

// GetStatus returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// GetSource returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Source, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetSource() []*applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty {
	return v.Source
}

// GetTarget returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Target, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetTarget() []*applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty {
	return v.Target
}

// applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusSourceAnyProperty) GetValue() interface{} {
	return v.Value
}

// applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty includes the requested fields of the GraphQL type AnyProperty.
type applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value interface{} `json:"value"`
}

// GetName returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Name, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetName() string {
	return v.Name
}

// GetValue returns applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty.Value, and is useful for accessing the field via an interface.
func (v *applyBundleSetWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatusTargetAnyProperty) GetValue() interface{} {
	return v.Value
}

// deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayload includes the requested fields of the GraphQL type PolicyFragmentsPayload.
type deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayload struct {
	DetailedStatus []*deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayload) GetDetailedStatus() []*deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Status      EntityMutationStatus `json:"status"`
	Description string               `json:"description"`
}

// GetStatus returns deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayload includes the requested fields of the GraphQL type WebApiServicesPayload.
type deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayload struct {
	DetailedStatus []*deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus `json:"detailedStatus"`
}

// GetDetailedStatus returns deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayload.DetailedStatus, and is useful for accessing the field via an interface.
func (v *deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayload) GetDetailedStatus() []*deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus {
	return v.DetailedStatus
}

// deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus includes the requested fields of the GraphQL type EntityMutationDetailedStatus.
type deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus struct {
	Status      EntityMutationStatus `json:"status"`
	Description string               `json:"description"`
}

// GetStatus returns deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Status, and is useful for accessing the field via an interface.
func (v *deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetStatus() EntityMutationStatus {
	return v.Status
}

// GetDescription returns deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus.Description, and is useful for accessing the field via an interface.
func (v *deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayloadDetailedStatusEntityMutationDetailedStatus) GetDescription() string {
	return v.Description
}

// deleteL7PortalApiResponse is returned by deleteL7PortalApi on success.
type deleteL7PortalApiResponse struct {
	// Delete existing web api services given their resolution paths
	DeleteWebApiServices *deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayload `json:"deleteWebApiServices"`
	// Delete policy fragments
	DeletePolicyFragments *deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayload `json:"deletePolicyFragments"`
}

// GetDeleteWebApiServices returns deleteL7PortalApiResponse.DeleteWebApiServices, and is useful for accessing the field via an interface.
func (v *deleteL7PortalApiResponse) GetDeleteWebApiServices() *deleteL7PortalApiDeleteWebApiServicesWebApiServicesPayload {
	return v.DeleteWebApiServices
}

// GetDeletePolicyFragments returns deleteL7PortalApiResponse.DeletePolicyFragments, and is useful for accessing the field via an interface.
func (v *deleteL7PortalApiResponse) GetDeletePolicyFragments() *deleteL7PortalApiDeletePolicyFragmentsPolicyFragmentsPayload {
	return v.DeletePolicyFragments
}

// everythingBackgroundTaskPoliciesBackgroundTaskPolicy includes the requested fields of the GraphQL type BackgroundTaskPolicy.
// The GraphQL type's documentation follows.
//
// A background task policy that is associated with a scheduled task to be run
type everythingBackgroundTaskPoliciesBackgroundTaskPolicy struct {
	// The name of the background task policy
	Name string `json:"name"`
	// The folder path of the background task policy
	FolderPath string `json:"folderPath"`
	// The internal entity unique identifier
	Guid string `json:"guid"`
	// The background task policy
	Policy *everythingBackgroundTaskPoliciesBackgroundTaskPolicyPolicy `json:"policy"`
	// The configuration checksum
	Checksum string `json:"checksum"`
}

// GetName returns everythingBackgroundTaskPoliciesBackgroundTaskPolicy.Name, and is useful for accessing the field via an interface.
func (v *everythingBackgroundTaskPoliciesBackgroundTaskPolicy) GetName() string { return v.Name }

// GetFolderPath returns everythingBackgroundTaskPoliciesBackgroundTaskPolicy.FolderPath, and is useful for accessing the field via an interface.
func (v *everythingBackgroundTaskPoliciesBackgroundTaskPolicy) GetFolderPath() string {
	return v.FolderPath
}

// GetGuid returns everythingBackgroundTaskPoliciesBackgroundTaskPolicy.Guid, and is useful for accessing the field via an interface.
func (v *everythingBackgroundTaskPoliciesBackgroundTaskPolicy) GetGuid() string { return v.Guid }

// GetPolicy returns everythingBackgroundTaskPoliciesBackgroundTaskPolicy.Policy, and is useful for accessing the field via an interface.
func (v *everythingBackgroundTaskPoliciesBackgroundTaskPolicy) GetPolicy() *everythingBackgroundTaskPoliciesBackgroundTaskPolicyPolicy {
	return v.Policy
}

// GetChecksum returns everythingBackgroundTaskPoliciesBackgroundTaskPolicy.Checksum, and is useful for accessing the field via an interface.
func (v *everythingBackgroundTaskPoliciesBackgroundTaskPolicy) GetChecksum() string {
	return v.Checksum
}

// everythingBackgroundTaskPoliciesBackgroundTaskPolicyPolicy includes the requested fields of the GraphQL type Policy.
// The GraphQL type's documentation follows.
//
// Wrapper for the policy XML and the dependencies they include
type everythingBackgroundTaskPoliciesBackgroundTaskPolicyPolicy struct {
	// The policy XML
	Xml string `json:"xml"`
}

// GetXml returns everythingBackgroundTaskPoliciesBackgroundTaskPolicyPolicy.Xml, and is useful for accessing the field via an interface.
func (v *everythingBackgroundTaskPoliciesBackgroundTaskPolicyPolicy) GetXml() string { return v.Xml }

// everythingCassandraConnectionsCassandraConnection includes the requested fields of the GraphQL type CassandraConnection.
// The GraphQL type's documentation follows.
//
// A Cassandra Connection
type everythingCassandraConnectionsCassandraConnection struct {
	// The goid for the Cassandra Connection
	Goid string `json:"goid"`
	// The Cassandra Connection name
	Name string `json:"name"`
	// The Cassandra keyspace name
	Keyspace string `json:"keyspace"`
	// The Cassandra connection points
	ContactPoints []string `json:"contactPoints"`
	// The Cassandra server port
	Port int `json:"port"`
	// The username
	Username string `json:"username"`
	// The secure password reference.
	SecurePasswordName string `json:"securePasswordName"`
	// Whether this Cassandra connection is SSL enabled
	SslEnabled bool `json:"sslEnabled"`
	// Cipher suites used for SSL connection
	CipherSuites []string `json:"cipherSuites"`
	// The Cassandra connection properties
	Properties []*everythingCassandraConnectionsCassandraConnectionPropertiesEntityProperty `json:"properties"`
	// The configuration checksum of this Cassandra connection
	Checksum string `json:"checksum"`
}

// GetGoid returns everythingCassandraConnectionsCassandraConnection.Goid, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetGoid() string { return v.Goid }

// GetName returns everythingCassandraConnectionsCassandraConnection.Name, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetName() string { return v.Name }

// GetKeyspace returns everythingCassandraConnectionsCassandraConnection.Keyspace, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetKeyspace() string { return v.Keyspace }

// GetContactPoints returns everythingCassandraConnectionsCassandraConnection.ContactPoints, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetContactPoints() []string {
	return v.ContactPoints
}

// GetPort returns everythingCassandraConnectionsCassandraConnection.Port, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetPort() int { return v.Port }

// GetUsername returns everythingCassandraConnectionsCassandraConnection.Username, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetUsername() string { return v.Username }

// GetSecurePasswordName returns everythingCassandraConnectionsCassandraConnection.SecurePasswordName, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetSecurePasswordName() string {
	return v.SecurePasswordName
}

// GetSslEnabled returns everythingCassandraConnectionsCassandraConnection.SslEnabled, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetSslEnabled() bool { return v.SslEnabled }

// GetCipherSuites returns everythingCassandraConnectionsCassandraConnection.CipherSuites, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetCipherSuites() []string {
	return v.CipherSuites
}

// GetProperties returns everythingCassandraConnectionsCassandraConnection.Properties, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetProperties() []*everythingCassandraConnectionsCassandraConnectionPropertiesEntityProperty {
	return v.Properties
}

// GetChecksum returns everythingCassandraConnectionsCassandraConnection.Checksum, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnection) GetChecksum() string { return v.Checksum }

// everythingCassandraConnectionsCassandraConnectionPropertiesEntityProperty includes the requested fields of the GraphQL type EntityProperty.
// The GraphQL type's documentation follows.
//
// An Entity Property
type everythingCassandraConnectionsCassandraConnectionPropertiesEntityProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value string `json:"value"`
}

// GetName returns everythingCassandraConnectionsCassandraConnectionPropertiesEntityProperty.Name, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnectionPropertiesEntityProperty) GetName() string {
	return v.Name
}

// GetValue returns everythingCassandraConnectionsCassandraConnectionPropertiesEntityProperty.Value, and is useful for accessing the field via an interface.
func (v *everythingCassandraConnectionsCassandraConnectionPropertiesEntityProperty) GetValue() string {
	return v.Value
}

// everythingClusterPropertiesClusterProperty includes the requested fields of the GraphQL type ClusterProperty.
// The GraphQL type's documentation follows.
//
// Cluster properties are used to set global properties
type everythingClusterPropertiesClusterProperty struct {
	// The cluster property name
	Name string `json:"name"`
	// The configuration checksum of this cluster prop
	Checksum string `json:"checksum"`
	// The cluster property value
	Value string `json:"value"`
}

// GetName returns everythingClusterPropertiesClusterProperty.Name, and is useful for accessing the field via an interface.
func (v *everythingClusterPropertiesClusterProperty) GetName() string { return v.Name }

// GetChecksum returns everythingClusterPropertiesClusterProperty.Checksum, and is useful for accessing the field via an interface.
func (v *everythingClusterPropertiesClusterProperty) GetChecksum() string { return v.Checksum }

// GetValue returns everythingClusterPropertiesClusterProperty.Value, and is useful for accessing the field via an interface.
func (v *everythingClusterPropertiesClusterProperty) GetValue() string { return v.Value }

// everythingDtdsDtd includes the requested fields of the GraphQL type Dtd.
// The GraphQL type's documentation follows.
//
// A Document Type Definition (DTD) which can be referred to in policy
type everythingDtdsDtd struct {
	// A reference to the DTD. This id is what is referred to in policy and is often mirror of the target namespace
	SystemId string `json:"systemId"`
	// The configuration checksum
	Checksum string `json:"checksum"`
	// The public id for the DTD
	PublicId string `json:"publicId"`
	// An optional description
	Description string `json:"description"`
	// The content of DTD itself
	Content string `json:"content"`
}

// GetSystemId returns everythingDtdsDtd.SystemId, and is useful for accessing the field via an interface.
func (v *everythingDtdsDtd) GetSystemId() string { return v.SystemId }

// GetChecksum returns everythingDtdsDtd.Checksum, and is useful for accessing the field via an interface.
func (v *everythingDtdsDtd) GetChecksum() string { return v.Checksum }

// GetPublicId returns everythingDtdsDtd.PublicId, and is useful for accessing the field via an interface.
func (v *everythingDtdsDtd) GetPublicId() string { return v.PublicId }

// GetDescription returns everythingDtdsDtd.Description, and is useful for accessing the field via an interface.
func (v *everythingDtdsDtd) GetDescription() string { return v.Description }

// GetContent returns everythingDtdsDtd.Content, and is useful for accessing the field via an interface.
func (v *everythingDtdsDtd) GetContent() string { return v.Content }

// everythingEmailListenersEmailListener includes the requested fields of the GraphQL type EmailListener.
type everythingEmailListenersEmailListener struct {
	// The goid for the email listener Connection
	Goid string `json:"goid"`
	// The name of the email listener. If you are creating several listeners, make sure the name is descriptive
	Name string `json:"name"`
	// Whether this email listener is enabled(active)
	Enabled bool `json:"enabled"`
	// The hostname of the email server. This name is verified against the X.509 certificate
	Hostname string `json:"hostname"`
	// The port number to monitor
	Port int `json:"port"`
	// Email account name
	Username string `json:"username"`
	// Email account password. The password could be in plain text or secure password reference
	Password string `json:"password"`
	// The type of email server (IMAP or POP3)
	ServerType EmailServerType `json:"serverType"`
	// Whether email server connection (POP3S or IMAPS) is SSL enabled
	SslEnabled bool `json:"sslEnabled"`
	// Whether delete the messages on the mail server after retrieving
	DeleteOnReceive bool `json:"deleteOnReceive"`
	// The folder name to check for emails (Only for IMAP)
	Folder string `json:"folder"`
	// The listener will check for email after the specified number of seconds
	PollInterval int `json:"pollInterval"`
	// The name of the published service hardwired to the email listener
	HardwiredServiceName string `json:"hardwiredServiceName"`
	// The email listener properties excluding sizeLimit and HardwiredServiceName
	Properties []*everythingEmailListenersEmailListenerPropertiesEntityProperty `json:"properties"`
	// The configuration checksum
	Checksum string `json:"checksum"`
}

// GetGoid returns everythingEmailListenersEmailListener.Goid, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetGoid() string { return v.Goid }

// GetName returns everythingEmailListenersEmailListener.Name, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetName() string { return v.Name }

// GetEnabled returns everythingEmailListenersEmailListener.Enabled, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetEnabled() bool { return v.Enabled }

// GetHostname returns everythingEmailListenersEmailListener.Hostname, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetHostname() string { return v.Hostname }

// GetPort returns everythingEmailListenersEmailListener.Port, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetPort() int { return v.Port }

// GetUsername returns everythingEmailListenersEmailListener.Username, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetUsername() string { return v.Username }

// GetPassword returns everythingEmailListenersEmailListener.Password, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetPassword() string { return v.Password }

// GetServerType returns everythingEmailListenersEmailListener.ServerType, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetServerType() EmailServerType { return v.ServerType }

// GetSslEnabled returns everythingEmailListenersEmailListener.SslEnabled, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetSslEnabled() bool { return v.SslEnabled }

// GetDeleteOnReceive returns everythingEmailListenersEmailListener.DeleteOnReceive, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetDeleteOnReceive() bool { return v.DeleteOnReceive }

// GetFolder returns everythingEmailListenersEmailListener.Folder, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetFolder() string { return v.Folder }

// GetPollInterval returns everythingEmailListenersEmailListener.PollInterval, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetPollInterval() int { return v.PollInterval }

// GetHardwiredServiceName returns everythingEmailListenersEmailListener.HardwiredServiceName, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetHardwiredServiceName() string {
	return v.HardwiredServiceName
}

// GetProperties returns everythingEmailListenersEmailListener.Properties, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetProperties() []*everythingEmailListenersEmailListenerPropertiesEntityProperty {
	return v.Properties
}

// GetChecksum returns everythingEmailListenersEmailListener.Checksum, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListener) GetChecksum() string { return v.Checksum }

// everythingEmailListenersEmailListenerPropertiesEntityProperty includes the requested fields of the GraphQL type EntityProperty.
// The GraphQL type's documentation follows.
//
// An Entity Property
type everythingEmailListenersEmailListenerPropertiesEntityProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value string `json:"value"`
}

// GetName returns everythingEmailListenersEmailListenerPropertiesEntityProperty.Name, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListenerPropertiesEntityProperty) GetName() string {
	return v.Name
}

// GetValue returns everythingEmailListenersEmailListenerPropertiesEntityProperty.Value, and is useful for accessing the field via an interface.
func (v *everythingEmailListenersEmailListenerPropertiesEntityProperty) GetValue() string {
	return v.Value
}

// everythingEncassConfigsEncassConfig includes the requested fields of the GraphQL type EncassConfig.
// The GraphQL type's documentation follows.
//
// An Encapsulated Assertion Configuration
type everythingEncassConfigsEncassConfig struct {
	// The name of the encass config
	Name string `json:"name"`
	// The configuration checksum of this encass
	Checksum string `json:"checksum"`
	// The policy it points to and its dependencies
	PolicyName string `json:"policyName"`
	// The guid for this encass config
	Guid string `json:"guid"`
	// the input argument descriptions for this encass
	EncassArgs []*everythingEncassConfigsEncassConfigEncassArgsEncassArg `json:"encassArgs"`
	// the output descriptions
	EncassResults []*everythingEncassConfigsEncassConfigEncassResultsEncassResult `json:"encassResults"`
}

// GetName returns everythingEncassConfigsEncassConfig.Name, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfig) GetName() string { return v.Name }

// GetChecksum returns everythingEncassConfigsEncassConfig.Checksum, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfig) GetChecksum() string { return v.Checksum }

// GetPolicyName returns everythingEncassConfigsEncassConfig.PolicyName, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfig) GetPolicyName() string { return v.PolicyName }

// GetGuid returns everythingEncassConfigsEncassConfig.Guid, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfig) GetGuid() string { return v.Guid }

// GetEncassArgs returns everythingEncassConfigsEncassConfig.EncassArgs, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfig) GetEncassArgs() []*everythingEncassConfigsEncassConfigEncassArgsEncassArg {
	return v.EncassArgs
}

// GetEncassResults returns everythingEncassConfigsEncassConfig.EncassResults, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfig) GetEncassResults() []*everythingEncassConfigsEncassConfigEncassResultsEncassResult {
	return v.EncassResults
}

// everythingEncassConfigsEncassConfigEncassArgsEncassArg includes the requested fields of the GraphQL type EncassArg.
// The GraphQL type's documentation follows.
//
// The description of an input argument for an encapsulated assertion
type everythingEncassConfigsEncassConfigEncassArgsEncassArg struct {
	// The name of the input
	Name string `json:"name"`
	// The type of input
	Type DataType `json:"type"`
	// The order of the argument in the admin gui
	Ordinal int `json:"ordinal"`
	// The label in the admin gui associated with this encass argument
	GuiLabel string `json:"guiLabel"`
	// The prompt in the admin gui for this encass argument
	GuiPrompt bool `json:"guiPrompt"`
}

// GetName returns everythingEncassConfigsEncassConfigEncassArgsEncassArg.Name, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfigEncassArgsEncassArg) GetName() string { return v.Name }

// GetType returns everythingEncassConfigsEncassConfigEncassArgsEncassArg.Type, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfigEncassArgsEncassArg) GetType() DataType { return v.Type }

// GetOrdinal returns everythingEncassConfigsEncassConfigEncassArgsEncassArg.Ordinal, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfigEncassArgsEncassArg) GetOrdinal() int { return v.Ordinal }

// GetGuiLabel returns everythingEncassConfigsEncassConfigEncassArgsEncassArg.GuiLabel, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfigEncassArgsEncassArg) GetGuiLabel() string {
	return v.GuiLabel
}

// GetGuiPrompt returns everythingEncassConfigsEncassConfigEncassArgsEncassArg.GuiPrompt, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfigEncassArgsEncassArg) GetGuiPrompt() bool {
	return v.GuiPrompt
}

// everythingEncassConfigsEncassConfigEncassResultsEncassResult includes the requested fields of the GraphQL type EncassResult.
// The GraphQL type's documentation follows.
//
// The description of an output from the encapsulated assertion
type everythingEncassConfigsEncassConfigEncassResultsEncassResult struct {
	// The name of the output
	Name string `json:"name"`
	// The type of the output
	Type DataType `json:"type"`
}

// GetName returns everythingEncassConfigsEncassConfigEncassResultsEncassResult.Name, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfigEncassResultsEncassResult) GetName() string {
	return v.Name
}

// GetType returns everythingEncassConfigsEncassConfigEncassResultsEncassResult.Type, and is useful for accessing the field via an interface.
func (v *everythingEncassConfigsEncassConfigEncassResultsEncassResult) GetType() DataType {
	return v.Type
}

// everythingFipGroupsFipGroup includes the requested fields of the GraphQL type FipGroup.
// The GraphQL type's documentation follows.
//
// A group defined in a federated identity provider
type everythingFipGroupsFipGroup struct {
	Name string `json:"name"`
	// The name of the FiP this group is defined in
	ProviderName string `json:"providerName"`
	// A checksum of the name, description and member names properties of the group
	Checksum    string `json:"checksum"`
	Goid        string `json:"goid"`
	Description string `json:"description"`
}

// GetName returns everythingFipGroupsFipGroup.Name, and is useful for accessing the field via an interface.
func (v *everythingFipGroupsFipGroup) GetName() string { return v.Name }

// GetProviderName returns everythingFipGroupsFipGroup.ProviderName, and is useful for accessing the field via an interface.
func (v *everythingFipGroupsFipGroup) GetProviderName() string { return v.ProviderName }

// GetChecksum returns everythingFipGroupsFipGroup.Checksum, and is useful for accessing the field via an interface.
func (v *everythingFipGroupsFipGroup) GetChecksum() string { return v.Checksum }

// GetGoid returns everythingFipGroupsFipGroup.Goid, and is useful for accessing the field via an interface.
func (v *everythingFipGroupsFipGroup) GetGoid() string { return v.Goid }

// GetDescription returns everythingFipGroupsFipGroup.Description, and is useful for accessing the field via an interface.
func (v *everythingFipGroupsFipGroup) GetDescription() string { return v.Description }

// everythingFipUsersFipUser includes the requested fields of the GraphQL type FipUser.
// The GraphQL type's documentation follows.
//
// A user defined in a federated identity provider
type everythingFipUsersFipUser struct {
	Name string `json:"name"`
	// The name of the FiP this user is defined as part of
	ProviderName string `json:"providerName"`
	Checksum     string `json:"checksum"`
	Goid         string `json:"goid"`
	SubjectDn    string `json:"subjectDn"`
	// The list of Fip groups this user belongs to
	MemberOf  []*everythingFipUsersFipUserMemberOfFipGroup `json:"memberOf"`
	Login     string                                       `json:"login"`
	FirstName string                                       `json:"firstName"`
	LastName  string                                       `json:"lastName"`
	Email     string                                       `json:"email"`
	// A client-side certificate associated with this user to use for pki type authentication
	CertBase64 string `json:"certBase64"`
}

// GetName returns everythingFipUsersFipUser.Name, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetName() string { return v.Name }

// GetProviderName returns everythingFipUsersFipUser.ProviderName, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetProviderName() string { return v.ProviderName }

// GetChecksum returns everythingFipUsersFipUser.Checksum, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetChecksum() string { return v.Checksum }

// GetGoid returns everythingFipUsersFipUser.Goid, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetGoid() string { return v.Goid }

// GetSubjectDn returns everythingFipUsersFipUser.SubjectDn, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetSubjectDn() string { return v.SubjectDn }

// GetMemberOf returns everythingFipUsersFipUser.MemberOf, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetMemberOf() []*everythingFipUsersFipUserMemberOfFipGroup {
	return v.MemberOf
}

// GetLogin returns everythingFipUsersFipUser.Login, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetLogin() string { return v.Login }

// GetFirstName returns everythingFipUsersFipUser.FirstName, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetFirstName() string { return v.FirstName }

// GetLastName returns everythingFipUsersFipUser.LastName, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetLastName() string { return v.LastName }

// GetEmail returns everythingFipUsersFipUser.Email, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetEmail() string { return v.Email }

// GetCertBase64 returns everythingFipUsersFipUser.CertBase64, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUser) GetCertBase64() string { return v.CertBase64 }

// everythingFipUsersFipUserMemberOfFipGroup includes the requested fields of the GraphQL type FipGroup.
// The GraphQL type's documentation follows.
//
// A group defined in a federated identity provider
type everythingFipUsersFipUserMemberOfFipGroup struct {
	Name string `json:"name"`
}

// GetName returns everythingFipUsersFipUserMemberOfFipGroup.Name, and is useful for accessing the field via an interface.
func (v *everythingFipUsersFipUserMemberOfFipGroup) GetName() string { return v.Name }

// everythingFipsFip includes the requested fields of the GraphQL type Fip.
// The GraphQL type's documentation follows.
//
// A Federated Identity Provider
type everythingFipsFip struct {
	Name                     string `json:"name"`
	Checksum                 string `json:"checksum"`
	Goid                     string `json:"goid"`
	EnableCredentialTypeX509 bool   `json:"enableCredentialTypeX509"`
	EnableCredentialTypeSaml bool   `json:"enableCredentialTypeSaml"`
	// The certificates in the trusted certificate table that establish the trust for this FIP
	CertificateReferences []*everythingFipsFipCertificateReferencesCertificate `json:"certificateReferences"`
}

// GetName returns everythingFipsFip.Name, and is useful for accessing the field via an interface.
func (v *everythingFipsFip) GetName() string { return v.Name }

// GetChecksum returns everythingFipsFip.Checksum, and is useful for accessing the field via an interface.
func (v *everythingFipsFip) GetChecksum() string { return v.Checksum }

// GetGoid returns everythingFipsFip.Goid, and is useful for accessing the field via an interface.
func (v *everythingFipsFip) GetGoid() string { return v.Goid }

// GetEnableCredentialTypeX509 returns everythingFipsFip.EnableCredentialTypeX509, and is useful for accessing the field via an interface.
func (v *everythingFipsFip) GetEnableCredentialTypeX509() bool { return v.EnableCredentialTypeX509 }

// GetEnableCredentialTypeSaml returns everythingFipsFip.EnableCredentialTypeSaml, and is useful for accessing the field via an interface.
func (v *everythingFipsFip) GetEnableCredentialTypeSaml() bool { return v.EnableCredentialTypeSaml }

// GetCertificateReferences returns everythingFipsFip.CertificateReferences, and is useful for accessing the field via an interface.
func (v *everythingFipsFip) GetCertificateReferences() []*everythingFipsFipCertificateReferencesCertificate {
	return v.CertificateReferences
}

// everythingFipsFipCertificateReferencesCertificate includes the requested fields of the GraphQL type Certificate.
// The GraphQL type's documentation follows.
//
// An certificate that is trusted by the Gateway
type everythingFipsFipCertificateReferencesCertificate struct {
	// The sha1 thumbprint of the certificate
	ThumbprintSha1 string `json:"thumbprintSha1"`
}

// GetThumbprintSha1 returns everythingFipsFipCertificateReferencesCertificate.ThumbprintSha1, and is useful for accessing the field via an interface.
func (v *everythingFipsFipCertificateReferencesCertificate) GetThumbprintSha1() string {
	return v.ThumbprintSha1
}

// everythingGlobalPoliciesGlobalPolicy includes the requested fields of the GraphQL type GlobalPolicy.
// The GraphQL type's documentation follows.
//
// A Global policy
type everythingGlobalPoliciesGlobalPolicy struct {
	// The name of the policy (policies are unique by name)
	Name string `json:"name"`
	// Global policy tag. Possible values are :
	// message-completed
	// message-received
	// post-security
	// post-service
	// pre-security
	// pre-service
	Tag string `json:"tag"`
	// The folder path where this policy is located
	FolderPath string `json:"folderPath"`
	// The actual policy and dependencies
	Policy *everythingGlobalPoliciesGlobalPolicyPolicy `json:"policy"`
	// The guid for this policy
	Guid string `json:"guid"`
	// The goid for this policy
	Goid string `json:"goid"`
	// The configuration checksum
	Checksum string `json:"checksum"`
}

// GetName returns everythingGlobalPoliciesGlobalPolicy.Name, and is useful for accessing the field via an interface.
func (v *everythingGlobalPoliciesGlobalPolicy) GetName() string { return v.Name }

// GetTag returns everythingGlobalPoliciesGlobalPolicy.Tag, and is useful for accessing the field via an interface.
func (v *everythingGlobalPoliciesGlobalPolicy) GetTag() string { return v.Tag }

// GetFolderPath returns everythingGlobalPoliciesGlobalPolicy.FolderPath, and is useful for accessing the field via an interface.
func (v *everythingGlobalPoliciesGlobalPolicy) GetFolderPath() string { return v.FolderPath }

// GetPolicy returns everythingGlobalPoliciesGlobalPolicy.Policy, and is useful for accessing the field via an interface.
func (v *everythingGlobalPoliciesGlobalPolicy) GetPolicy() *everythingGlobalPoliciesGlobalPolicyPolicy {
	return v.Policy
}

// GetGuid returns everythingGlobalPoliciesGlobalPolicy.Guid, and is useful for accessing the field via an interface.
func (v *everythingGlobalPoliciesGlobalPolicy) GetGuid() string { return v.Guid }

// GetGoid returns everythingGlobalPoliciesGlobalPolicy.Goid, and is useful for accessing the field via an interface.
func (v *everythingGlobalPoliciesGlobalPolicy) GetGoid() string { return v.Goid }

// GetChecksum returns everythingGlobalPoliciesGlobalPolicy.Checksum, and is useful for accessing the field via an interface.
func (v *everythingGlobalPoliciesGlobalPolicy) GetChecksum() string { return v.Checksum }

// everythingGlobalPoliciesGlobalPolicyPolicy includes the requested fields of the GraphQL type Policy.
// The GraphQL type's documentation follows.
//
// Wrapper for the policy XML and the dependencies they include
type everythingGlobalPoliciesGlobalPolicyPolicy struct {
	// The policy XML
	Xml string `json:"xml"`
}

// GetXml returns everythingGlobalPoliciesGlobalPolicyPolicy.Xml, and is useful for accessing the field via an interface.
func (v *everythingGlobalPoliciesGlobalPolicyPolicy) GetXml() string { return v.Xml }

// everythingInternalGroupsInternalGroup includes the requested fields of the GraphQL type InternalGroup.
// The GraphQL type's documentation follows.
//
// A group of users defined in the internal identity provider
type everythingInternalGroupsInternalGroup struct {
	Name string `json:"name"`
	// A checksum of the name, description and member names properties of the group
	Checksum    string `json:"checksum"`
	Goid        string `json:"goid"`
	Description string `json:"description"`
}

// GetName returns everythingInternalGroupsInternalGroup.Name, and is useful for accessing the field via an interface.
func (v *everythingInternalGroupsInternalGroup) GetName() string { return v.Name }

// GetChecksum returns everythingInternalGroupsInternalGroup.Checksum, and is useful for accessing the field via an interface.
func (v *everythingInternalGroupsInternalGroup) GetChecksum() string { return v.Checksum }

// GetGoid returns everythingInternalGroupsInternalGroup.Goid, and is useful for accessing the field via an interface.
func (v *everythingInternalGroupsInternalGroup) GetGoid() string { return v.Goid }

// GetDescription returns everythingInternalGroupsInternalGroup.Description, and is useful for accessing the field via an interface.
func (v *everythingInternalGroupsInternalGroup) GetDescription() string { return v.Description }

// everythingInternalUsersInternalUser includes the requested fields of the GraphQL type InternalUser.
// The GraphQL type's documentation follows.
//
// A user in the internal identity provider
type everythingInternalUsersInternalUser struct {
	Name     string `json:"name"`
	Goid     string `json:"goid"`
	Checksum string `json:"checksum"`
	// List of groups this is member of
	MemberOf []*everythingInternalUsersInternalUserMemberOfInternalGroup `json:"memberOf"`
	Login    string                                                      `json:"login"`
	// The hashed password of the user if defined
	Password  string `json:"password"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
	// A client-side certificate associated with this user to use for pki type authentication
	CertBase64 string `json:"certBase64"`
}

// GetName returns everythingInternalUsersInternalUser.Name, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetName() string { return v.Name }

// GetGoid returns everythingInternalUsersInternalUser.Goid, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetGoid() string { return v.Goid }

// GetChecksum returns everythingInternalUsersInternalUser.Checksum, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetChecksum() string { return v.Checksum }

// GetMemberOf returns everythingInternalUsersInternalUser.MemberOf, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetMemberOf() []*everythingInternalUsersInternalUserMemberOfInternalGroup {
	return v.MemberOf
}

// GetLogin returns everythingInternalUsersInternalUser.Login, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetLogin() string { return v.Login }

// GetPassword returns everythingInternalUsersInternalUser.Password, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetPassword() string { return v.Password }

// GetFirstName returns everythingInternalUsersInternalUser.FirstName, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetFirstName() string { return v.FirstName }

// GetLastName returns everythingInternalUsersInternalUser.LastName, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetLastName() string { return v.LastName }

// GetEmail returns everythingInternalUsersInternalUser.Email, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetEmail() string { return v.Email }

// GetCertBase64 returns everythingInternalUsersInternalUser.CertBase64, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUser) GetCertBase64() string { return v.CertBase64 }

// everythingInternalUsersInternalUserMemberOfInternalGroup includes the requested fields of the GraphQL type InternalGroup.
// The GraphQL type's documentation follows.
//
// A group of users defined in the internal identity provider
type everythingInternalUsersInternalUserMemberOfInternalGroup struct {
	Name string `json:"name"`
}

// GetName returns everythingInternalUsersInternalUserMemberOfInternalGroup.Name, and is useful for accessing the field via an interface.
func (v *everythingInternalUsersInternalUserMemberOfInternalGroup) GetName() string { return v.Name }

// everythingJdbcConnectionsJdbcConnection includes the requested fields of the GraphQL type JdbcConnection.
// The GraphQL type's documentation follows.
//
// A JDBC Connection
type everythingJdbcConnectionsJdbcConnection struct {
	// The JDBC Connection name
	Name string `json:"name"`
	// The configuration checksum of this JDBC connection
	Checksum string `json:"checksum"`
	// The JDBC driver class name
	DriverClass string `json:"driverClass"`
	// The JDBC url
	JdbcUrl string `json:"jdbcUrl"`
	// Whether this JDBC connection is enabled
	Enabled bool `json:"enabled"`
	// The username
	Username string `json:"username"`
	// The password or the secure password reference.
	Password string `json:"password"`
	// The minimum connection pool size
	MinPoolSize int `json:"minPoolSize"`
	// The maximum connection pool size
	MaxPoolSize int `json:"maxPoolSize"`
	// The JDBC connection properties excluding 'user' and 'password'
	Properties []*everythingJdbcConnectionsJdbcConnectionPropertiesEntityProperty `json:"properties"`
}

// GetName returns everythingJdbcConnectionsJdbcConnection.Name, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetName() string { return v.Name }

// GetChecksum returns everythingJdbcConnectionsJdbcConnection.Checksum, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetChecksum() string { return v.Checksum }

// GetDriverClass returns everythingJdbcConnectionsJdbcConnection.DriverClass, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetDriverClass() string { return v.DriverClass }

// GetJdbcUrl returns everythingJdbcConnectionsJdbcConnection.JdbcUrl, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetJdbcUrl() string { return v.JdbcUrl }

// GetEnabled returns everythingJdbcConnectionsJdbcConnection.Enabled, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetEnabled() bool { return v.Enabled }

// GetUsername returns everythingJdbcConnectionsJdbcConnection.Username, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetUsername() string { return v.Username }

// GetPassword returns everythingJdbcConnectionsJdbcConnection.Password, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetPassword() string { return v.Password }

// GetMinPoolSize returns everythingJdbcConnectionsJdbcConnection.MinPoolSize, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetMinPoolSize() int { return v.MinPoolSize }

// GetMaxPoolSize returns everythingJdbcConnectionsJdbcConnection.MaxPoolSize, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetMaxPoolSize() int { return v.MaxPoolSize }

// GetProperties returns everythingJdbcConnectionsJdbcConnection.Properties, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnection) GetProperties() []*everythingJdbcConnectionsJdbcConnectionPropertiesEntityProperty {
	return v.Properties
}

// everythingJdbcConnectionsJdbcConnectionPropertiesEntityProperty includes the requested fields of the GraphQL type EntityProperty.
// The GraphQL type's documentation follows.
//
// An Entity Property
type everythingJdbcConnectionsJdbcConnectionPropertiesEntityProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value string `json:"value"`
}

// GetName returns everythingJdbcConnectionsJdbcConnectionPropertiesEntityProperty.Name, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnectionPropertiesEntityProperty) GetName() string {
	return v.Name
}

// GetValue returns everythingJdbcConnectionsJdbcConnectionPropertiesEntityProperty.Value, and is useful for accessing the field via an interface.
func (v *everythingJdbcConnectionsJdbcConnectionPropertiesEntityProperty) GetValue() string {
	return v.Value
}

// everythingJmsDestinationsJmsDestination includes the requested fields of the GraphQL type JmsDestination.
// The GraphQL type's documentation follows.
//
// A JMS Destination
type everythingJmsDestinationsJmsDestination struct {
	// The JMS Destination name
	Name string `json:"name"`
	// The JMS Destination direction (INBOUND or OUTBOUND)
	Direction string `json:"direction"`
	// The JMS provider type (GENERIC JMS or TIBCO EMS or WEBSPHERE MQ OVER LDAP or WEBLOGIC JMS
	ProviderType string `json:"providerType"`
	// The initial context factory class name
	InitialContextFactoryClassname string `json:"initialContextFactoryClassname"`
	// The connection factory name
	ConnectionFactoryName string `json:"connectionFactoryName"`
	// The JNDI URL
	JndiUrl string `json:"jndiUrl"`
	// The JNDI username
	JndiUsername string `json:"jndiUsername"`
	// The JNDI password
	JndiPassword string `json:"jndiPassword"`
	// Whether this JMS destination is template
	Template bool `json:"template"`
	// Whether this JMS destination is enabled
	Enabled bool `json:"enabled"`
	// The JNDI SSL details
	JndiSslDetails *everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails `json:"jndiSslDetails"`
	// The destination type
	DestinationType string `json:"destinationType"`
	// The destination name
	DestinationName string `json:"destinationName"`
	// The username for destination connection
	DestinationUsername string `json:"destinationUsername"`
	// The password for destination connection
	DestinationPassword string `json:"destinationPassword"`
	// The destination SSL details
	DestinationSslDetails *everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails `json:"destinationSslDetails"`
	// The remaining JMS Destination properties that include inbound options or outbound options or additional properties
	Properties []*everythingJmsDestinationsJmsDestinationPropertiesEntityProperty `json:"properties"`
	// The configuration checksum of this JMS destination
	Checksum string `json:"checksum"`
}

// GetName returns everythingJmsDestinationsJmsDestination.Name, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetName() string { return v.Name }

// GetDirection returns everythingJmsDestinationsJmsDestination.Direction, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetDirection() string { return v.Direction }

// GetProviderType returns everythingJmsDestinationsJmsDestination.ProviderType, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetProviderType() string { return v.ProviderType }

// GetInitialContextFactoryClassname returns everythingJmsDestinationsJmsDestination.InitialContextFactoryClassname, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetInitialContextFactoryClassname() string {
	return v.InitialContextFactoryClassname
}

// GetConnectionFactoryName returns everythingJmsDestinationsJmsDestination.ConnectionFactoryName, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetConnectionFactoryName() string {
	return v.ConnectionFactoryName
}

// GetJndiUrl returns everythingJmsDestinationsJmsDestination.JndiUrl, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetJndiUrl() string { return v.JndiUrl }

// GetJndiUsername returns everythingJmsDestinationsJmsDestination.JndiUsername, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetJndiUsername() string { return v.JndiUsername }

// GetJndiPassword returns everythingJmsDestinationsJmsDestination.JndiPassword, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetJndiPassword() string { return v.JndiPassword }

// GetTemplate returns everythingJmsDestinationsJmsDestination.Template, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetTemplate() bool { return v.Template }

// GetEnabled returns everythingJmsDestinationsJmsDestination.Enabled, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetEnabled() bool { return v.Enabled }

// GetJndiSslDetails returns everythingJmsDestinationsJmsDestination.JndiSslDetails, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetJndiSslDetails() *everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails {
	return v.JndiSslDetails
}

// GetDestinationType returns everythingJmsDestinationsJmsDestination.DestinationType, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetDestinationType() string {
	return v.DestinationType
}

// GetDestinationName returns everythingJmsDestinationsJmsDestination.DestinationName, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetDestinationName() string {
	return v.DestinationName
}

// GetDestinationUsername returns everythingJmsDestinationsJmsDestination.DestinationUsername, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetDestinationUsername() string {
	return v.DestinationUsername
}

// GetDestinationPassword returns everythingJmsDestinationsJmsDestination.DestinationPassword, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetDestinationPassword() string {
	return v.DestinationPassword
}

// GetDestinationSslDetails returns everythingJmsDestinationsJmsDestination.DestinationSslDetails, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetDestinationSslDetails() *everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails {
	return v.DestinationSslDetails
}

// GetProperties returns everythingJmsDestinationsJmsDestination.Properties, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetProperties() []*everythingJmsDestinationsJmsDestinationPropertiesEntityProperty {
	return v.Properties
}

// GetChecksum returns everythingJmsDestinationsJmsDestination.Checksum, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestination) GetChecksum() string { return v.Checksum }

// everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails includes the requested fields of the GraphQL type JmsSslDetails.
// The GraphQL type's documentation follows.
//
// A JMS SSL Details
type everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails struct {
	// Whether SSL is enabled
	SslEnabled bool `json:"sslEnabled"`
	// Whether SSL is used for Authentication only
	SslForAuthenticationOnly bool `json:"sslForAuthenticationOnly"`
	// Whether SSL Server Certificate is to be verified
	SslVerifyServerCertificate bool `json:"sslVerifyServerCertificate"`
	// Whether SSL Server Hostname is to be verified
	SslVerifyServerHostname bool `json:"sslVerifyServerHostname"`
	// Private Key Alias for SSL Client Authentication
	SslClientKeyAlias string `json:"sslClientKeyAlias"`
}

// GetSslEnabled returns everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails.SslEnabled, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails) GetSslEnabled() bool {
	return v.SslEnabled
}

// GetSslForAuthenticationOnly returns everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails.SslForAuthenticationOnly, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails) GetSslForAuthenticationOnly() bool {
	return v.SslForAuthenticationOnly
}

// GetSslVerifyServerCertificate returns everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails.SslVerifyServerCertificate, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails) GetSslVerifyServerCertificate() bool {
	return v.SslVerifyServerCertificate
}

// GetSslVerifyServerHostname returns everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails.SslVerifyServerHostname, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails) GetSslVerifyServerHostname() bool {
	return v.SslVerifyServerHostname
}

// GetSslClientKeyAlias returns everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails.SslClientKeyAlias, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationDestinationSslDetailsJmsSslDetails) GetSslClientKeyAlias() string {
	return v.SslClientKeyAlias
}

// everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails includes the requested fields of the GraphQL type JmsSslDetails.
// The GraphQL type's documentation follows.
//
// A JMS SSL Details
type everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails struct {
	// Whether SSL is enabled
	SslEnabled bool `json:"sslEnabled"`
	// Whether SSL is used for Authentication only
	SslForAuthenticationOnly bool `json:"sslForAuthenticationOnly"`
	// Whether SSL Server Certificate is to be verified
	SslVerifyServerCertificate bool `json:"sslVerifyServerCertificate"`
	// Whether SSL Server Hostname is to be verified
	SslVerifyServerHostname bool `json:"sslVerifyServerHostname"`
	// Private Key Alias for SSL Client Authentication
	SslClientKeyAlias string `json:"sslClientKeyAlias"`
}

// GetSslEnabled returns everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails.SslEnabled, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails) GetSslEnabled() bool {
	return v.SslEnabled
}

// GetSslForAuthenticationOnly returns everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails.SslForAuthenticationOnly, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails) GetSslForAuthenticationOnly() bool {
	return v.SslForAuthenticationOnly
}

// GetSslVerifyServerCertificate returns everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails.SslVerifyServerCertificate, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails) GetSslVerifyServerCertificate() bool {
	return v.SslVerifyServerCertificate
}

// GetSslVerifyServerHostname returns everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails.SslVerifyServerHostname, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails) GetSslVerifyServerHostname() bool {
	return v.SslVerifyServerHostname
}

// GetSslClientKeyAlias returns everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails.SslClientKeyAlias, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationJndiSslDetailsJmsSslDetails) GetSslClientKeyAlias() string {
	return v.SslClientKeyAlias
}

// everythingJmsDestinationsJmsDestinationPropertiesEntityProperty includes the requested fields of the GraphQL type EntityProperty.
// The GraphQL type's documentation follows.
//
// An Entity Property
type everythingJmsDestinationsJmsDestinationPropertiesEntityProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value string `json:"value"`
}

// GetName returns everythingJmsDestinationsJmsDestinationPropertiesEntityProperty.Name, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationPropertiesEntityProperty) GetName() string {
	return v.Name
}

// GetValue returns everythingJmsDestinationsJmsDestinationPropertiesEntityProperty.Value, and is useful for accessing the field via an interface.
func (v *everythingJmsDestinationsJmsDestinationPropertiesEntityProperty) GetValue() string {
	return v.Value
}

// everythingKeysKey includes the requested fields of the GraphQL type Key.
// The GraphQL type's documentation follows.
//
// This is an entry in the gateway keystore. These entries combine a private
// key and associated certificate and are used for example by listener ports
// These represent the gateway's own certificates as opposed to the Certificate
// type which represent a cert trusted by the gateway.
type everythingKeysKey struct {
	// The name assigned to the key
	Alias string `json:"alias"`
	// The configuration checksum
	Checksum string `json:"checksum"`
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// Base64 encoded PKCS12 keystore containing the private key and cert chain for the key entry.
	// The keystore is password-protected using the transaction encryption passphrase provided.
	P12 string `json:"p12"`
}

// GetAlias returns everythingKeysKey.Alias, and is useful for accessing the field via an interface.
func (v *everythingKeysKey) GetAlias() string { return v.Alias }

// GetChecksum returns everythingKeysKey.Checksum, and is useful for accessing the field via an interface.
func (v *everythingKeysKey) GetChecksum() string { return v.Checksum }

// GetGoid returns everythingKeysKey.Goid, and is useful for accessing the field via an interface.
func (v *everythingKeysKey) GetGoid() string { return v.Goid }

// GetP12 returns everythingKeysKey.P12, and is useful for accessing the field via an interface.
func (v *everythingKeysKey) GetP12() string { return v.P12 }

// everythingLdapsLdap includes the requested fields of the GraphQL type Ldap.
// The GraphQL type's documentation follows.
//
// LdapIdp config itself is provided. Graphman wont get to
// underlying users and groups in the ldap since they are not
// part of the gateway configuration itself. When l7 policies
// refer to these ldap users and groups, thee references are
// interpreted by the ldap directory itself.
type everythingLdapsLdap struct {
	Name     string   `json:"name"`
	Goid     string   `json:"goid"`
	LdapUrls []string `json:"ldapUrls"`
	// Whether or not the gateway presents a client cert when connecting at those ldap urls (only relevant when ldaps url)
	LdapsClientAuthEnabled bool `json:"ldapsClientAuthEnabled"`
	// The alias of the key in the gateway keystore that is used when doing ldaps client cert authentication
	LdapsClientKeyAlias string                                          `json:"ldapsClientKeyAlias"`
	SearchBase          string                                          `json:"searchBase"`
	Writable            bool                                            `json:"writable"`
	BindDn              string                                          `json:"bindDn"`
	BindPassword        string                                          `json:"bindPassword"`
	UserMappings        []*everythingLdapsLdapUserMappingsUserMapping   `json:"userMappings"`
	GroupMappings       []*everythingLdapsLdapGroupMappingsGroupMapping `json:"groupMappings"`
	Checksum            string                                          `json:"checksum"`
}

// GetName returns everythingLdapsLdap.Name, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetName() string { return v.Name }

// GetGoid returns everythingLdapsLdap.Goid, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetGoid() string { return v.Goid }

// GetLdapUrls returns everythingLdapsLdap.LdapUrls, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetLdapUrls() []string { return v.LdapUrls }

// GetLdapsClientAuthEnabled returns everythingLdapsLdap.LdapsClientAuthEnabled, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetLdapsClientAuthEnabled() bool { return v.LdapsClientAuthEnabled }

// GetLdapsClientKeyAlias returns everythingLdapsLdap.LdapsClientKeyAlias, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetLdapsClientKeyAlias() string { return v.LdapsClientKeyAlias }

// GetSearchBase returns everythingLdapsLdap.SearchBase, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetSearchBase() string { return v.SearchBase }

// GetWritable returns everythingLdapsLdap.Writable, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetWritable() bool { return v.Writable }

// GetBindDn returns everythingLdapsLdap.BindDn, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetBindDn() string { return v.BindDn }

// GetBindPassword returns everythingLdapsLdap.BindPassword, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetBindPassword() string { return v.BindPassword }

// GetUserMappings returns everythingLdapsLdap.UserMappings, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetUserMappings() []*everythingLdapsLdapUserMappingsUserMapping {
	return v.UserMappings
}

// GetGroupMappings returns everythingLdapsLdap.GroupMappings, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetGroupMappings() []*everythingLdapsLdapGroupMappingsGroupMapping {
	return v.GroupMappings
}

// GetChecksum returns everythingLdapsLdap.Checksum, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdap) GetChecksum() string { return v.Checksum }

// everythingLdapsLdapGroupMappingsGroupMapping includes the requested fields of the GraphQL type GroupMapping.
// The GraphQL type's documentation follows.
//
// enum UserCertificateUseType {
// NONE
// INDEX
// INDEX_CUSTOM
// SEARCH
// }
type everythingLdapsLdapGroupMappingsGroupMapping struct {
	ObjClass       string                                                      `json:"objClass"`
	NameAttrName   string                                                      `json:"nameAttrName"`
	MemberAttrName string                                                      `json:"memberAttrName"`
	MemberStrategy *everythingLdapsLdapGroupMappingsGroupMappingMemberStrategy `json:"memberStrategy"`
}

// GetObjClass returns everythingLdapsLdapGroupMappingsGroupMapping.ObjClass, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapGroupMappingsGroupMapping) GetObjClass() string { return v.ObjClass }

// GetNameAttrName returns everythingLdapsLdapGroupMappingsGroupMapping.NameAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapGroupMappingsGroupMapping) GetNameAttrName() string {
	return v.NameAttrName
}

// GetMemberAttrName returns everythingLdapsLdapGroupMappingsGroupMapping.MemberAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapGroupMappingsGroupMapping) GetMemberAttrName() string {
	return v.MemberAttrName
}

// GetMemberStrategy returns everythingLdapsLdapGroupMappingsGroupMapping.MemberStrategy, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapGroupMappingsGroupMapping) GetMemberStrategy() *everythingLdapsLdapGroupMappingsGroupMappingMemberStrategy {
	return v.MemberStrategy
}

// everythingLdapsLdapGroupMappingsGroupMappingMemberStrategy includes the requested fields of the GraphQL type MemberStrategy.
type everythingLdapsLdapGroupMappingsGroupMappingMemberStrategy struct {
	// Possible values are 0 for MEMBERS_ARE_DN, 1 MEMBERS_ARE_LOGIN, 2 MEMBERS_ARE_NVPAIR, 3 MEMBERS_BY_OU
	Val int `json:"val"`
}

// GetVal returns everythingLdapsLdapGroupMappingsGroupMappingMemberStrategy.Val, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapGroupMappingsGroupMappingMemberStrategy) GetVal() int { return v.Val }

// everythingLdapsLdapUserMappingsUserMapping includes the requested fields of the GraphQL type UserMapping.
type everythingLdapsLdapUserMappingsUserMapping struct {
	ObjClass                   string                                                              `json:"objClass"`
	NameAttrName               string                                                              `json:"nameAttrName"`
	LoginAttrName              string                                                              `json:"loginAttrName"`
	PasswdAttrName             string                                                              `json:"passwdAttrName"`
	FirstNameAttrName          string                                                              `json:"firstNameAttrName"`
	LastNameAttrName           string                                                              `json:"lastNameAttrName"`
	EmailNameAttrName          string                                                              `json:"emailNameAttrName"`
	KerberosAttrName           string                                                              `json:"kerberosAttrName"`
	KerberosEnterpriseAttrName string                                                              `json:"kerberosEnterpriseAttrName"`
	UserCertAttrName           string                                                              `json:"userCertAttrName"`
	PasswdType                 *everythingLdapsLdapUserMappingsUserMappingPasswdTypePasswdStrategy `json:"passwdType"`
}

// GetObjClass returns everythingLdapsLdapUserMappingsUserMapping.ObjClass, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetObjClass() string { return v.ObjClass }

// GetNameAttrName returns everythingLdapsLdapUserMappingsUserMapping.NameAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetNameAttrName() string { return v.NameAttrName }

// GetLoginAttrName returns everythingLdapsLdapUserMappingsUserMapping.LoginAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetLoginAttrName() string {
	return v.LoginAttrName
}

// GetPasswdAttrName returns everythingLdapsLdapUserMappingsUserMapping.PasswdAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetPasswdAttrName() string {
	return v.PasswdAttrName
}

// GetFirstNameAttrName returns everythingLdapsLdapUserMappingsUserMapping.FirstNameAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetFirstNameAttrName() string {
	return v.FirstNameAttrName
}

// GetLastNameAttrName returns everythingLdapsLdapUserMappingsUserMapping.LastNameAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetLastNameAttrName() string {
	return v.LastNameAttrName
}

// GetEmailNameAttrName returns everythingLdapsLdapUserMappingsUserMapping.EmailNameAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetEmailNameAttrName() string {
	return v.EmailNameAttrName
}

// GetKerberosAttrName returns everythingLdapsLdapUserMappingsUserMapping.KerberosAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetKerberosAttrName() string {
	return v.KerberosAttrName
}

// GetKerberosEnterpriseAttrName returns everythingLdapsLdapUserMappingsUserMapping.KerberosEnterpriseAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetKerberosEnterpriseAttrName() string {
	return v.KerberosEnterpriseAttrName
}

// GetUserCertAttrName returns everythingLdapsLdapUserMappingsUserMapping.UserCertAttrName, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetUserCertAttrName() string {
	return v.UserCertAttrName
}

// GetPasswdType returns everythingLdapsLdapUserMappingsUserMapping.PasswdType, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMapping) GetPasswdType() *everythingLdapsLdapUserMappingsUserMappingPasswdTypePasswdStrategy {
	return v.PasswdType
}

// everythingLdapsLdapUserMappingsUserMappingPasswdTypePasswdStrategy includes the requested fields of the GraphQL type PasswdStrategy.
type everythingLdapsLdapUserMappingsUserMappingPasswdTypePasswdStrategy struct {
	// Possible values are 0 for CLEAR, 1 for HASHED
	Val int `json:"val"`
}

// GetVal returns everythingLdapsLdapUserMappingsUserMappingPasswdTypePasswdStrategy.Val, and is useful for accessing the field via an interface.
func (v *everythingLdapsLdapUserMappingsUserMappingPasswdTypePasswdStrategy) GetVal() int {
	return v.Val
}

// everythingListenPortsListenPort includes the requested fields of the GraphQL type ListenPort.
type everythingListenPortsListenPort struct {
	// The listen port configuration name
	Name string `json:"name"`
	// The internal entity unique identifier
	Goid string `json:"goid"`
	// Whether this listen port configuration is enabled
	Enabled bool `json:"enabled"`
	// The configuration checksum
	Checksum string `json:"checksum"`
	// The ListenPort's port number
	// Note: If the listen port is using the SSH2 protocol, avoid using port 22, as
	// it may conflict with the default SSH port 22 on Linux or Unix systems.
	Port int `json:"port"`
	// Protocol (scheme). Possible values are:
	// HTTP
	// HTTPS
	// HTTP2
	// HTTP2 (Secure)
	// FTP
	// FTPS
	// l7.raw.tcp
	// SSH2
	Protocol string `json:"protocol"`
	// Which Gateway services can be accessed through this listen port
	EnabledFeatures []ListenPortFeature `json:"enabledFeatures"`
	// The name of the published service hardwired to the listen port
	HardwiredServiceName string `json:"hardwiredServiceName"`
	// The listen port tls settings
	TlsSettings *everythingListenPortsListenPortTlsSettings `json:"tlsSettings"`
	// The listen port properties
	Properties []*everythingListenPortsListenPortPropertiesEntityProperty `json:"properties"`
}

// GetName returns everythingListenPortsListenPort.Name, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetName() string { return v.Name }

// GetGoid returns everythingListenPortsListenPort.Goid, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetGoid() string { return v.Goid }

// GetEnabled returns everythingListenPortsListenPort.Enabled, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetEnabled() bool { return v.Enabled }

// GetChecksum returns everythingListenPortsListenPort.Checksum, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetChecksum() string { return v.Checksum }

// GetPort returns everythingListenPortsListenPort.Port, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetPort() int { return v.Port }

// GetProtocol returns everythingListenPortsListenPort.Protocol, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetProtocol() string { return v.Protocol }

// GetEnabledFeatures returns everythingListenPortsListenPort.EnabledFeatures, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetEnabledFeatures() []ListenPortFeature {
	return v.EnabledFeatures
}

// GetHardwiredServiceName returns everythingListenPortsListenPort.HardwiredServiceName, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetHardwiredServiceName() string {
	return v.HardwiredServiceName
}

// GetTlsSettings returns everythingListenPortsListenPort.TlsSettings, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetTlsSettings() *everythingListenPortsListenPortTlsSettings {
	return v.TlsSettings
}

// GetProperties returns everythingListenPortsListenPort.Properties, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPort) GetProperties() []*everythingListenPortsListenPortPropertiesEntityProperty {
	return v.Properties
}

// everythingListenPortsListenPortPropertiesEntityProperty includes the requested fields of the GraphQL type EntityProperty.
// The GraphQL type's documentation follows.
//
// An Entity Property
type everythingListenPortsListenPortPropertiesEntityProperty struct {
	// The name of property
	Name string `json:"name"`
	// The value of the property
	Value string `json:"value"`
}

// GetName returns everythingListenPortsListenPortPropertiesEntityProperty.Name, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPortPropertiesEntityProperty) GetName() string { return v.Name }

// GetValue returns everythingListenPortsListenPortPropertiesEntityProperty.Value, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPortPropertiesEntityProperty) GetValue() string { return v.Value }

// everythingListenPortsListenPortTlsSettings includes the requested fields of the GraphQL type ListenPortTlsSettings.
type everythingListenPortsListenPortTlsSettings struct {
	// Specify whether the client must present a certificate to authenticate: NONE/OPTIONAL/REQUIRED
	ClientAuthentication ListenPortClientAuth `json:"clientAuthentication"`
	// Cipher suites that will be enabled on the SSL listen port
	CipherSuites []string `json:"cipherSuites"`
	// Enforces cipher suites usage in the order of preference
	UseCipherSuitesOrder bool `json:"useCipherSuitesOrder"`
	// TLS versions to be enabled for the listen port
	TlsVersions []string `json:"tlsVersions"`
	// Key alias configured for listen port
	KeyAlias string `json:"keyAlias"`
}

// GetClientAuthentication returns everythingListenPortsListenPortTlsSettings.ClientAuthentication, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPortTlsSettings) GetClientAuthentication() ListenPortClientAuth {
	return v.ClientAuthentication
}

// GetCipherSuites returns everythingListenPortsListenPortTlsSettings.CipherSuites, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPortTlsSettings) GetCipherSuites() []string {
	return v.CipherSuites
}

// GetUseCipherSuitesOrder returns everythingListenPortsListenPortTlsSettings.UseCipherSuitesOrder, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPortTlsSettings) GetUseCipherSuitesOrder() bool {
	return v.UseCipherSuitesOrder
}

// GetTlsVersions returns everythingListenPortsListenPortTlsSettings.TlsVersions, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPortTlsSettings) GetTlsVersions() []string { return v.TlsVersions }

// GetKeyAlias returns everythingListenPortsListenPortTlsSettings.KeyAlias, and is useful for accessing the field via an interface.
func (v *everythingListenPortsListenPortTlsSettings) GetKeyAlias() string { return v.KeyAlias }

// everythingPolicyFragmentsPolicyFragment includes the requested fields of the GraphQL type PolicyFragment.
// The GraphQL type's documentation follows.
//
// A policy fragment that can be included in another policy
type everythingPolicyFragmentsPolicyFragment struct {
	// The name of the policy (policies are unique by name)
	Name string `json:"name"`
	// The configuration checksum
	Checksum string `json:"checksum"`
	// The folder path to the policy
	FolderPath string `json:"folderPath"`
	// The actual policy and dependencies
	Policy *everythingPolicyFragmentsPolicyFragmentPolicy `json:"policy"`
	// The guid for this policy
	Guid string `json:"guid"`
}

// GetName returns everythingPolicyFragmentsPolicyFragment.Name, and is useful for accessing the field via an interface.
func (v *everythingPolicyFragmentsPolicyFragment) GetName() string { return v.Name }

// GetChecksum returns everythingPolicyFragmentsPolicyFragment.Checksum, and is useful for accessing the field via an interface.
func (v *everythingPolicyFragmentsPolicyFragment) GetChecksum() string { return v.Checksum }

// GetFolderPath returns everythingPolicyFragmentsPolicyFragment.FolderPath, and is useful for accessing the field via an interface.
func (v *everythingPolicyFragmentsPolicyFragment) GetFolderPath() string { return v.FolderPath }

// GetPolicy returns everythingPolicyFragmentsPolicyFragment.Policy, and is useful for accessing the field via an interface.
func (v *everythingPolicyFragmentsPolicyFragment) GetPolicy() *everythingPolicyFragmentsPolicyFragmentPolicy {
	return v.Policy
}

// GetGuid returns everythingPolicyFragmentsPolicyFragment.Guid, and is useful for accessing the field via an interface.
func (v *everythingPolicyFragmentsPolicyFragment) GetGuid() string { return v.Guid }

// everythingPolicyFragmentsPolicyFragmentPolicy includes the requested fields of the GraphQL type Policy.
// The GraphQL type's documentation follows.
//
// Wrapper for the policy XML and the dependencies they include
type everythingPolicyFragmentsPolicyFragmentPolicy struct {
	// The policy XML
	Xml string `json:"xml"`
}

// GetXml returns everythingPolicyFragmentsPolicyFragmentPolicy.Xml, and is useful for accessing the field via an interface.
func (v *everythingPolicyFragmentsPolicyFragmentPolicy) GetXml() string { return v.Xml }

// everythingResponse is returned by everything on success.
type everythingResponse struct {
	// Get all policy fragments
	PolicyFragments []*everythingPolicyFragmentsPolicyFragment `json:"policyFragments"`
	// Get all webApi services
	WebApiServices []*everythingWebApiServicesWebApiService `json:"webApiServices"`
	// Get all soap services
	SoapServices []*everythingSoapServicesSoapService `json:"soapServices"`
	// Get all cluster properties
	ClusterProperties []*everythingClusterPropertiesClusterProperty `json:"clusterProperties"`
	// Retrieves all trusted certificates
	TrustedCerts []*everythingTrustedCertsCertificate `json:"trustedCerts"`
	// Get all Encapsulated Assertion Configurations
	EncassConfigs []*everythingEncassConfigsEncassConfig `json:"encassConfigs"`
	// Get all JDBC Connections
	JdbcConnections []*everythingJdbcConnectionsJdbcConnection `json:"jdbcConnections"`
	// Get xml schemas configured on this gateway
	Schemas []*everythingSchemasSchema `json:"schemas"`
	// The dtds configured on this gateway
	Dtds []*everythingDtdsDtd `json:"dtds"`
	// Get all fips configurations
	Fips []*everythingFipsFip `json:"fips"`
	// Get all ldap configurations
	Ldaps []*everythingLdapsLdap `json:"ldaps"`
	// Get all internal groups
	InternalGroups []*everythingInternalGroupsInternalGroup `json:"internalGroups"`
	// Get all fip groups
	FipGroups []*everythingFipGroupsFipGroup `json:"fipGroups"`
	// Get all internal users
	InternalUsers []*everythingInternalUsersInternalUser `json:"internalUsers"`
	// Get all fip users
	FipUsers []*everythingFipUsersFipUser `json:"fipUsers"`
	// Retrieves all keys
	Keys []*everythingKeysKey `json:"keys"`
	// Retrieves all secrets
	Secrets []*everythingSecretsSecret `json:"secrets"`
	// Get all Cassandra Connections
	CassandraConnections []*everythingCassandraConnectionsCassandraConnection `json:"cassandraConnections"`
	// Get all JMS Destinations
	JmsDestinations []*everythingJmsDestinationsJmsDestination `json:"jmsDestinations"`
	// Get all email listeners
	EmailListeners []*everythingEmailListenersEmailListener `json:"emailListeners"`
	// Get all listen ports
	ListenPorts []*everythingListenPortsListenPort `json:"listenPorts"`
	// Get all global policies
	GlobalPolicies []*everythingGlobalPoliciesGlobalPolicy `json:"globalPolicies"`
	// Retrieves all background task policies
	BackgroundTaskPolicies []*everythingBackgroundTaskPoliciesBackgroundTaskPolicy `json:"backgroundTaskPolicies"`
	// Retrieves all scheduled tasks
	ScheduledTasks []*everythingScheduledTasksScheduledTask `json:"scheduledTasks"`
}

// GetPolicyFragments returns everythingResponse.PolicyFragments, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetPolicyFragments() []*everythingPolicyFragmentsPolicyFragment {
	return v.PolicyFragments
}

// GetWebApiServices returns everythingResponse.WebApiServices, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetWebApiServices() []*everythingWebApiServicesWebApiService {
	return v.WebApiServices
}

// GetSoapServices returns everythingResponse.SoapServices, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetSoapServices() []*everythingSoapServicesSoapService {
	return v.SoapServices
}

// GetClusterProperties returns everythingResponse.ClusterProperties, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetClusterProperties() []*everythingClusterPropertiesClusterProperty {
	return v.ClusterProperties
}

// GetTrustedCerts returns everythingResponse.TrustedCerts, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetTrustedCerts() []*everythingTrustedCertsCertificate {
	return v.TrustedCerts
}

// GetEncassConfigs returns everythingResponse.EncassConfigs, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetEncassConfigs() []*everythingEncassConfigsEncassConfig {
	return v.EncassConfigs
}

// GetJdbcConnections returns everythingResponse.JdbcConnections, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetJdbcConnections() []*everythingJdbcConnectionsJdbcConnection {
	return v.JdbcConnections
}

// GetSchemas returns everythingResponse.Schemas, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetSchemas() []*everythingSchemasSchema { return v.Schemas }

// GetDtds returns everythingResponse.Dtds, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetDtds() []*everythingDtdsDtd { return v.Dtds }

// GetFips returns everythingResponse.Fips, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetFips() []*everythingFipsFip { return v.Fips }

// GetLdaps returns everythingResponse.Ldaps, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetLdaps() []*everythingLdapsLdap { return v.Ldaps }

// GetInternalGroups returns everythingResponse.InternalGroups, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetInternalGroups() []*everythingInternalGroupsInternalGroup {
	return v.InternalGroups
}

// GetFipGroups returns everythingResponse.FipGroups, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetFipGroups() []*everythingFipGroupsFipGroup { return v.FipGroups }

// GetInternalUsers returns everythingResponse.InternalUsers, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetInternalUsers() []*everythingInternalUsersInternalUser {
	return v.InternalUsers
}

// GetFipUsers returns everythingResponse.FipUsers, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetFipUsers() []*everythingFipUsersFipUser { return v.FipUsers }

// GetKeys returns everythingResponse.Keys, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetKeys() []*everythingKeysKey { return v.Keys }

// GetSecrets returns everythingResponse.Secrets, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetSecrets() []*everythingSecretsSecret { return v.Secrets }

// GetCassandraConnections returns everythingResponse.CassandraConnections, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetCassandraConnections() []*everythingCassandraConnectionsCassandraConnection {
	return v.CassandraConnections
}

// GetJmsDestinations returns everythingResponse.JmsDestinations, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetJmsDestinations() []*everythingJmsDestinationsJmsDestination {
	return v.JmsDestinations
}

// GetEmailListeners returns everythingResponse.EmailListeners, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetEmailListeners() []*everythingEmailListenersEmailListener {
	return v.EmailListeners
}

// GetListenPorts returns everythingResponse.ListenPorts, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetListenPorts() []*everythingListenPortsListenPort {
	return v.ListenPorts
}

// GetGlobalPolicies returns everythingResponse.GlobalPolicies, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetGlobalPolicies() []*everythingGlobalPoliciesGlobalPolicy {
	return v.GlobalPolicies
}

// GetBackgroundTaskPolicies returns everythingResponse.BackgroundTaskPolicies, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetBackgroundTaskPolicies() []*everythingBackgroundTaskPoliciesBackgroundTaskPolicy {
	return v.BackgroundTaskPolicies
}

// GetScheduledTasks returns everythingResponse.ScheduledTasks, and is useful for accessing the field via an interface.
func (v *everythingResponse) GetScheduledTasks() []*everythingScheduledTasksScheduledTask {
	return v.ScheduledTasks
}

// everythingScheduledTasksScheduledTask includes the requested fields of the GraphQL type ScheduledTask.
// The GraphQL type's documentation follows.
//
// A scheduled task
type everythingScheduledTasksScheduledTask struct {
	// The name of the scheduled task
	Name string `json:"name"`
	// The name of the policy for scheduled task
	PolicyName string `json:"policyName"`
	// Scheduled task type
	JobType JobType `json:"jobType"`
	// The cron job expression
	CronExpression string `json:"cronExpression"`
	// Whether to execute on single node
	ExecuteOnSingleNode bool `json:"executeOnSingleNode"`
	// Whether to execute the RECURRING task now?
	ExecuteOnCreation bool `json:"executeOnCreation"`
	// Execution date of a ONE_TIME task
	ExecutionDate time.Time `json:"executionDate"`
	// The scheduled task status
	Status                JobStatus `json:"status"`
	RunAsUser             string    `json:"runAsUser"`
	RunAsUserProviderName string    `json:"runAsUserProviderName"`
	// The configuration checksum
	Checksum string `json:"checksum"`
}

// GetName returns everythingScheduledTasksScheduledTask.Name, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetName() string { return v.Name }

// GetPolicyName returns everythingScheduledTasksScheduledTask.PolicyName, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetPolicyName() string { return v.PolicyName }

// GetJobType returns everythingScheduledTasksScheduledTask.JobType, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetJobType() JobType { return v.JobType }

// GetCronExpression returns everythingScheduledTasksScheduledTask.CronExpression, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetCronExpression() string { return v.CronExpression }

// GetExecuteOnSingleNode returns everythingScheduledTasksScheduledTask.ExecuteOnSingleNode, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetExecuteOnSingleNode() bool {
	return v.ExecuteOnSingleNode
}

// GetExecuteOnCreation returns everythingScheduledTasksScheduledTask.ExecuteOnCreation, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetExecuteOnCreation() bool {
	return v.ExecuteOnCreation
}

// GetExecutionDate returns everythingScheduledTasksScheduledTask.ExecutionDate, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetExecutionDate() time.Time { return v.ExecutionDate }

// GetStatus returns everythingScheduledTasksScheduledTask.Status, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetStatus() JobStatus { return v.Status }

// GetRunAsUser returns everythingScheduledTasksScheduledTask.RunAsUser, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetRunAsUser() string { return v.RunAsUser }

// GetRunAsUserProviderName returns everythingScheduledTasksScheduledTask.RunAsUserProviderName, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetRunAsUserProviderName() string {
	return v.RunAsUserProviderName
}

// GetChecksum returns everythingScheduledTasksScheduledTask.Checksum, and is useful for accessing the field via an interface.
func (v *everythingScheduledTasksScheduledTask) GetChecksum() string { return v.Checksum }

// everythingSchemasSchema includes the requested fields of the GraphQL type Schema.
// The GraphQL type's documentation follows.
//
// An XML Schema which can be referred to in policy, for example in the validate xml schema assertion
type everythingSchemasSchema struct {
	// A reference to the schema. This id is what is referred to in policy and is often mirror of the target namespace
	SystemId string `json:"systemId"`
	// The configuration checksum
	Checksum string `json:"checksum"`
	// The target namespace in the xml schema
	TargetNs string `json:"targetNs"`
	// An optional description for the schema
	Description string `json:"description"`
	// The content of XML schema
	Content string `json:"content"`
}

// GetSystemId returns everythingSchemasSchema.SystemId, and is useful for accessing the field via an interface.
func (v *everythingSchemasSchema) GetSystemId() string { return v.SystemId }

// GetChecksum returns everythingSchemasSchema.Checksum, and is useful for accessing the field via an interface.
func (v *everythingSchemasSchema) GetChecksum() string { return v.Checksum }

// GetTargetNs returns everythingSchemasSchema.TargetNs, and is useful for accessing the field via an interface.
func (v *everythingSchemasSchema) GetTargetNs() string { return v.TargetNs }

// GetDescription returns everythingSchemasSchema.Description, and is useful for accessing the field via an interface.
func (v *everythingSchemasSchema) GetDescription() string { return v.Description }

// GetContent returns everythingSchemasSchema.Content, and is useful for accessing the field via an interface.
func (v *everythingSchemasSchema) GetContent() string { return v.Content }

// everythingSecretsSecret includes the requested fields of the GraphQL type Secret.
// The GraphQL type's documentation follows.
//
// These secrets are used by gateway policies also for example by jdbc connection configurations
type everythingSecretsSecret struct {
	// Identify the password being stored. You may use letters, numbers, dashes, and underscores.
	// Names that contain spaces or periods are valid, but the resulting stored
	// password cannot be referenced via context variable.
	// Names that contain @ or $ are valid, but the resulting stored password cannot be referenced via context variable.
	Name string `json:"name"`
	// Password or PEM Private Key
	SecretType SecretType `json:"secretType"`
	// The configuration checksum
	Checksum string `json:"checksum"`
	// The goid for the Secret
	Goid string `json:"goid"`
	// Whether this secret can be referred to in policy via context variable ${secpass...
	VariableReferencable bool `json:"variableReferencable"`
	// Base64 encrypted secret. The encryption is compatible with openssl secret encryption
	// using cypher AES/CBC/PKCS5Padding. You can decrypt these values at command line
	// using this command:
	// > echo <secret> | openssl enc -d -aes-256-cbc -md sha256 -pass pass:<passphrase> -a
	Secret string `json:"secret"`
	// Description of the password. This is optional
	Description string `json:"description"`
}

// GetName returns everythingSecretsSecret.Name, and is useful for accessing the field via an interface.
func (v *everythingSecretsSecret) GetName() string { return v.Name }

// GetSecretType returns everythingSecretsSecret.SecretType, and is useful for accessing the field via an interface.
func (v *everythingSecretsSecret) GetSecretType() SecretType { return v.SecretType }

// GetChecksum returns everythingSecretsSecret.Checksum, and is useful for accessing the field via an interface.
func (v *everythingSecretsSecret) GetChecksum() string { return v.Checksum }

// GetGoid returns everythingSecretsSecret.Goid, and is useful for accessing the field via an interface.
func (v *everythingSecretsSecret) GetGoid() string { return v.Goid }

// GetVariableReferencable returns everythingSecretsSecret.VariableReferencable, and is useful for accessing the field via an interface.
func (v *everythingSecretsSecret) GetVariableReferencable() bool { return v.VariableReferencable }

// GetSecret returns everythingSecretsSecret.Secret, and is useful for accessing the field via an interface.
func (v *everythingSecretsSecret) GetSecret() string { return v.Secret }

// GetDescription returns everythingSecretsSecret.Description, and is useful for accessing the field via an interface.
func (v *everythingSecretsSecret) GetDescription() string { return v.Description }

// everythingSoapServicesSoapService includes the requested fields of the GraphQL type SoapService.
// The GraphQL type's documentation follows.
//
// A Soap service published on the Layer7 Gateway
type everythingSoapServicesSoapService struct {
	// The name of the service
	Name string `json:"name"`
	// The configuration checksum
	Checksum string `json:"checksum"`
	// The folder path to the service
	FolderPath string `json:"folderPath"`
	// Soap service resolvers
	Resolvers *everythingSoapServicesSoapServiceResolversSoapResolvers `json:"resolvers"`
	// The WSDL of the soap service
	Wsdl                 string `json:"wsdl"`
	WssProcessingEnabled bool   `json:"wssProcessingEnabled"`
	// Whether or not the published service is enabled
	Enabled bool `json:"enabled"`
	// Which http methods are allowed if not just POST
	MethodsAllowed []HttpMethod `json:"methodsAllowed"`
	// The policy and dependencies
	Policy *everythingSoapServicesSoapServicePolicy `json:"policy"`
}

// GetName returns everythingSoapServicesSoapService.Name, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetName() string { return v.Name }

// GetChecksum returns everythingSoapServicesSoapService.Checksum, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetChecksum() string { return v.Checksum }

// GetFolderPath returns everythingSoapServicesSoapService.FolderPath, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetFolderPath() string { return v.FolderPath }

// GetResolvers returns everythingSoapServicesSoapService.Resolvers, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetResolvers() *everythingSoapServicesSoapServiceResolversSoapResolvers {
	return v.Resolvers
}

// GetWsdl returns everythingSoapServicesSoapService.Wsdl, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetWsdl() string { return v.Wsdl }

// GetWssProcessingEnabled returns everythingSoapServicesSoapService.WssProcessingEnabled, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetWssProcessingEnabled() bool {
	return v.WssProcessingEnabled
}

// GetEnabled returns everythingSoapServicesSoapService.Enabled, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetEnabled() bool { return v.Enabled }

// GetMethodsAllowed returns everythingSoapServicesSoapService.MethodsAllowed, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetMethodsAllowed() []HttpMethod { return v.MethodsAllowed }

// GetPolicy returns everythingSoapServicesSoapService.Policy, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapService) GetPolicy() *everythingSoapServicesSoapServicePolicy {
	return v.Policy
}

// everythingSoapServicesSoapServicePolicy includes the requested fields of the GraphQL type Policy.
// The GraphQL type's documentation follows.
//
// Wrapper for the policy XML and the dependencies they include
type everythingSoapServicesSoapServicePolicy struct {
	// The policy XML
	Xml string `json:"xml"`
}

// GetXml returns everythingSoapServicesSoapServicePolicy.Xml, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapServicePolicy) GetXml() string { return v.Xml }

// everythingSoapServicesSoapServiceResolversSoapResolvers includes the requested fields of the GraphQL type SoapResolvers.
// The GraphQL type's documentation follows.
//
// Must have minimum (1 soapAction + baseUri) OR resolutionPath. You can have both too.
type everythingSoapServicesSoapServiceResolversSoapResolvers struct {
	// The resolution path to the service if not default /ssg/soap
	ResolutionPath string `json:"resolutionPath"`
}

// GetResolutionPath returns everythingSoapServicesSoapServiceResolversSoapResolvers.ResolutionPath, and is useful for accessing the field via an interface.
func (v *everythingSoapServicesSoapServiceResolversSoapResolvers) GetResolutionPath() string {
	return v.ResolutionPath
}

// everythingTrustedCertsCertificate includes the requested fields of the GraphQL type Certificate.
// The GraphQL type's documentation follows.
//
// An certificate that is trusted by the Gateway
type everythingTrustedCertsCertificate struct {
	// The name
	Name string `json:"name"`
	// The configuration checksum of this trusted certificate
	Checksum string `json:"checksum"`
	// The base 64 encoded string of this certificate
	CertBase64 string `json:"certBase64"`
	// Whether to perform hostname verification with this certificate
	VerifyHostname bool `json:"verifyHostname"`
	// Whether this certificate is a trust anchor
	TrustAnchor bool `json:"trustAnchor"`
	// The certificate is trusted for
	TrustedFor []TrustedForType `json:"trustedFor"`
	// The revocation check policy type
	RevocationCheckPolicyType PolicyUsageType `json:"revocationCheckPolicyType"`
}

// GetName returns everythingTrustedCertsCertificate.Name, and is useful for accessing the field via an interface.
func (v *everythingTrustedCertsCertificate) GetName() string { return v.Name }

// GetChecksum returns everythingTrustedCertsCertificate.Checksum, and is useful for accessing the field via an interface.
func (v *everythingTrustedCertsCertificate) GetChecksum() string { return v.Checksum }

// GetCertBase64 returns everythingTrustedCertsCertificate.CertBase64, and is useful for accessing the field via an interface.
func (v *everythingTrustedCertsCertificate) GetCertBase64() string { return v.CertBase64 }

// GetVerifyHostname returns everythingTrustedCertsCertificate.VerifyHostname, and is useful for accessing the field via an interface.
func (v *everythingTrustedCertsCertificate) GetVerifyHostname() bool { return v.VerifyHostname }

// GetTrustAnchor returns everythingTrustedCertsCertificate.TrustAnchor, and is useful for accessing the field via an interface.
func (v *everythingTrustedCertsCertificate) GetTrustAnchor() bool { return v.TrustAnchor }

// GetTrustedFor returns everythingTrustedCertsCertificate.TrustedFor, and is useful for accessing the field via an interface.
func (v *everythingTrustedCertsCertificate) GetTrustedFor() []TrustedForType { return v.TrustedFor }

// GetRevocationCheckPolicyType returns everythingTrustedCertsCertificate.RevocationCheckPolicyType, and is useful for accessing the field via an interface.
func (v *everythingTrustedCertsCertificate) GetRevocationCheckPolicyType() PolicyUsageType {
	return v.RevocationCheckPolicyType
}

// everythingWebApiServicesWebApiService includes the requested fields of the GraphQL type WebApiService.
// The GraphQL type's documentation follows.
//
// A Web API service published on the Layer7 Gateway
type everythingWebApiServicesWebApiService struct {
	// The name of the service
	Name string `json:"name"`
	// The configuration checksum
	Checksum string `json:"checksum"`
	// The resolution path to the service
	ResolutionPath string `json:"resolutionPath"`
	// The folder path to the service
	FolderPath string `json:"folderPath"`
	// The policy and dependencies
	Policy *everythingWebApiServicesWebApiServicePolicy `json:"policy"`
	// Whether or not the published service is enabled
	Enabled bool `json:"enabled"`
	// Which http methods are allowed
	MethodsAllowed []HttpMethod `json:"methodsAllowed"`
}

// GetName returns everythingWebApiServicesWebApiService.Name, and is useful for accessing the field via an interface.
func (v *everythingWebApiServicesWebApiService) GetName() string { return v.Name }

// GetChecksum returns everythingWebApiServicesWebApiService.Checksum, and is useful for accessing the field via an interface.
func (v *everythingWebApiServicesWebApiService) GetChecksum() string { return v.Checksum }

// GetResolutionPath returns everythingWebApiServicesWebApiService.ResolutionPath, and is useful for accessing the field via an interface.
func (v *everythingWebApiServicesWebApiService) GetResolutionPath() string { return v.ResolutionPath }

// GetFolderPath returns everythingWebApiServicesWebApiService.FolderPath, and is useful for accessing the field via an interface.
func (v *everythingWebApiServicesWebApiService) GetFolderPath() string { return v.FolderPath }

// GetPolicy returns everythingWebApiServicesWebApiService.Policy, and is useful for accessing the field via an interface.
func (v *everythingWebApiServicesWebApiService) GetPolicy() *everythingWebApiServicesWebApiServicePolicy {
	return v.Policy
}

// GetEnabled returns everythingWebApiServicesWebApiService.Enabled, and is useful for accessing the field via an interface.
func (v *everythingWebApiServicesWebApiService) GetEnabled() bool { return v.Enabled }

// GetMethodsAllowed returns everythingWebApiServicesWebApiService.MethodsAllowed, and is useful for accessing the field via an interface.
func (v *everythingWebApiServicesWebApiService) GetMethodsAllowed() []HttpMethod {
	return v.MethodsAllowed
}

// everythingWebApiServicesWebApiServicePolicy includes the requested fields of the GraphQL type Policy.
// The GraphQL type's documentation follows.
//
// Wrapper for the policy XML and the dependencies they include
type everythingWebApiServicesWebApiServicePolicy struct {
	// The policy XML
	Xml string `json:"xml"`
}

// GetXml returns everythingWebApiServicesWebApiServicePolicy.Xml, and is useful for accessing the field via an interface.
func (v *everythingWebApiServicesWebApiServicePolicy) GetXml() string { return v.Xml }

// The query or mutation executed by applyBundle.
const applyBundle_Operation = `
mutation applyBundle ($activeConnectors: [ActiveConnectorInput!]! = [], $administrativeUserAccountProperties: [AdministrativeUserAccountPropertyInput!]! = [], $backgroundTaskPolicies: [BackgroundTaskPolicyInput!]! = [], $cassandraConnections: [CassandraConnectionInput!]! = [], $clusterProperties: [ClusterPropertyInput!]! = [], $dtds: [DtdInput!]! = [], $emailListeners: [EmailListenerInput!]! = [], $encassConfigs: [EncassConfigInput!]! = [], $fipGroups: [FipGroupInput!]! = [], $fipUsers: [FipUserInput!]! = [], $fips: [FipInput!]! = [], $globalPolicies: [GlobalPolicyInput!]! = [], $internalGroups: [InternalGroupInput!]! = [], $internalSoapServices: [SoapServiceInput!]! = [], $internalUsers: [InternalUserInput!]! = [], $internalWebApiServices: [WebApiServiceInput!]! = [], $jdbcConnections: [JdbcConnectionInput!]! = [], $jmsDestinations: [JmsDestinationInput!]! = [], $keys: [KeyInput!]! = [], $ldaps: [LdapInput!]! = [], $listenPorts: [ListenPortInput!]! = [], $passwordPolicies: [PasswordPolicyInput!]! = [], $policyFragments: [PolicyFragmentInput!]! = [], $revocationCheckPolicies: [RevocationCheckPolicyInput!]! = [], $scheduledTasks: [ScheduledTaskInput!]! = [], $logSinks: [LogSinkInput!]! = [], $schemas: [SchemaInput!]! = [], $secrets: [SecretInput!]! = [], $httpConfigurations: [HttpConfigurationInput!]! = [], $customKeyValues: [CustomKeyValueInput!]! = [], $serverModuleFiles: [ServerModuleFileInput!]! = [], $serviceResolutionConfigs: [ServiceResolutionConfigInput!]! = [], $folders: [FolderInput!]! = [], $smConfigs: [SMConfigInput!]! = [], $soapServices: [SoapServiceInput!]! = [], $trustedCerts: [TrustedCertInput!]! = [], $webApiServices: [WebApiServiceInput!]! = []) {
	setServerModuleFiles(input: $serverModuleFiles) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setClusterProperties(input: $clusterProperties) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setServiceResolutionConfigs(input: $serviceResolutionConfigs) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setPasswordPolicies(input: $passwordPolicies) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setAdministrativeUserAccountProperties(input: $administrativeUserAccountProperties) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setFolders(input: $folders) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setRevocationCheckPolicies(input: $revocationCheckPolicies) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setTrustedCerts(input: $trustedCerts) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setSecrets(input: $secrets) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setHttpConfigurations(input: $httpConfigurations) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setCustomKeyValues(input: $customKeyValues) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setSchemas(input: $schemas) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setDtds(input: $dtds) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setJdbcConnections(input: $jdbcConnections) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setFips(input: $fips) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setLdaps(input: $ldaps) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setFipGroups(input: $fipGroups) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setInternalGroups(input: $internalGroups) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setFipUsers(input: $fipUsers) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setInternalUsers(input: $internalUsers) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setCassandraConnections(input: $cassandraConnections) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setJmsDestinations(input: $jmsDestinations) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setSMConfigs(input: $smConfigs) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setPolicyFragments(input: $policyFragments) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setEncassConfigs(input: $encassConfigs) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setGlobalPolicies(input: $globalPolicies) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setBackgroundTaskPolicies(input: $backgroundTaskPolicies) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setWebApiServices(input: $webApiServices) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setSoapServices(input: $soapServices) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setInternalWebApiServices(input: $internalWebApiServices) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setInternalSoapServices(input: $internalSoapServices) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setEmailListeners(input: $emailListeners) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setListenPorts(input: $listenPorts) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setActiveConnectors(input: $activeConnectors) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setScheduledTasks(input: $scheduledTasks) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setLogSinks(input: $logSinks) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
	setKeys(input: $keys) {
		detailedStatus {
			action
			status
			description
			source {
				name
				value
			}
			target {
				name
				value
			}
		}
	}
}
`

func applyBundle(
	ctx context.Context,
	client graphql.Client,
	activeConnectors []*ActiveConnectorInput,
	administrativeUserAccountProperties []*AdministrativeUserAccountPropertyInput,
	backgroundTaskPolicies []*BackgroundTaskPolicyInput,
	cassandraConnections []*CassandraConnectionInput,
	clusterProperties []*ClusterPropertyInput,
	dtds []*DtdInput,
	emailListeners []*EmailListenerInput,
	encassConfigs []*EncassConfigInput,
	fipGroups []*FipGroupInput,
	fipUsers []*FipUserInput,
	fips []*FipInput,
	globalPolicies []*GlobalPolicyInput,
	internalGroups []*InternalGroupInput,
	internalSoapServices []*SoapServiceInput,
	internalUsers []*InternalUserInput,
	internalWebApiServices []*WebApiServiceInput,
	jdbcConnections []*JdbcConnectionInput,
	jmsDestinations []*JmsDestinationInput,
	keys []*KeyInput,
	ldaps []*LdapInput,
	listenPorts []*ListenPortInput,
	passwordPolicies []*PasswordPolicyInput,
	policyFragments []*PolicyFragmentInput,
	revocationCheckPolicies []*RevocationCheckPolicyInput,
	scheduledTasks []*ScheduledTaskInput,
	logSinks []*LogSinkInput,
	schemas []*SchemaInput,
	secrets []*SecretInput,
	httpConfigurations []*HttpConfigurationInput,
	customKeyValues []*CustomKeyValueInput,
	serverModuleFiles []*ServerModuleFileInput,
	serviceResolutionConfigs []*ServiceResolutionConfigInput,
	folders []*FolderInput,
	smConfigs []*SMConfigInput,
	soapServices []*SoapServiceInput,
	trustedCerts []*TrustedCertInput,
	webApiServices []*WebApiServiceInput,
) (*applyBundleResponse, error) {
	req := &graphql.Request{
		OpName: "applyBundle",
		Query:  applyBundle_Operation,
		Variables: &__applyBundleInput{
			ActiveConnectors:                    activeConnectors,
			AdministrativeUserAccountProperties: administrativeUserAccountProperties,
			BackgroundTaskPolicies:              backgroundTaskPolicies,
			CassandraConnections:                cassandraConnections,
			ClusterProperties:                   clusterProperties,
			Dtds:                                dtds,
			EmailListeners:                      emailListeners,
			EncassConfigs:                       encassConfigs,
			FipGroups:                           fipGroups,
			FipUsers:                            fipUsers,
			Fips:                                fips,
			GlobalPolicies:                      globalPolicies,
			InternalGroups:                      internalGroups,
			InternalSoapServices:                internalSoapServices,
			InternalUsers:                       internalUsers,
			InternalWebApiServices:              internalWebApiServices,
			JdbcConnections:                     jdbcConnections,
			JmsDestinations:                     jmsDestinations,
			Keys:                                keys,
			Ldaps:                               ldaps,
			ListenPorts:                         listenPorts,
			PasswordPolicies:                    passwordPolicies,
			PolicyFragments:                     policyFragments,
			RevocationCheckPolicies:             revocationCheckPolicies,
			ScheduledTasks:                      scheduledTasks,
			LogSinks:                            logSinks,
			Schemas:                             schemas,
			Secrets:                             secrets,
			HttpConfigurations:                  httpConfigurations,
			CustomKeyValues:                     customKeyValues,
			ServerModuleFiles:                   serverModuleFiles,
			ServiceResolutionConfigs:            serviceResolutionConfigs,
			Folders:                             folders,
			SmConfigs:                           smConfigs,
			SoapServices:                        soapServices,
			TrustedCerts:                        trustedCerts,
			WebApiServices:                      webApiServices,
		},
	}
	var err error

	var data applyBundleResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deleteL7PortalApi.
const deleteL7PortalApi_Operation = `
mutation deleteL7PortalApi ($webApiServiceResolutionPaths: [String!]!, $policyFragmentNames: [String!]!) {
	deleteWebApiServices(resolutionPaths: $webApiServiceResolutionPaths) {
		detailedStatus {
			status
			description
		}
	}
	deletePolicyFragments(names: $policyFragmentNames) {
		detailedStatus {
			status
			description
		}
	}
}
`

func deleteL7PortalApi(
	ctx context.Context,
	client graphql.Client,
	webApiServiceResolutionPaths []string,
	policyFragmentNames []string,
) (*deleteL7PortalApiResponse, error) {
	req := &graphql.Request{
		OpName: "deleteL7PortalApi",
		Query:  deleteL7PortalApi_Operation,
		Variables: &__deleteL7PortalApiInput{
			WebApiServiceResolutionPaths: webApiServiceResolutionPaths,
			PolicyFragmentNames:          policyFragmentNames,
		},
	}
	var err error

	var data deleteL7PortalApiResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by everything.
const everything_Operation = `
query everything {
	policyFragments {
		name
		checksum
		folderPath
		policy {
			xml
		}
		guid
	}
	webApiServices {
		name
		checksum
		resolutionPath
		folderPath
		policy {
			xml
		}
		enabled
		methodsAllowed
	}
	soapServices {
		name
		checksum
		folderPath
		resolvers {
			resolutionPath
		}
		wsdl
		wssProcessingEnabled
		enabled
		methodsAllowed
		policy {
			xml
		}
	}
	clusterProperties {
		name
		checksum
		value
	}
	trustedCerts {
		name
		checksum
		certBase64
		verifyHostname
		trustAnchor
		trustedFor
		revocationCheckPolicyType
	}
	encassConfigs {
		name
		checksum
		policyName
		guid
		encassArgs {
			name
			type
			ordinal
			guiLabel
			guiPrompt
		}
		encassResults {
			name
			type
		}
	}
	jdbcConnections {
		name
		checksum
		driverClass
		jdbcUrl
		enabled
		username
		password
		minPoolSize
		maxPoolSize
		properties {
			name
			value
		}
	}
	schemas {
		systemId
		checksum
		targetNs
		description
		content
	}
	dtds {
		systemId
		checksum
		publicId
		description
		content
	}
	fips {
		name
		checksum
		goid
		enableCredentialTypeX509
		enableCredentialTypeSaml
		certificateReferences {
			thumbprintSha1
		}
	}
	ldaps {
		name
		goid
		ldapUrls
		ldapsClientAuthEnabled
		ldapsClientKeyAlias
		searchBase
		writable
		bindDn
		bindPassword
		userMappings {
			objClass
			nameAttrName
			loginAttrName
			passwdAttrName
			firstNameAttrName
			lastNameAttrName
			emailNameAttrName
			kerberosAttrName
			kerberosEnterpriseAttrName
			userCertAttrName
			passwdType {
				val
			}
		}
		groupMappings {
			objClass
			nameAttrName
			memberAttrName
			memberStrategy {
				val
			}
		}
		checksum
	}
	internalGroups {
		name
		checksum
		goid
		description
	}
	fipGroups {
		name
		providerName
		checksum
		goid
		description
	}
	internalUsers {
		name
		goid
		checksum
		memberOf {
			name
		}
		login
		password
		firstName
		lastName
		email
		certBase64
	}
	fipUsers {
		name
		providerName
		checksum
		goid
		subjectDn
		memberOf {
			name
		}
		login
		firstName
		lastName
		email
		certBase64
	}
	keys {
		alias
		checksum
		goid
		p12
	}
	secrets {
		name
		secretType
		checksum
		goid
		variableReferencable
		secret
		description
	}
	cassandraConnections {
		goid
		name
		keyspace
		contactPoints
		port
		username
		securePasswordName
		sslEnabled
		cipherSuites
		properties {
			name
			value
		}
		checksum
	}
	jmsDestinations {
		name
		direction
		providerType
		initialContextFactoryClassname
		connectionFactoryName
		jndiUrl
		jndiUsername
		jndiPassword
		template
		enabled
		jndiSslDetails {
			sslEnabled
			sslForAuthenticationOnly
			sslVerifyServerCertificate
			sslVerifyServerHostname
			sslClientKeyAlias
		}
		destinationType
		destinationName
		destinationUsername
		destinationPassword
		destinationSslDetails {
			sslEnabled
			sslForAuthenticationOnly
			sslVerifyServerCertificate
			sslVerifyServerHostname
			sslClientKeyAlias
		}
		template
		enabled
		properties {
			name
			value
		}
		checksum
	}
	emailListeners {
		goid
		name
		enabled
		hostname
		port
		username
		password
		serverType
		sslEnabled
		deleteOnReceive
		folder
		pollInterval
		hardwiredServiceName
		properties {
			name
			value
		}
		checksum
	}
	listenPorts {
		name
		goid
		enabled
		checksum
		port
		protocol
		enabledFeatures
		hardwiredServiceName
		tlsSettings {
			clientAuthentication
			cipherSuites
			useCipherSuitesOrder
			tlsVersions
			keyAlias
		}
		properties {
			name
			value
		}
		checksum
	}
	globalPolicies {
		name
		tag
		folderPath
		policy {
			xml
		}
		guid
		goid
		checksum
	}
	backgroundTaskPolicies {
		name
		folderPath
		guid
		policy {
			xml
		}
		checksum
	}
	scheduledTasks {
		name
		policyName
		jobType
		cronExpression
		executeOnSingleNode
		executeOnCreation
		executionDate
		status
		runAsUser
		runAsUserProviderName
		checksum
	}
}
`

func everything(
	ctx context.Context,
	client graphql.Client,
) (*everythingResponse, error) {
	req := &graphql.Request{
		OpName: "everything",
		Query:  everything_Operation,
	}
	var err error

	var data everythingResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
