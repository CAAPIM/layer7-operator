apiVersion: security.brcmlabs.com/v1
kind: Gateway
metadata:
  name: ssg
spec:
  version: "11.0.00_CR2"
  license:
    accept: false
    secretName: gateway-license
  app:
    replicas: 1
    image: caapim/gateway:11.0.00_CR2
    imagePullPolicy: IfNotPresent
    # serviceAccount:
    #   create: true
    #   name: ssg-serviceaccount
    updateStrategy:
      type: rollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 2
    resources:
      requests:
        memory: 8Gi
        cpu: 3
      limits:
        memory: 8Gi
        cpu: 3
    autoscaling:
      enabled: false
    redis:
      enabled: true
      type: standalone
      standalone:
        hostname: 192.168.1.10
        port: 30036
      # auth:
      #   enabled: false
      #   username: redis-user
      #   passwordPlaintext: redis-pass
        #passwordEncoded: encoded-redis-pass
      # tls:
      #   enabled: false
      #   verifyPeer: true
      #   crt: |+
      #     -----BEGIN CERTIFICATE-----
      #     MIIEPzCCAyegAwIBAgIQeU+e4GXMcNWtPvtYtGsxejANBgkqhkiG9w0BAQsFADAT
      #     MREwDwYDVQQDEwhyZWRpcy1jYTAeFw0yMzEyMDgxNzA0MjRaFw0yNDEyMDcxNzA0
      #     MjRaMBkxFzAVBgNVBAMTDnNlbnRpbmVsLXJlZGlzMIIBIjANBgkqhkiG9w0BAQEF
      #     AAOCAQ8AMIIBCgKCAQEAsWKC5hOfxscAxaqnkz/u4zCImNNhxrBn6mJUIsDQk+0r
      #     FZ46ACK1ViYCwezV/6rKOGm4zQYorTn/lUGXWX23cc4YbKHFPneLPW7ZSCHd65/V
      #     TUPIpxGiwbzrWMq7RWGMPrXlxISIqQsHYH+1To5PvWUn0CQUpcOWTv7NpYql7ugy
      #     GrO77y2PLa0KXsJ/Z2q6VSAoBV51nGmVMOhp0dWuKmHJKYZ4R6Xkj19FrtusZFDh
      #     02mLWIwgZlnAU1egy7LXdkWhkrD1QoVQoY+OvEVzyeAmOz1mxzuwnGlE5LE5B/xa
      #     dhL8wGwRNOxizOrKD46UQN1gOPf3qt4Qt4qAOIUcOwIDAQABo4IBhzCCAYMwDgYD
      #     VR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNV
      #     HRMBAf8EAjAAMB8GA1UdIwQYMBaAFPyHIhBglky8kYnBsdPBhb81SrnFMIIBIQYD
      #     VR0RBIIBGDCCARSCKCouc2VudGluZWwtcmVkaXMucmVkaXMuc3ZjLmNsdXN0ZXIu
      #     bG9jYWyCLXNlbnRpbmVsLXJlZGlzLW1hc3Rlci5yZWRpcy5zdmMuY2x1c3Rlci5s
      #     b2NhbIIvKi5zZW50aW5lbC1yZWRpcy1tYXN0ZXIucmVkaXMuc3ZjLmNsdXN0ZXIu
      #     bG9jYWyCMSouc2VudGluZWwtcmVkaXMtaGVhZGxlc3MucmVkaXMuc3ZjLmNsdXN0
      #     ZXIubG9jYWyCL3NlbnRpbmVsLXJlZGlzLWhlYWRsZXNzLnJlZGlzLnN2Yy5jbHVz
      #     dGVyLmxvY2FsggkxMjcuMC4wLjGCCWxvY2FsaG9zdIIOc2VudGluZWwtcmVkaXMw
      #     DQYJKoZIhvcNAQELBQADggEBAAyYb2dtzhJaVe3H9NaYxBne98wB+TQ0sfQ7S5xd
      #     LOMBOYShutQ4AYTR2z/lBApuM6rGEXJH+kWheNJ3XYwfcazYdUVF4TYbvgXwlAWX
      #     c51Bv2pvN8d3Gm/snSkEHfwXwdtPxr0JXoJ6aFpCzIpkcWYgYdGWL9C+YnYV7CSQ
      #     diDTCBfjJUD6znxaSTHzrJSGxF10dQIZk7WckzKiCmaCKMtx9T0x2YHNQfHVIRUz
      #     l5ANpWC8RhBaq9klUmMDn3Sk9huL+cxSnOK5wAxk8gmZxr0Xupbb6hRG6QJ+Wv4P
      #     1C6GAAf5Obxk6iFTvVGg+dpE5XuSK132MQAVnglXQ/9iV60=
      #     -----END CERTIFICATE-----
      # sentinel:
      #   masterSet: mymaster
      #   nodes:
      #   - sentinel-redis-node-0.sentinel-redis-headless.redis.svc.cluster.local:26379
      #   - sentinel-redis-node-1.sentinel-redis-headless.redis.svc.cluster.local:26379
      #   - sentinel-redis-node-2.sentinel-redis-headless.redis.svc.cluster.local:26379
    bundle: []
      # - type: graphman
      #   source: secret
      #   name: graphman-portal-bootstrap-bundle
    repositoryReferences: []
      # - name: l7-gw-myframework
      #   enabled: true
      #   type: dynamic
      #   encryption:
      #     existingSecret: graphman-encryption-secret
      #     key: FRAMEWORK_ENCRYPTION_PASSPHRASE
      # - name: l7-gw-myapis
      #   enabled: true
      #   type: dynamic
      #   encryption:
      #     existingSecret: graphman-encryption-secret
      #     key: APIS_ENCRYPTION_PASSPHRASE
      # - name: l7-gw-mysubscriptions
      #   enabled: true
      #   type: dynamic
      #   encryption:
      #     existingSecret: graphman-encryption-secret
      #     key: SUBSCRIPTIONS_ENCRYPTION_PASSPHRASE
    portalReference:
      enabled: true
      portalName: dev-portal
      initContainerImagePullPolicy: Always
    bootstrap:
      script:
        enabled: true
    initContainers:
    - name: gateway-init
      image: harbor.sutraone.com/operator/gateway-portal-init:1.0.0
      imagePullPolicy: Always
      volumeMounts:
      - name: config-directory
        mountPath: /opt/docker/custom
    hazelcast:
      external: false
      endpoint: hazelcast.example.com:5701
    management:
      secretName: gateway-secret
      #username: admin
      #password: 7layer
      # Management port requires a separate service...
      service:
        enabled: true
        #annotations:
          # cloud.google.com/load-balancer-type: "Internal"
        type: LoadBalancer
        ports:
        - name: management
          port: 9443
          targetPort: 9443
          protocol: TCP   
      restman:
        enabled: false
      graphman:
        enabled: true
        initContainerImage: docker.io/layer7api/graphman-static-init:1.0.1
      cluster:
        #password: 7layer
        hostname: mydevgw.brcmlabs.com
      database:
        enabled: false # this runs the gateway in dbbacked/ephemeral mode
      #  jdbcUrl: "jdbc:mysql://cluster1-haproxy.pxc.svc.cluster.local:3306/ssg"
      #  username: "gateway"
      #  password: "ACm8BDr3Rfk2Flx9V"
    java:
      jvmHeap:
        calculate: true
        percentage: 50
        default: 4g
      extraArgs:
      - -Dcom.l7tech.server.audit.message.saveToInternal=false
      - -Dcom.l7tech.server.audit.admin.saveToInternal=false
      - -Dcom.l7tech.server.audit.system.saveToInternal=false
      - -Dcom.l7tech.server.audit.log.format=json
      - -Djava.util.logging.config.file=/opt/SecureSpan/Gateway/node/default/etc/conf/log-override.properties
      - -Dcom.l7tech.security.ssl.hostAllowWildcard=true
      - -Dcom.l7tech.server.pkix.useDefaultTrustAnchors=true
      #- -Dcom.l7tech.bootstrap.autoTrustSslKey=trustAnchor,TrustedFor.SSL,TrustedFor.SAML_ISSUER
    listenPorts:
      harden: true
      custom:
        enabled: false
      ports: []
    cwp:
      enabled: true
      properties:
        - name: io.httpsHostAllowWildcard
          value: "true"
        - name: log.levels
          value: |
            com.l7tech.level = CONFIG
            com.l7tech.server.policy.variable.ServerVariables.level = SEVERE
            com.l7tech.external.assertions.odata.server.producer.jdbc.GenerateSqlQuery.level = SEVERE
            com.l7tech.server.policy.assertion.ServerSetVariableAssertion.level = SEVERE
            com.l7tech.external.assertions.comparison.server.ServerComparisonAssertion = SEVERE
        - name: audit.setDetailLevel.FINE
          value: 152 7101 7103 9648 9645 7026 7027 4155 150 4716 4114 6306 4100 9655 150 151 11000 4104
    system:
      properties: |-
        # Default Gateway system properties
        # Configuration properties for shared state extensions.
        # com.l7tech.server.extension.sharedKeyValueStoreProvider=redis
        # com.l7tech.server.extension.sharedCounterProvider=ssgdb
        com.l7tech.server.extension.sharedRateLimiterProvider=ssgdb
        com.l7tech.server.extension.sharedClusterInfoProvider=ssgdb
        # By default, FIPS module will block an RSA modulus from being used for encryption if it has been used for
        # signing, or visa-versa. Set true to disable this default behaviour and remain backwards compatible.
        com.safelogic.cryptocomply.rsa.allow_multi_use=true
        # Specifies the type of Trust Store (JKS/PKCS12) provided by AdoptOpenJDK that is used by Gateway.
        # Must be set correctly when Gateway is running in FIPS mode. If not specified it will default to PKCS12.
        javax.net.ssl.trustStoreType=jks
        com.l7tech.server.clusterStaleNodeCleanupTimeoutSeconds=86400
        # Additional properties go here
        org.apache.xml.security.ignoreLineBreaks=true
        # Redis configuration - uncomment to use Redis
        com.l7tech.server.extension.sharedKeyValueStoreProvider=redis
        com.l7tech.server.extension.sharedCounterProvider=redis
        com.l7tech.server.extension.sharedRateLimiterProvider=redis

    service:
      # annotations:
      type: ClusterIP
      ports:
      - name: https
        port: 8443
        targetPort: 8443
        protocol: TCP
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        cert-manager.io/cluster-issuer: "brcmlabs-issuer"
        # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      tls:
      - hosts: 
        - mydevgw.brcmlabs.com
        secretName: brcmlabs
      rules:
      - host: mydevgw.brcmlabs.com
    # containerSecurityContext:
    #   runAsNonRoot: true
    #   runAsUser: 1000669998
    #   capabilities:
    #     drop:
    #     - ALL
    #   allowPrivilegeEscalation: false
    # podSecurityContext:
    #   runAsUser: 1000669998
    #   runAsGroup: 1000669998