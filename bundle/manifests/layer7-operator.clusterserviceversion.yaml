apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "security.brcmlabs.com/v1",
          "kind": "Gateway",
          "metadata": {
            "name": "ssg"
          },
          "spec": {
            "app": {
              "image": "docker.io/caapim/gateway:11.0.00_CR2",
              "management": {
                "cluster": {
                  "hostname": "gateway.brcmlabs.com",
                  "password": "7layer"
                },
                "password": "7layer",
                "username": "admin"
              },
              "replicas": 1,
              "service": {
                "ports": [
                  {
                    "name": "https",
                    "port": 8443,
                    "protocol": "TCP",
                    "targetPort": 8443
                  },
                  {
                    "name": "management",
                    "port": 9443,
                    "protocol": "TCP",
                    "targetPort": 9443
                  }
                ],
                "type": "LoadBalancer"
              }
            },
            "license": {
              "accept": false,
              "secretName": "gateway-license"
            },
            "version": "11.0.00_CR2"
          },
          "status": {}
        },
        {
          "apiVersion": "security.brcmlabs.com/v1",
          "kind": "Repository",
          "metadata": {
            "name": "my-repository"
          },
          "spec": {
            "auth": {
              "token": "token",
              "username": "username",
              "vendor": "Github"
            },
            "branch": "main",
            "enabled": true,
            "endpoint": "https://github.com/\u003cusername\u003e/\u003crepository\u003e",
            "name": "my-repository"
          }
        },
        {
          "apiVersion": "security.brcmlabs.com/v1alpha1",
          "kind": "L7Api",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "layer7-operator",
              "app.kubernetes.io/instance": "l7api-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "l7api",
              "app.kubernetes.io/part-of": "layer7-operator"
            },
            "name": "l7api-sample"
          },
          "spec": null
        },
        {
          "apiVersion": "security.brcmlabs.com/v1alpha1",
          "kind": "L7Portal",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "layer7-operator",
              "app.kubernetes.io/instance": "l7portal-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "l7portal",
              "app.kubernetes.io/part-of": "layer7-operator"
            },
            "name": "dev-portal"
          },
          "spec": {
            "auth": {
              "clientId": "3d8f8967b8e54909b5e9a86e09063406",
              "clientSecret": "b40a829f046a451db15aa8be503ea7b3",
              "endpoint": "dev-ssg.brcmlabs.com"
            },
            "deploymentTags": [
              "ssg"
            ],
            "enabled": true,
            "endpoint": "dev-ssg.brcmlabs.com",
            "enrollmentBundle": "",
            "mode": "auto",
            "name": "portal"
          }
        }
      ]
    capabilities: Basic Install
    certified: "false"
    createdAt: "2024-02-05T06:05:29Z"
    operatorframework.io/suggested-namespace: layer7-operator-system
    operators.operatorframework.io/builder: operator-sdk-v1.33.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
    repository: github.com/caapim/layer7-operator
    support: Broadcom Community
  name: layer7-operator.v1.0.5
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Gateway is the Schema for the Gateway Custom Resource
      displayName: Gateway
      kind: Gateway
      name: gateways.security.brcmlabs.com
      statusDescriptors:
      - description: Host is the Gateway Cluster Hostname
        displayName: Host
        path: host
      version: v1
    - description: L7Api is the Schema for the l7apis API
      displayName: L7 Api
      kind: L7Api
      name: l7apis.security.brcmlabs.com
      version: v1alpha1
    - description: L7Portal is the Schema for the l7portals API
      displayName: L7 Portal
      kind: L7Portal
      name: l7portals.security.brcmlabs.com
      version: v1alpha1
    - description: Repository is the Schema for the repositories API
      displayName: Repository
      kind: Repository
      name: repositories.security.brcmlabs.com
      version: v1
  description: |
    The Layer7 Operator manages Layer7 API Gateways.
  displayName: Layer7 Operator
  icon:
  - base64data: iVBORw0KGgoAAAANSUhEUgAAAWwAAAAxCAYAAAD++JMkAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAIdUAACHVAQSctJ0AADPpSURBVHhe7Z0JmBTV1fcHlJkeVlkUWWVfp7tnEJBdRTZBZBEXFiHRBLcIKnHBaIwa4xqNGwbNq9EYNUhco/gqSiIIzvTMsMimILvs+w6z1Pf711QN1d3VPd3TM+b9kj7Pc57qrrr33HPvPed/z711qyolETJSLj9tXh3/GXlpWW1y07oMzvP4f5WT7n8jkObLyUn1bgmk+Q9kp/uLAx7/cf5vz0nzLs5N97+Z6/HenZ3quyQ3NaPD/DreukZKSlVLZJKSlKQkJakiaRZAvTTV2z7gyRybV933HIC8NMfjPQQYG7FwTroPEPcezvH4V+Sl+p/PT/WOyU/NbPtxSps0q4gkJSlJSUpSImSkGFW+TuveEtC9KSfd+2lOmn9PKBjHywE4L823i6h7Tm6qd2ogrXPrZMSdpCQlKUkJ0JKGvhrZ6ZmXE0nPEVArSnYD4PKy5GWn+fZmp2V8mZfuvfTjlCHJaDtJSUpSkuKh+4h2lxBV53h8fwx4BNT+IjfArSgm4i4OeHx7clJ9zy5KzWxLtH2apUqSkpSkJCUpEi1P6ZSa6/H1yUvzLahsoA5lgLsA4P5sUVrmwIUpPdItlZKUpCQlKUmh9F1Km7ScdN/oQJov78cGa5sD6T4j2+PNX5zqH5mbcm41S7Uk/Ztp1qxZp02dOvWMgQMHtuzcuXPHjIyMDsOHD2+pc7pmJUvS/2GaN2/e6bfeems9Zx/q98MPP1zXMIx/yz2kmTNnVrvrrrvqn3/++W2kU7du3dqNGDGixX333VfbSvJfQ9dcc02tc889t0P37t07TZo06QxOVSm54kIG4Ahgjsr2+JYA2v8WsHZywONfvSjVe/G8lPNPt1RMiGgAz6hRozKGDBnS45JLLulZXh46dGgvZGRxPOfGG2+siWHFZehjxoypR95MN9llsXQX42SZPXv2POfyyy+viaNF7tQECedO79WrV2a7du1uOvPMM1+oXbv2uzVr1vwiLS1tQXp6+vxatWp9UadOnfcbNmw4o23bttf16NHDqzxW9koj6l2HwcKnvnBrp4svvrj3ZZdd1nnatGk1rCwJ0dVXX10f2+k2ePDgsLKiMTqqv3x9+/ZtJp3/HQPb5MmTq/fp0+dc+ucX9OFM+usD9WFqaupX9OEC/a5bt+57Z5999rPt27e/Tv1dmX0oexUYAUy9mzdvfsdZZ531P9jVh9jUvyyd/oVOczk3G7v6PTqNu/DCC9vTjuW+v0XbnzZy5Mh2gwYN6hXah/qPvXQdN25cXSt5uYgB53RktGKwCbNJyhZunKfB0koeROiXmpWV1a9x48ZPNmvW7PGWLVs+zu8/MIAN1jUr2SkyQPLc9C49crVV7/8AWJdwJqDdOTff07nXrApY0/b5fC0xjo8xiE0Yx+ZEGBkbAatV9erVm9u6detfKdKMFbhJP6R+/frzq1evvsVNdjTGoM2jyq9Ro8Yq5HyKIz580UUXeSm/QgY2kYCO9hqOE7+Onmso90C1atUKTjvttOIqVaoYNletWtXk008/vYDr+0m7ulGjRq94vd4BDEyV5vToddkZZ5yx2OPxbAttIzH6buf6AgaaIVaWhKhNmzbDaesVyN4aWlY0Rr/NtMkG+mol+sxX23Tp0mUyANHOspdKG2w1QFDWJU2aNHmT8tfRPwfUT/Sh2Weh/cj1k+i8F7D8FtB4g4BgWAUPMFUBrwboNJ52+EhtQ5mH4ELKD7Iri4u5dhyddqHTN+R5HlDMjDdAEjEI1aIPX8Muttk+ZLP+y8a5fmcCg0IVBpb2qpebX3NuM32wAf1HWumdpLy9GLz+yPFy9Ggtxq9HAdp/EZBb6U5RIK1L60CaP9cdOOPk6plGXo0s8+h6PQ7OS/cZOR7fvOxq/sxEb0QyarXDafIEOjbQJMIyfBzAPBK1bG/VqtWvzzvvvBYaza0iXemcc84ZTeettR0nUZYcDOIwg9HLHTt2PA+j8FhFxU3Ki9EMJ7L5XxzqWKiOLk5Ft2i8TynVRcyAcgIZ76HPRThpdVN4BRGzi7Poxz/izEVO3UKZ6wbpHiWiS3ggoy5X0GcHVF+3sqKx3YZ2e+k3bXuIaPdjbHI8kWbzihxsBwwYUIeBagT2MIdyTjp1sXVwY7KaRzsdQHaMgfFdorze2EXNEunloirdunWr36JFi4kEODnINf3PaVtOPZxMXvNopwf8Djdt2vTV3r17++MBV9q4DoA4R7Kc5dpl60j/bkXPi6wscZHaB7B+QnjglG2zVWYBA8cEK0spoVsD2uYe2npMZmbmGOr3OXYxC33H4D8XA95/s5KW0IKUXrUCHt/Milizzq/X3fju0huMjTfeb3x/xS3GslYDjVyBt0vamNnjOxbw+J9emOJvgrrljkgA1LYAay4N5zaax812Z9j/McRDOPaLWheMFgXYgO3MmwjbcjgWMY1cROdfoYjCKi4m0jQVJ2hO3jsB//VuRh0LO/NIBvVcRbR2W9euXZtV1NINEeMFyF0o+W46OJlZ0OdEKD4ra7kJZxxHmUfcyoiXnW0EAO0ncv8Qp7yMgT4RUDRJSy84/L3o+oPdh3aZzvLt304mu3l05oELGXxXIfN2bKpxSSmxk4KXPn36dNI0HzkHORVUZjRWWrFTHx01S6hbt26ANvspsmNaxhBgY9tz+Fkqx1mOjrRXIf770SOPPFLHzBQ7Ve3UqVN/2nxPqGybdR52A+wq6NUefhjA7sRxIvYwG7D+M3V8SMue/F9gpS15epEI9moAe7crWMbDNboY6yf/2ji2dpNRfLLAOLl9l7HtkReNxU36uaePkfPggMe7I7uGf/y8lPJHj84I261RE2V1ChHNEaYxDzFSnmkVG0YCbEBxrZuMRFkjPIPSEox5+OTJk2O+YaubHBjMczjVdqejJ8qSg8wdgOzvdTPJKq7cpLVVDPiXDI47ytJR1wHEnUSak63s5aYGDRqMpR5H+OlaViKsPmPKvw5Qm96/f38FJXGTBkP1IYAzQ8AouRXYh8XY9TYGrScHDRrUzCqyTAIkqxGdd2Mm8Tf64Zib7PIybVakwAJgu3fkyJH1rSIjkgAbv/uEnxHbRdewq/2Ab1z2QnR9NjOHf0QLIKwyCwDgq61sNjkBuyM2MAn7/jv9+Hd85jJmEWfyf76VNiVlYVpWmxxPxtxAuq/QDSxjZo/PWNZhiHHwqzzDKCzCfkro5NYdxur+kxKOsgXauZ7MeXmerHMs1eOmaIAdj3FHSqvzYpxvNx1wPtV3jSjdANuWGY8e4tD0tg50+FzdcbeKjEpModsyyPwJR9/vBtaRdHKet3+75RXjCAfR6Q+K4q1iy0XqQ6LmN6pVq1YQWlYo67ocmz7/E3WMOzp0UqKAbbeDzW7XAMXtuukEALQoKTV26tChQzsc+0WA8UhZA26oDvZ/+1zoNftozQZeZPZY5hKXImt06gKQvUtfnbDlh8p2/o+X6dtifG0HNqFlr6izt1gAW0zbFRLwfEUfZJbkjE7UM7V169a/kH0rfyTZ1nk3wNa9tbOY/d9LYDGSwUJLIte0a9duAu13lZZE2rZt+56ZUE8V5ni8t+d6vPvcQDIuTvMa34+bZpzYvM0wiotNsLZpyz1/MPJqn+ueLy7OBLgzrtM+cbMCcVI0wNY5RREA6YZIzJRnPWl000k3bwojOYbO4XgP+/1+bcsJo0gRtvIJYJC7n9+7OYYx18X74eP8D1oLtOVQhADSYLS+BeeKOiMhYqrHyD5TM4NQObZO9nnKPIHz7RewAF5mm9AW23SONOZaqdK6yaEoOXwh7fLItdde63qnvCzClKoSdYyh/OVO2c4ybLbPSRecejF9P0wyykuRANtql5NqA3iX+ocyQ/tsH9eO0ieF/DbzhLaPzQJF3VzTElJJyWWT0hLFPkkZUaNYtYWl6wHK2aH+o04b0Wu7zumaUy9EB+UXK50i7TJ231QBhNoBQH8jfcS6WvoUSW9+70WnLfILdFpv6XRQOsXQZvsAutuiLUPGCthiyj2iPrC21UWj0wiKetWuXXux6uImy2arTFfA1uAGQPdntjADeaOpS3Ov19u0S5cuwwj8/kRb9jcTLq7m7xxI935RIY+bE0FvfegFo/DgkRKUdtD+j7808ut2d88XB+cD2PnV/YGF6eZadtwUDbAZVY/QMFdCrUePHt3KjceMGdOSKWsnGvMnyPmMjj0cqfO5Pp+I0jVSihZhk2+n1uYyMzN7UU6/UOb8+RzHAHzPEGkuR4fjbjpQjFG3bt25dH6nklLDia7RdOwOHGSXZLjJ0TnKOIS+uTjgM4z2V2mLmNqDqWjrfv36dcvIyNBd/+cAxvxobSJGznbKvO7pp5+O+248Rt2AiO1xHPRwqFz6tEjO71Y2Ou1F93vHjx9f7n29kQBbtkSf5TA4X9e3b99+3bt37w84XGAzDtq/W7duVxCF3U90OptBfyVgFLGN5PjqD6Kse2LZWmfd7PoFefa4ybNYuy0OYi+5AiKAYNxFF13UDVtvMXz48DbYdHdsfyLXXkG/FdLPRYbJ6FeAnLkMElmWCmGkQAVZD1Km6WcR7KqYftyNzXzBYPOQlvAuvPDCzujUbNiwYa3Q8TzOXUub/Zm6fYusiIOR+gC91wB2l1gqhFE8gC156LWe8scJTEskhFEVdGyEfjOpx0n1m5ssm60yXQFbpEiddruAIOt5ou0nNGtA32ewp0G6ljIvJeX0krXrCoiu4cUN+xi7/vyOUXTiRAlKO+jElu1Gfv0e5rKJW95Y2VrLPpmf7h1TngdqIgE2lwRu+2msPvyO6cYYBtuNTv2UjjjplGUzRrYOp8uwkgdRpAibSwbAsB49vSUpI5MiZ43A6P0FQHXCliHDsA0SQ9J0MaIRy0DkxDI2NyPWefRcA9hptqDtVBFnNrNmzUpVmyjSo+66aRnUxrZeksng+E+meuFblcog2lNt/rlkOGWLibq3aO0ex95P0tIydZQu5HsfwC/3zccogK0bvR8DeBEBTIQbVJk8eXIdHLYX/f84um50q4fdRhqMGQiHWtkjEtPmHtjAUrt9nXJsWfThOgD0fsrOijZQTpgwoQbA1psZ1x/Is0F5nTItWcspc1Sk7X46TzsPAUAjBgHIKaR+S4gopzBwtIokS20GWNUkQBmAXf0Je97pJk/n6Pfj+PY72qVlZQ+ieABbzKB1kj7/BB9rXSIhmIiDUpEnm9gW2k5ubF2PCNgi1Rcfq0lg2H7w4MHt9UBa6awhu1aH+jke/5/cgDFu1vp1uyHG/o/+aRhFp9avS6mw0FjW/mL3vHGynoLM8/heWVbHG/cm9zIAex8G1JvfMQG2ns7CiHTza6dTls048Q9EVl2t5EHkBtictgF7I3rGBCy0bFV0vhbn+D6CIR9F1k10etiao4yBsp5F/0NueXEAAWs2+ScQ8cTc1jhgfSKTazQQKOINlUsS88YOs48HidQj3pgNJepahfa+Eafdbsuy9dYRQP4HkclU2nWRfd3JAPq3gNZ42qJc2+eiATbtNAfH7lKSsmzSAxqA3iRsMeJUmrYrIHp79bnnnou4c0TLWVp6U1+F5lebIEPrsTmaFekBLytbWVRF/UJbTsKGl0mOJUtR7EoG2ivVF1baMCLK1fLMW5FATJEy9fqE+g+MFgCEUFVAu2mTJk2mosMGW6dQ2djVVnzrRvmmla+U4gVspcHWDuoZC5cBxVzywSY+j0WW2EoXFbCjUk6qtz2AvdINFONmAHtVv/HGkfyVYevXNn03/PrEt/fBWhZhZrAkp4YvA++PCVxtqkjAFpH+aoBgfWinccmMTAEu1+WIigJsEVPiDJzyf6lToVOemHMnAcbfag+slbyUFAUBcq7Rtf5zbSlOO6o8SxdyxPbt249XlOhm0DqH483XjVkrS5lEHc4GQF4TONky7SOOqujqUd08pS1mqE7O8sQ43zGA5GkisIaWyLioIgFbpL3pAOlY6rTCrY3EtNFqANLtQQuT6MM+5F/Jz6B8kkc7CWDzAJyR5RmktMeZ/hlBH26VPEXW2MPYaDuPNHXHJy7ToOpmV5w7QT/NZbYmP4ubLr300lrY1U/xuf1OuTYzqJykjz/q3r17SytLKcUL2Jb+asN1eqq4REoJKbqmLe7F7sJ8LhJbZSYC2FmXBTy+Y26gGDd7vMbaq241Tm7bZcFzOG196I8VcuPR3uKX5/FPiPfmY0UCNlWqChjq7rBp0KHycPBPAOymJamDqSIBe/r06Q3r1av3ppzBKU/MuQLkPUY0cJaV3CS9rwDD/i1OHbbuqbqg22Z0H69lDitLuahp06aKiLfxM6gMMeC3h/a7U45Ukjo60SbDGUS+DW1rS98V2gKldEznJ2maal9zpsP5FgFgF5gC46SKBmyRlkho51vRa6cFEEH60j9HiEafwtbC+kGzHqLrX7v1u/Ki6/fY88/JG1dQ4yQ9qcqgMpG6z9PAUZYs7Pps/Oh/FI2H6qN2AmgXI6dcD6bYhC3XIDq/UwO3LdtZDmXsoo+vsJKXUjTAtvQzf+u62L6mWQo29Q/5jOQw+FUleOhJnx0JlSO2zzllOs4nANjp/gfcALFcXCPT2HTbI67r1zbteesjI79BT/f8cbAF2McDaf77432bX0UCdq9evdrjTG9jOMedssR0soGsO3RDyEoeRBUJ2HrEGcD4kDoVOOWJOXdS688YawMruUl6sIc876GnWx6jUaNGMwYPHtzISl5uIuI6mwjtr07DtVkOR5u/zhTadY0wlND3IeUJdRK1NWW8g5N2VjqO5wLsn7mViTPvZZC4PZ796TZVBmCLcP5MdJqjejjligUW6ls9eGIlLyWv19ue9nvHrZ7kO8K1Pye6lRHS8khdlV/WawYEZNh1D+z661B9xAQ2B2jD3wEFcT9WHkqAflvq96VswcUejuqGfI8ewdgQDbDRrZiZyhGO5v0opbGvKS1Bxy6i6snSXX4Bva12D5UDF1P/fbB2cQVds9KWH7ADad533ACxPJx/Vi9jx9OvGcWFhSY4FxcWGQW79poPz9h0JH+FsaztINf88XJ+um5eel+el+K+bS4SRQNszh8AyEZOnDixyVVXXdXYjRllG0+aNKkF0+qLcbLX6ci9zk5TJ4qRpeWQHiWlhpMbYIu5ZBD5bogHsImAJOsbF+OR8R6nrGl2dGATug0kQljslofzu5gKX2olTZiaNWs2EaDbEFqOysZJFqFLmcsiAgxA+RM7n623jjjZHmYY9wpYlJboqz7t/xh9czS0fnIiAHBWVlb8e/krC7Bvvvnm2gwy0xlMjjrliqW/+ok+DtqSiDtVxUYG0u9LZW92el3SET3XAGphUWZlEsGJh+BgHP2x2dbHyfTHt1q+s5InRIBnTWZUUygraIeUftMehQJzgDFoVhkNsGnHY7Tx+/hetq6FXsduCrHV+b179+7RqlWr60P93mb00Zr368iZF3rd+p8AYHt8S93AMG7WDUeAeP8/Tt1wLDx6zNj/vwuMgt37QW/zlHFi01ZjZd9xZjTuKicO1jp2dvWM99d4Ose8V1UUCbDVmDR2Ide+o7PzIzHAkI9zLsEhNrpF1pJD5+/T/mc6NuJUvwzAjjnClgMAJLPRPczZuWxGNcgaQ/OXzhr4XRXj/Al1WB+aR/pT/geZmZltreQJE1NYrbF/GhpxcEmR8QbaYqxTPzfSMgdOEgYE0pfzS5npDLeSmrsUGEyvon6rLScpZS6rf76nzFElqWOnygJskd7dAiBsccoVS3+AXE9A/sRKapLeOqmBMLRNuGQGDLTrvCeffDLhGVI8JEDEdu5Ap7DH9wWitFHJwx8VQMzcTqP+faln2H581Z8Z1obQWUk0wEbnQ/jJ3QwEkwS6zms2c16vnZhDP+WF5hdzTnXMHjp0aD/0mu1yXcfyA3ZuagU8im6yz1jZa6xxfM3G0huOiq433fGEcSSwvBTEC/bsN9b95C4jr1YXFxnxsXXj8YuvUzM7YaUxr9FFAmy7QctiGYPzKLbzcq5AIKyR3+0mn5OiATbgs1XrhUOGDGkNIHdwY734htnAFEAkl4HD3ANq6+KUxQCzMHQrm5xde3wx0l3O9GLJwekexCHifZdCRELfBrT5C+gZtvVQ64BEZVPlgFbyMCJ/U5zkJXQL2z6JDEVTr+GcrazkJjVv3lwR+Tuhg4RY58jzJCYZ19S8MgFbWyYZlL5yyrVZ/QQ4TUff0mUc0muf83QNyPwtTas25VwRur5ckvLHI2ZKZ6pd0TdIfzFttA+7nmYlTZhoiyq9evVqTT3fDrV7MX28r2/fvoOt5CaVBdhcu0UzUfz3BfmB87pYedTXYrcyGVh3UsYIZkxnYq8VD9g56d6TbmBYHl4z4iajUNG0RcfWbjRWX3C1sXf2p6eWSY6fMLY9+qKRV6erq4x4eDGAHUj3fxWo5u0CMsXseNEAOxYO7Sj9FwO+eqpwjpZKYnkzXSTAFqNbIUC2UxGXGwNEehpsj6ZpbvltnbTei053hy6HDBw4sAbg8AiOXbpfWazfGF0xTjBFd/vNxBVAag/K+zVOUXqD025HOTf9MR1Dj7imzOBi7mZxgq9dR+qwD+CainkF2YAAjcHqHtpgN39L89lM+/6TAc91y2UkqkzA7tevX1vq8QE/g2SLqeMert3/wQcflNoVg3ADBrrfce0Yf4PSo+NhZncPlaT88YiB/mzKnuk2SNIP2+mTuGc10Ujv6qFPnpedh5ZHnxwgqAlaEooG2Nj9IXzlVqUj2NI9oeXIMAf30LShbNnhcfI/gx2edv3115+Fn1YGYFfQO6+rZxmbpj1qFJ04aQKz6OCCPGPpOf2NrY/+ySg6drzkJNH37r9+aCw+q5e7nDhYgJ2T7l/4dbUu5/6YgB2J6SDdqPuoRYsWP9fb0nQDxirSlaIBtpgkEdmZxpnHyTIOIpqv3R7mIGKtCYA+6gbY6HQYJ7iGNBX2qk/drCJquQtw3snfUv10FGDTdr+KBNjaxgUw3a28TsfRbzFAHqDNXR/AYfo6HEdc4swn5pIJIADMTSUpY6PKBGzau03jxo21ZBAkW2wB9gOvvfZa6aPgAPJZDEiPce0kf0vT6jd13te+ffu7zYQ/ImFvjWmfl9wAm3M/9OjRY4CVtEKIWVRd2t11Dzp9cpDgKeiteGUBNtdMwNZ2RnDiZ9jcPoF2aNpQpm6FmskK6JW/0gA7Nz3jqBsYxst5tbsae159z7zRaNPOGW8QSXczNvziQaNw1z7rrGEc+HyR8U3HYQm/J9tcw073z7fekV1hgF1W5zhZaZ2szqXjdwKGrzD6+6OBXlmAHS/bett6YMjfaR+02519RdiAwyMYZNBeVi4pOisUkFVkhD158mQ7wt7L36DyaK8iptF3RWor7fwgGp4tp7DrKNZvOSqO8sINN9zg+lCPdhIA6K+TNmwmQt6TlPtyPDcfKxOwteMIUP6Yn0GyxdRd2x+DImwtP2j3j1uELfBhEPttScofj2ifRpStpasgfcTUYTvNUxkR9nOhgC3boLwDAONYK6lJsQK2iMGlCX7wIrLNd/U404rtcxz1/qEfmPFcbe91r7wIO8271Q0M42U9cn5sxdrS9WvR9xNuN0F5zWVTjONrN5VeO7Z6nfHtsMkJP0BjArbH/2lOatf2eH6FrGHrnCIWOul4JOb6cYxBd6a1bhzpvRVFONhfAcyIb1yrDMAWqw4Yy1IMaAKRgut7M/R+CqITAejuUDnorrf8VegattbzAdYZtN0J/gaVRxscwelc17Axl6pNmzYdi0OsduaxmfN6WvJaK3kYKT+yb6FO5kcHnCxQIf9SBpIyH/22qTIBm4GjK3XJccq1mX7aAZjfSX1KZyHaEcOg+yuuBd0gkw1wTvuGX7KS/mikqJ92+AP9HKS/GJ/Zh763WUkTJtqiSteuXVsR1c9y80GVRxsFfWkoHsBWAIEP9a5Vq1aObMWZVmz7G7Z1lLZ+Wp+Ps7JWJmD7F7mBYVzs8RnLM4YbhYeO0oYlVFxQaKzqPda8viJzpHHwy9xTNx73HTA23PiAGZWHyYqDBdh5Ht/bgZQOcd0JjwbYnC+kU+8ZPHjwaMBulBuPGDFiJNP0q3Cw3xDhfElHH3DKsjtSRgso/pKOj3kfdiIsw0HemiZNmjxLtJYZ6d0MIrrhNIDwZ+i4yU0WwPQu2BPT3uhYqHPnzh0x4I9woqByuKTdDJtppwnoFDboKoIiClYEFQb0YvJ+yqAY9Z0rOF0f0mUrveUwJssJAbZ9yH+QaCqmNwdWFmCr7p06dbocPUsfubdZOlOm3knzUyu5SbpxTBQ9kT7czN+g9Kqb9qG/+uqrZb4juiJJgEhUehc6ue0SOcmg/aaVNGHSAI/d9Kbdl/A3qCy1AfXfpBdJlaQuoXgAW3TzzTdraeRa7C/s1RNqY7gAzJgbWk6lAXYg3f+aGxjGxWleY+2VtwWtXx9bs9FY1nqAeT3/zB7GnllzTt14LCgwfnhoZsLr2OhuBKp7Z6xKaR/XV1UiATaXtDviBE6gPcExLbEA4K2JfP6Ige51ylLHiDGm5ZTnuj0vEmArH8BWhJNq8/0uB+/FcIJefWmzjAfd54IXg/XyHquIqNSxY8eLkWm+J8Ipi0taU97WunXrCvkOooi6jqOsoHed6Le4Ro0aX3P9QitpECnCwfG+ctORttA9g1cYQDMHDhzYUn0RyvpA8siRI7szsM5WGzlliDWAIP/Dtm3bxvTe48oCbH3jEPD5HaBhvjM6RLZ0XNyhQ4egF3jhSlWx1cHo4/roP+e/02s6reQ/CulBFexQ2+K2huojZoBcNnr06HK/y95J9H11gpPJtFnYdlb1B5H3QoKls63kJsUL2CLsSEtPr8gnnQEH+fWmwS2aydIXQcFG5QG2xzcN4EvoxmMgzWds/e0LpYAs2jt7jvkgjXnd4zW2/f5lo+jIqQh8z9tzjGVtB5d7Hdt80jHNdyg31Xv7vJRz4vr6TDTApmPiAmxR9+7dexAZzaczwtZJ6eATlDdBI7WVvJTcAFsdyiUBvR5cuYPocQxgchXgeYX2TaN30Fv57DxiDDSPNN1LpJdN3bp160zEo6jXbX3XwBkec07zykt67zW6vYzMsBkNjq016Dcj7fmmP27TwBWaj0vSUR8lWEuaz4mSP+X3Zy78KQDyOc5jvnUuVI4YR13DlHZiLO/aqCzA9nq9fdH1q1AduSQb0rbFDwcMGBD2IQqi8k6034dOILGZc4epe8T1/XhIy2PDhg1rW9buJ0W9rVq16sMgHLa0IxtFp70A7V1W8oQIW29F3+v9OUHliCnnGDOSGaH6lgewtXlA/cqgudpZFr8LqMtz1DlsBl1pgJ2fljkA0D6QX6ersbL3WGPD9b8xfnhghskbb/2d8e3gnxn5Z3RzBc1Srp5l7H3vs6A39AnA7XyB1Axj/fX3GQW79lhXDeNI4BtjZY8roz5Ak1/7XGNFjyuM9Tf8xthy3zPGD/c/Z2y85SFj9UU/MZY06Gnkefybc1K9l85LiW83Q0UD9o4dO2oi7xU6I+hdveocMU7+CA4Z5jSRAFtH8qxHD7/SyWBosiqwIqqrAYwg8LHLweAMZN5PxBnTk596Ux/11S6DoC/M2Eecbi1R3SjKjbi0EgvhwD+lnubDHbZsm9F5PzrcQyQUprMe/wUE/yYwCs1ns/SOdl2sNHb93NJRf30b8HmcOejRfTeqDMBWPQGXR2gL8/3YTh31m4FJj5hrz3jYLhq9qQ/QuJ/y3d4ho/sDK5s1a3allbxcpEf4CRhGNmzY8DPsb4R1OiIBpE3Q9zX1i3Sw9VFd1E7UM5vIv5eVvFyEvXiIbG+kbcwb0c42E3N+V5s2bcZbyUupPIAtIspOw46vw1ZMzCCv7hOtYxB1/XJSpQH2xnG3tNow7eHlBz9baBQeOGQuVyhSNrmg0Cg6fsI4tHCJsf66+4yl51xk5NUMuVGoJxzbDDKOrz31wIxRVGh8P+6XpLUejiECNx+q+f7UjUe9IOq7S24IlwcvPruPeaNy7wefmw/aSA+nTsUnThhHv/nO2PjrPyz5duoDHUHamG84iioasKlOKhH2i3RG0NRMl9RBjRs3fp1AKGhqJnIDbE6bTES6HicOW5vt379/Q6KmmRjOIWc+mwFZvVpyJDrFpD9GPZw8S+RYtgHrKMbo9XDJIpxr0Lx58+IaFEXSAafSm97ynY5rs8qg7EXNmzd33eqlWQVRTdjj7JXB6JGLrmW+kKiiAVtLIQDBnZTv+npetRHttwKgiXhjlFnYBZS9hp9BACkWoHFtAQPvoFhtwkmadWAjA/GXNQJg+uMb+uXKaO9hEZhiu+Ox0V1Ou7KZc8fR6T2aqsz3vbuRdhxpvR/fCVvvt+TrlbSfZmVltbGylFJ5AVukoKJjx453M6MJgBOfnHfeeQOtS2FUaYBdXFzcsKio6B06MzIBsgLzfX//1Fgz6iZjceO+peCal55pvqGvYPepbXsnt+40Vp9/9anlDkB9SdMLjMNfLzkVhXPccu/TQS+Cyqvb3VhF1L1jxhtGwU6icceOEzdC79kcwoCwLIoG2IBh3IBNx3XE4T6hM1xfosR0+w0cJuzGaHkAW4SsS3CcfMoLW2JQeeSdrZt8VvKohPE3IL0GgNK3julosxwe0J6Lk47oFccX2LV3GkfXTbQF6BS0Hc9mytR+78e6desW1ocMEB4c43E7ggrNW9GclpZ2mPLuwZ6iDv4VBdgqR9EZYH0P+cwvmzvl2UwbnSCyfXHhwoURX7o0ZsyYM7GVJwWozrxqN52jDbV98UuA/VLdqLSylUndu3evjY2OQr+vJUs6Ik8fgfhGfRutrfx+fwva6v3QKJtLJqPTEXzwbXTqFe3meAhV0U1oLQ1iV6skN4Jd7dADMPG+D7sswBZpoLr11lvrMZDVjlb/SgNsCq0GaP8M8Av/plcYFZs3E3c8+xdj9ZCfGd90HGqsHnytsW/Ol0bxyVM3HPd/usD4plPoPutMY8cf3zIjeJuOLP3W3Pq33HepserCScaWO58wDmcvNaPosgh9C9B7Ij/j3itcRoR9PB7AHjt2bAPSa3vcD05ZYtvIcZbnmLaGTbfLC9h6URADy5MYpr75GGR4+g2g7CJqvZlpXEyfwgLcB+MAZpTN31I5tkw5KXouow5362k82jza7pMqpOnIrOI+8qwkb9D6uK2vysKgFwFYrlEtDt8dYPjCmdeZX0yyuFkyVLbYKVfAgj7vlvVx4GiATf6PicCifnFGM5VRo0Y19ZZ83u0NBnpzu6FdJ/u3rSMyFzMGlHzLLwoxoCrKXqs8thxblq2fQA7bn6avu6ifrKxhJFACrDvR379RH5K31E9s3Tgv0L4EOa5+IhkA62jaqnQm6NRLTJufoP4LtWRGm0Td6XX55ZebXzJi8HoCXzM/XuCU5ZB5knrOARA7WFmDKFHAjpUqDbBFAF8WALio8PAR4+D8XGPXS28bu159rwQ8jx6jT4JJyyTHvltvRszaU1101HqKESo+ftzYTOS8+MyQV6imec318MJDp8aF4qJi4/j6LcbhnGXGsZVrjcJ9B05F4BYpxj66Yo2x+9V3jZ0z/2bs++Bzo2jHbqPoZMEqLsX9VWlRJMAWE2UVMN26jQa9CO4fifXEFsdrGMnfxCi3yiFCZVnGXcwgMFXv77WKL6XyArYIw9PuiWwBjbM8HeVQ1G8ukXhPrX9bWSIS7agtfvfhCEEPtThZMrm+D1CYT50fICoeMnr06LbIb/Dss8/W17cdmYIOQc5Diqo1mChPqBzpKKbNzJdjaXpbokUwUf8biMJcdxrYMtyulcV2Xmd++z99sZ6BboylgitFAexibGcpEeBdF1544egLLrjgSqbQV4n79u17JYPYOK5NRf4LDOBfIGMTbeS640fn1K/073Zs5C63G9ahJCACzO4CdMK209mMXPP7iQDJ502aNLlfU3p9u1T9p36cOHFia0DxYmaEj9IWX9P+rl/PF3Ne33T8nMG+m6VCGLVrp4+xNHjGaaOhjGytaW+j7T4k8PklPtVPb8p86qmnzpg+ffqZgwYN6qDH2QlQnqLNlqKT65eRxOoD0qxHp4hr9v8pgJ229enXblg99Gfbl7a4yARbbbnT2/fWEQEfXfat+Q6QMgl0PbRosbGyz3j33R81s4y978w1ih3b/yKRouzj6zaZHzxYnjnS1CcfvZY06qubo0e3P/vmOCM3N+I6WjRyA2w1pIwTgxBrX3XYV69txgBNxvgP4HQFkQxIjOFvJ4LQNyLDKBHAFuF0D6JD0JOK6GfWBeM7hgP/NiMjI6YvqwwfPlxr438ViDjliZ3143cxdT9Gut1yDni5xetoN30tPOgr7mKnLDHpNIg9F+ld2wBcS0BN26jCbqSJqds+6j6LgXU6oHAXkdz0sljpiAjvpY7vaOAJqZPJlKc3NT71+OOPR9wWGQmwrfwFAhSO+nK63oVcyvoPH+a3HrYy28epQ6gsdNylaJK2iPkZA6LsNtjNS5QTtuvHLk9M+dqepq+379YgBS9ncFjOcZ3OcU19WKqffXSy6ol+M7R7xCo+jHDjKoCnX+u9bnZgM+XZOh2m/J2077fwUvp5BccNnNN21hO2Tk7dnEy6A+rj3Ci48B8B2KLltXvUC6T7/uL2MiiB+NYnXiHS/Z5omojbZWlZ77w+/PVSY+3lU43cSG/i0wM2vkuNfR/OMwoPHCZTuKBiIuyTW7YbO19829xFEvpWP33LMdfj/5/8lMyYvwMYStEi7IpidYwMEYB4QZGGVXQQJQrY+rI0RvFPleOUIVb5OKFeITpa01MrS1Tq3bt3Z8p9A7AI262QKNvykK2nwl7SW9asYsMInUeiu7lE4yaHyO5LwKlcuwxw6IGamUSSTXsuoL8ifroqEmBXFEsvbOIH+v7hYcOGNSkpNTbCfaowy/Fhc28AcK5f0a8IBhiPUsas2267rcxdNdrmR1/1xN8+w07N4Mat7cvLtjz6ZA8R+nO0QdQZ5X8MYIMSVXJr+vrkpPvWOAHS5vz65xmrB15jbH/yz8ahf+WaoKobgyd+2GEcWbzS2PXy341V/SaU+fmvvBqZxnL/CHPb30HknNiw1SjYsds4sXm7+S3IPX/72Fh39e3GEt3YdInSc9L8ywJp/guMOLfyOamyAVudIhCljGUARA85klV0ECUK2CKMdAogaH4Ky8nSAcfSgPFGx44dY35QQS+KApT+omglVGYiLH1wiL2A9Uy9G9sqLoz0uDV1f1BRlZsc2lU3QZ86//zzywQLN/J6va3ol5fpe9dPalHudqbnUyI5fmUCNnXTVrFVzMhu0YynpMT4SDfw9Ig7/a7Z0lFOuZZVXla/0Icvh75nOhppS5zuC9HuH2GrYTfmE2H5MP2xtVmzZo8NHTq0zA0I/zGALRIIEsFOyY7yjUctl6w49zJj7ehfGGuvus1Yc9nN5hLI4qbnA7Duedx48Vk9jeVdxxhrLr3RWHvlrcaaUTcbq5CztEV/173ZJZ8E8+/MqZE5NTcltu//RaKKBmx1gpOJbooBlSUA5ZV6yZJVbBhhHKNq1KixxupEkzltMsCwHj3LBGy9SwGAeZcyg5YybJkY4RGcZZLbHXM30uCiz041btxY+4LN71Ta7JQfC9v5FAFRz/VNmjT5jSLrSAOYiDr7SPuR8oTK47Kiz80MZEEv9ImH9DFhpvI3ATyu6+MCchztVabyrjMApvfj1Kb8DMsbLzvbB5k7Adm32rZtO1TveSkprXyk+xZ6EAldHwYgza+iONlNFzd25kHHItp+PW33gJasrKJiJgbY07GrLuSfiU6lSy62PiQJKz+UlcapkwZvbGUF9j1V213NgsogG7Alzy7bZvSqMMCeMmVKQzDg77bedhlWmQX4QdBbBMtNC1M61QMgX8sp6+lHRb82u12PlWOUo6UaBpOXFqb4NU2M6PCxkA3YimjshiwvqwNkfIqoxXT6SSKQ9wHrARhH1KfC3ABbzKWYAVuRoACZKGOd9HDKsRlA/zxaVOtGOFhNZgcTMLoAdSrX1jrpQ16VryWMEWXtWlFdGCgmAV7rlN9Zpv2bfvtY2yitLOUi2qtfzZo1F7rVSTpTfj7AUvr1GicJsAGuiDf2ymKVKVY5DLIayPZgL2+0a9duRJcuXRrFcpM4VtL7UYg8J9KHi6iT7j0EtWlZbOvJ4KaPOM+nDy+NdedRBKqiOjIoTUGnb1V/lcH5UnbTw2a77Sw/O96oUaP3mU30LMvPnPRjAbYibOo429bZLsP6X3GALcrzdDwnN83/NqBdMV9TT5DRoziQ5n8rLz0r0Y+JmoRztCSa+QDH+15AlyjjdKvr1KmzoHnz5s8zVexd1odKbQI4BtOp8xS5OOVhOJsArn+1h6ykUUk3pgCYJ2rVqrWS/BucsvQf/VYxgFwf+hGDWEgPdnTo0GESoKvp7Gac5QhOHLYjxmauCRgOU+4mwO0fRFXj9DSeJS4qCQzol99q7Z38QW2i/0S+W2jjKVbyctPIkSPro9t9yFwruY4y1tEXGylnMWBwixs4MUsYRlssUzpnvhj5O2RrMJhD3z8FeIz5+c9/rpuKCQUgZZG2nmZkZIxXH2pmof6BXV8ZavVhEWBq9iH98Q/0HMtAEtfrH6KRBiUi4iaY9xQG4K/QSV+LPybbcdNHjL6FpDvIwLOGvnkLnYYiJ+5lUT1LQLkvycdC+mYduixr1apV0GfYykuTJ0/WxyWeR+4GbKW0DOv3GnBipJU0cbovJaVqdrVOmYE07+xAuveIG4j+WExUXRDwZHwcSOvcmiG4Qgybzq6m/bZ62XiiTLTXVrK0NzqOBwBM0nJJz549zwmV2bVr1/Z6aZH2nlpJy6IqAkUtN4TKsplyztINICt93DRs2LC6fr//QiKQX+H4rwOqn2H0C3GgHDFGuJBzc3XTElC7E6Duy8BVL9ryRyhJPyL7s930x8DbaQ/4gAEDKuSVr1orV9+5laXzkdpLfUbeVrR1e7e8kVgy4RZam542bVqNeNqlomjcuHF1MzMzBxAM3EsfvgF4zAUEF9KPORabfQhI/4WB8Q707qd+t7JXOGlGpfbQtj10ehjAnI1OX2BPizjmwNnY1VcEIp8Q4b9MoHUL/dIt0lbQWEiDhda65WOhfST/SXAGUUoqR7Ysu3WWYdtxrC9oi5kEjkuqdc3ISfe+Cp9wA9NKZ4/3KJH+WznVfBkaRCzVkvRvJoyxOgNEs04Q09vMNm3aZOF0nXUu0fXXJFU+abBQHzJ7as7Mq7P6j67MVH/q3O9///sfvQ+l0+23315Lb11ksPeiVxa25c/Kyuqoh2pivQfzX00C7W88nZsR3T4R8PgPuoJqZXGab08gzfdYdqqvHWBd7h0hSUpSkpL0X0ULUnrVyvF0vjrb41tS2evagXT/yUCadwlR9ZXWbpAffeqYpCQlKUn/39PCtKw2AOrDOR7fspz0yFv/4mXdVETekWyPf1Ugzf8Eg0OzilqvTlKSkpSk/1pa3uny1GxPVs+cNO8TgTTfokC674AbCMfC2lsN+B/MTvcuALQfXuTx9SGqLvcNhSQlKUlJSpILzTvz/JqLq/szA9UzJwY8/hk5ab48eG8g3VvoBs426zrpduV6fNnwzIAnc+LX1TL9y1M6uX73MElJSlKSklRBpK+9LK7jP+PrNF/LXI+3b57HPyFQ3X9Prsf/DAD95+w039vmdyM9vme59ivOX5Hv6dxL6ZfV8dY1Usq/1SxJSUpSkv57KCXl/wFvliKPySXrOQAAAABJRU5ErkJggg==
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - gateways
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - gateways/finalizers
          verbs:
          - update
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - gateways/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - repositories
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - repositories/finalizers
          verbs:
          - update
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - repositories/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - opentelemetry.io
          resources:
          - opentelemetrycollectors
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - l7apis
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - l7apis/status
          verbs:
          - get
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - l7apis
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - l7apis/status
          verbs:
          - get
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - l7portals
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - l7portals/status
          verbs:
          - get
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - l7portals
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - security.brcmlabs.com
          resources:
          - l7portals/status
          verbs:
          - get
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: layer7-operator-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: layer7-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --zap-log-level=info
                - --zap-time-encoding=rfc3339nano
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: ENABLE_WEBHOOK
                  value: "true"
                - name: HTTP_PROXY
                - name: HTTPS_PROXY
                - name: NO_PROXY
                image: docker.io/caapim/layer7-operator:1.0.5
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 20Mi
                securityContext:
                  allowPrivilegeEscalation: false
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: layer7-operator-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: layer7-manager-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: layer7-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - layer7-operator
  links:
  - name: Layer7 Operator
    url: https://github.com/caapim/layer7-operator
  maintainers:
  - email: gary.vermeulen@broadcom.com
    name: Gary Vermeulen
  maturity: alpha
  minKubeVersion: 1.25.0
  provider:
    name: Broadcom Software
    url: https://www.broadcom.com/
  version: 1.0.5
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: layer7-operator-controller-manager
    failurePolicy: Fail
    generateName: mgateway.kb.io
    rules:
    - apiGroups:
      - security.brcmlabs.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - gateways
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-security-brcmlabs-com-v1-gateway
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: layer7-operator-controller-manager
    failurePolicy: Fail
    generateName: mrepository.kb.io
    rules:
    - apiGroups:
      - security.brcmlabs.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - repositories
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-security-brcmlabs-com-v1-repository
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: layer7-operator-controller-manager
    failurePolicy: Fail
    generateName: vgateway.kb.io
    rules:
    - apiGroups:
      - security.brcmlabs.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - gateways
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-security-brcmlabs-com-v1-gateway
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: layer7-operator-controller-manager
    failurePolicy: Fail
    generateName: vrepository.kb.io
    rules:
    - apiGroups:
      - security.brcmlabs.com
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - repositories
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-security-brcmlabs-com-v1-repository
