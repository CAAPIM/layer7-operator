apiVersion: security.brcmlabs.com/v1
kind: Gateway
metadata:
  name: ssg-configmap-test
spec:
  version: "11.1.1"
  license:
    accept: true
    secretName: gateway-license
  app:
    replicas: 1
    image: docker.io/caapim/gateway:11.1.1
    imagePullPolicy: IfNotPresent
    management:
      database:
        enabled: true
        jdbcUrl: "jdbc:mysql://cluster1-haproxy.pxc.svc.cluster.local:3306/ssg"
      cluster:
        hostname: "gateway.brcmlabs.com"
    updateStrategy:
      type: rollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 2
    resources:
      requests: {}
      limits: {}
    autoscaling:
      enabled: false
    log:
      override: true
      properties: |-
        com.l7tech.level = INFO
        com.l7tech.server.policy.variable.ServerVariables.level = SEVERE
    java:
      jvmHeap:
        calculate: true
        percentage: 50
        default: 2g
      extraArgs:
        - -Dcom.l7tech.bootstrap.autoTrustSslKey=trustAnchor,TrustedFor.SSL,TrustedFor.SAML_ISSUER
        - -Dcom.l7tech.server.audit.message.saveToInternal=false
        - -Dcom.l7tech.server.audit.admin.saveToInternal=false
        - -Dcom.l7tech.server.audit.system.saveToInternal=false
        - -Dcom.l7tech.server.audit.log.format=json
        - -Djava.util.logging.config.file=/opt/SecureSpan/Gateway/node/default/etc/conf/log-override.properties
        - -Dcom.l7tech.server.pkix.useDefaultTrustAnchors=true
        - -Dcom.l7tech.security.ssl.hostAllowWildcard=true
    listenPorts:
      harden: true
      custom:
        enabled: true
      ports:
        - name: Default HTTPS (8443)
          port: 8443
          enabled: true
          protocol: HTTPS
          managementFeatures:
            - Published service message input
          properties:
            - name: server
              value: A
          tls:
            enabled: true
            clientAuthentication: Optional
            versions:
              - TLSv1.2
              - TLSv1.3
            useCipherSuitesOrder: true
            cipherSuites:
              - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
              - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
              - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
    cwp:
      enabled: true
      properties:
        - name: io.httpsHostAllowWildcard
          value: "true"
    system:
      properties: |-
        com.l7tech.server.extension.sharedKeyValueStoreProvider=embeddedhazelcast
    service:
      # annotations:
      type: LoadBalancer
      ports:
        - name: https
          port: 8443
          targetPort: 8443
          protocol: TCP
        - name: management
          port: 9443
          targetPort: 9443
          protocol: TCP
    livenessProbe:
      exec:
        command:
        - /bin/bash
        - /opt/docker/rc.d/diagnostic/health_check.sh
      failureThreshold: 25
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      exec:
        command:
        - /bin/bash
        - /opt/docker/rc.d/diagnostic/health_check.sh
      failureThreshold: 25
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1