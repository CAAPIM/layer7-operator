apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "layer7-operator.fullname" . }}-controller-manager
  labels:
    {{- include "layer7-operator.labels" . | nindent 4 }}
    control-plane: controller-manager
    {{- range $key, $val := .Values.commonLabels }}
    {{ $key }}: "{{ $val }}"
    {{- end }}
  {{- if  .Values.commonAnnotations }}
  annotations:
{{- range $key, $val := .Values.commonAnnotations }}
    {{ $key }}: "{{ $val }}"
{{- end }}
{{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "layer7-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
    {{- if  .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
    {{- end }}
      {{- include "layer7-operator.selectorLabels" . | nindent 8 }}
    {{- if  .Values.podAnnotations }}
      annotations: {{- toYaml .Values.podAnnotations | nindent 8 }}
    {{- end }}
    spec:
      containers:
      - name: manager
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: {{- toYaml .Values.args | nindent 8 }}
        command:
        - /manager
        envFrom:
        - configMapRef:
            name: {{ include "layer7-operator.fullname" . }}-controller-manager
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        volumeMounts:
        {{- if .Values.webhook.enabled }}
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        {{- end }}
        {{- if .Values.proxy.caBundle.enabled }}
        - name: trusted-ca-bundle
          mountPath: /etc/ssl/certs/ca-certificates.crt
          subPath: ca-certificates.crt
          readOnly: true
        {{- end }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 10 }}
      serviceAccountName: {{ include "layer7-operator.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      {{- if .Values.webhook.enabled }}
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "layer7-operator.webhook-secret" . }}
      {{- end }}
      {{- if .Values.proxy.caBundle.enabled }}
      - name: trusted-ca-bundle
        configMap:
          name: {{ include "layer7-operator.trusted-ca" . }}
          items:
          - key: {{ include "layer7-operator.trusted-ca-key" . }}
            path: ca-certificates.crt
      {{- end }}